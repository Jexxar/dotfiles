#!/usr/bin/env bash
# template-pipemenu
# Adapted from a script by damo <damo@bunsenlabs.org>

COMMON_FUNCTIONS="$HOME/.config/openbox/scripts/common-pipemenu"

if [ -f "$COMMON_FUNCTIONS" ]; then
    . "${COMMON_FUNCTIONS}" 2> /dev/null
else
    echo $"Error: Failed to locate $COMMON_FUNCTIONS" >&2
    exit 1
fi

function doMenu() {
    local d="$1"
    if [ -z "$d" ]; then
        menuBegin
        menuItem "No Templates found"
        menuEnd
        return 0    
    fi
    # l10n support
    case "${LANG:-}" in
        de_* ) doMenu_en "$d";; # Deutsch
        da_* ) doMenu_en "$d";; # Danish
        es_* ) doMenu_en "$d";; # Española
        fr_* ) doMenu_en "$d";; # Français
        id_* ) doMenu_en "$d";; # Bahasa Indonesia
        it_* ) doMenu_en "$d";; # Italian
        lv_* ) doMenu_en "$d";; # Latvian
        pl_* ) doMenu_en "$d";; # Polish
        pt_* ) doMenu_pt "$d";; # Português
        ru_* ) doMenu_en "$d";; # Russian
        * ) doMenu_en "$d";; # Default to English
    esac
}

function doMenu_en(){
    local files
    printf -v cmd '%s' "mapfile -t files < <(find $d -type f -name '*' | xargs -0 | grep home)"
    eval "$cmd"
    menuBegin
    if [ ${#files[@]} -eq 0 ]; then
        menuItem "No Templates found"
    fi
    local fext=""
    local fname=""
    local fbase=""
    for fname in "${files[@]}"; do
        fbase="${fname##*/}"
        fbase="${fbase%.*}"
        fext="${fname##*.}"
        fname=$(echo -en "$fname")
        fbase=$(echo -en "$fbase")
        fbase=$(esc_enc "$fbase")
        if [ ! -z "$fbase" ]; then
            case "$fext" in
              db)  menuItem "$fbase" "xdg-open \"file://$fname\"" "libreoffice-base"
                ;;
            docx)  menuItem "$fbase" "xdg-open \"file://$fname\"" "libreoffice-writer"
                ;;
             png)  menuItem "$fbase" "xdg-open \"file://$fname\"" "graphics-image-viewer"
                ;;
            pptx)  menuItem "$fbase" "xdg-open \"file://$fname\"" "libreoffice-impress"
                ;;
            xlsx)  menuItem "$fbase" "xdg-open \"file://$fname\"" "libreoffice-calc"
                ;;
             zip)  menuItem "$fbase" "xdg-open \"file://$fname\"" "accessories-archiver"
                ;;
               *)  menuItem "$fbase" "xdg-open \"file://$fname\"" "text"
                ;;
            esac
        fi
    done;
    menuEnd
}

function doMenu_pt(){
    local d="$1"
    if [ -z "$d" ]; then
        menuBegin
        menuItem "Nenhum Modelo encontrado"
        menuEnd
        return 0    
    fi
    local files
    printf -v cmd '%s' "mapfile -t files < <(find $d -type f -name '*' | xargs -0 | grep home)"
    eval "$cmd"
    menuBegin
    if [ ${#files[@]} -eq 0 ]; then
        menuItem "Nenhum Modelo encontrado"
    fi
    local fext=""
    local fname=""
    local fbase=""
    for fname in "${files[@]}"; do
        fbase="${fname##*/}"
        fbase="${fbase%.*}"
        fext="${fname##*.}"
        fname=$(echo -en "$fname")
        fbase=$(echo -en "$fbase")
        fbase=$(esc_enc "$fbase")
        if [ ! -z "$fbase" ]; then
            case "$fext" in
              db)  menuItem "$fbase" "xdg-open \"file://$fname\"" "libreoffice-base"
                ;;
            docx)  menuItem "$fbase" "xdg-open \"file://$fname\"" "libreoffice-writer"
                ;;
             png)  menuItem "$fbase" "xdg-open \"file://$fname\"" "graphics-image-viewer"
                ;;
            pptx)  menuItem "$fbase" "xdg-open \"file://$fname\"" "libreoffice-impress"
                ;;
            xlsx)  menuItem "$fbase" "xdg-open \"file://$fname\"" "libreoffice-calc"
                ;;
             zip)  menuItem "$fbase" "xdg-open \"file://$fname\"" "accessories-archiver"
                ;;
               *)  menuItem "$fbase" "xdg-open \"file://$fname\"" "text"
                ;;
            esac
        fi
    done;
    menuEnd
}

function main(){
    local templatedir=""
    templatedir=$(grep XDG_TEMPLATES_DIR "$HOME/.config/user-dirs.dirs" | cut -f 2 -d'=' | tr -d '\"')
    doMenu "$templatedir"
}

main "$@"
