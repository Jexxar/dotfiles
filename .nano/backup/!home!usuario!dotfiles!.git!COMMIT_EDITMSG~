
# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
#
# No ramo master
# Your branch is up to date with 'origin/master'.
#
# MudanÃ§as a serem submetidas:
#	new file:   .nano/backup/!home!usuario!.plan~
#	new file:   .nano/backup/!home!usuario!.plan~.1
#	new file:   .nano/backup/!home!usuario!.plan~.2
#	new file:   .nano/sample_nanorc
#	new file:   .nano/search_history
#	new file:   .nano/syntax/Dockerfile.nanorc
#	new file:   .nano/syntax/Readme.rst
#	new file:   .nano/syntax/Rnw.nanorc
#	new file:   .nano/syntax/apacheconf.nanorc
#	new file:   .nano/syntax/arduino.nanorc
#	new file:   .nano/syntax/asciidoc.nanorc
#	new file:   .nano/syntax/asm.nanorc
#	new file:   .nano/syntax/awk.nanorc
#	new file:   .nano/syntax/c.nanorc
#	new file:   .nano/syntax/clojure.nanorc
#	new file:   .nano/syntax/cmake.nanorc
#	new file:   .nano/syntax/coffeescript.nanorc
#	new file:   .nano/syntax/colortest.nanorc
#	new file:   .nano/syntax/conf.nanorc
#	new file:   .nano/syntax/conky.nanorc
#	new file:   .nano/syntax/csh.nanorc
#	new file:   .nano/syntax/csharp.nanorc
#	new file:   .nano/syntax/css.nanorc
#	new file:   .nano/syntax/csv.nanorc
#	new file:   .nano/syntax/cython.nanorc
#	new file:   .nano/syntax/dot.nanorc
#	new file:   .nano/syntax/dotenv.nanorc
#	new file:   .nano/syntax/elixir.nanorc
#	new file:   .nano/syntax/email.nanorc
#	new file:   .nano/syntax/erb.nanorc
#	new file:   .nano/syntax/etc-hosts.nanorc
#	new file:   .nano/syntax/fish.nanorc
#	new file:   .nano/syntax/fortran.nanorc
#	new file:   .nano/syntax/fsharp.nanorc
#	new file:   .nano/syntax/genie.nanorc
#	new file:   .nano/syntax/gentoo.nanorc
#	new file:   .nano/syntax/git.nanorc
#	new file:   .nano/syntax/gitcommit.nanorc
#	new file:   .nano/syntax/glsl.nanorc
#	new file:   .nano/syntax/go.nanorc
#	new file:   .nano/syntax/gradle.nanorc
#	new file:   .nano/syntax/groff.nanorc
#	new file:   .nano/syntax/haml.nanorc
#	new file:   .nano/syntax/haskell.nanorc
#	new file:   .nano/syntax/hcl.nanorc
#	new file:   .nano/syntax/html.j2.nanorc
#	new file:   .nano/syntax/html.nanorc
#	new file:   .nano/syntax/i3.nanorc
#	new file:   .nano/syntax/ical.nanorc
#	new file:   .nano/syntax/ini.nanorc
#	new file:   .nano/syntax/inputrc.nanorc
#	new file:   .nano/syntax/jade.nanorc
#	new file:   .nano/syntax/java.nanorc
#	new file:   .nano/syntax/javascript.nanorc
#	new file:   .nano/syntax/js.nanorc
#	new file:   .nano/syntax/json.nanorc
#	new file:   .nano/syntax/keymap.nanorc
#	new file:   .nano/syntax/kickstart.nanorc
#	new file:   .nano/syntax/kotlin.nanorc
#	new file:   .nano/syntax/ledger.nanorc
#	new file:   .nano/syntax/lisp.nanorc
#	new file:   .nano/syntax/lua.nanorc
#	new file:   .nano/syntax/m3u.nanorc
#	new file:   .nano/syntax/makefile.nanorc
#	new file:   .nano/syntax/man.nanorc
#	new file:   .nano/syntax/markdown.nanorc
#	new file:   .nano/syntax/mpdconf.nanorc
#	new file:   .nano/syntax/mutt.nanorc
#	new file:   .nano/syntax/nanorc.nanorc
#	new file:   .nano/syntax/nginx.nanorc
#	new file:   .nano/syntax/nmap.nanorc
#	new file:   .nano/syntax/ocaml.nanorc
#	new file:   .nano/syntax/octave.nanorc
#	new file:   .nano/syntax/patch.nanorc
#	new file:   .nano/syntax/peg.nanorc
#	new file:   .nano/syntax/perl.nanorc
#	new file:   .nano/syntax/perl6.nanorc
#	new file:   .nano/syntax/php.nanorc
#	new file:   .nano/syntax/pkg-config.nanorc
#	new file:   .nano/syntax/pkgbuild.nanorc
#	new file:   .nano/syntax/po.nanorc
#	new file:   .nano/syntax/pov.nanorc
#	new file:   .nano/syntax/privoxy.nanorc
#	new file:   .nano/syntax/prolog.nanorc
#	new file:   .nano/syntax/properties.nanorc
#	new file:   .nano/syntax/pug.nanorc
#	new file:   .nano/syntax/puppet.nanorc
#	new file:   .nano/syntax/python.nanorc
#	new file:   .nano/syntax/reST.nanorc
#	new file:   .nano/syntax/rever.xsh
#	new file:   .nano/syntax/rpmspec.nanorc
#	new file:   .nano/syntax/ruby.nanorc
#	new file:   .nano/syntax/rust.nanorc
#	new file:   .nano/syntax/scala.nanorc
#	new file:   .nano/syntax/sed.nanorc
#	new file:   .nano/syntax/sh.nanorc
#	new file:   .nano/syntax/shellcheck.sh
#	new file:   .nano/syntax/sls.nanorc
#	new file:   .nano/syntax/sql.nanorc
#	new file:   .nano/syntax/svn.nanorc
#	new file:   .nano/syntax/swift.nanorc
#	new file:   .nano/syntax/systemd.nanorc
#	new file:   .nano/syntax/tcl.nanorc
#	new file:   .nano/syntax/tex.nanorc
#	new file:   .nano/syntax/toml.nanorc
#	new file:   .nano/syntax/ts.nanorc
#	new file:   .nano/syntax/twig.nanorc
#	new file:   .nano/syntax/vala.nanorc
#	new file:   .nano/syntax/verilog.nanorc
#	new file:   .nano/syntax/vi.nanorc
#	new file:   .nano/syntax/x11basic.nanorc
#	new file:   .nano/syntax/xml.nanorc
#	new file:   .nano/syntax/xresources.nanorc
#	new file:   .nano/syntax/yaml.nanorc
#	new file:   .nano/syntax/yum.nanorc
#	new file:   .nano/syntax/zsh.nanorc
#	new file:   .nano/syntax/zshrc.nanorc
#	new file:   .nanorc
#
# ------------------------ >8 ------------------------
# Do not modify or remove the line above.
# Everything below it will be ignored.
diff --git a/.nano/backup/!home!usuario!.plan~ b/.nano/backup/!home!usuario!.plan~
new file mode 100644
index 00000000..d5bce8a9
--- /dev/null
+++ b/.nano/backup/!home!usuario!.plan~
@@ -0,0 +1,2 @@
+"my terminal is a lethal teaspoon."
+		-- Patricia O Tuama
diff --git a/.nano/backup/!home!usuario!.plan~.1 b/.nano/backup/!home!usuario!.plan~.1
new file mode 100644
index 00000000..7d1fb515
--- /dev/null
+++ b/.nano/backup/!home!usuario!.plan~.1
@@ -0,0 +1,3 @@
+# Enable mouse support, so that mouse clicks can be used to place the cursor,
+"my terminal is a lethal teaspoon."
+		-- Patricia O Tuama
diff --git a/.nano/backup/!home!usuario!.plan~.2 b/.nano/backup/!home!usuario!.plan~.2
new file mode 100644
index 00000000..7d1fb515
--- /dev/null
+++ b/.nano/backup/!home!usuario!.plan~.2
@@ -0,0 +1,3 @@
+# Enable mouse support, so that mouse clicks can be used to place the cursor,
+"my terminal is a lethal teaspoon."
+		-- Patricia O Tuama
diff --git a/.nano/sample_nanorc b/.nano/sample_nanorc
new file mode 100644
index 00000000..525c099f
--- /dev/null
+++ b/.nano/sample_nanorc
@@ -0,0 +1,274 @@
+#
+# dotphiles : https://github.com/dotphiles/dotphiles
+#
+# Basic nano configuration
+#
+# Authors:
+#   Ben O'Hara <bohara@gmail.com>
+#
+
+# Use auto-indentation.
+set autoindent
+
+# Create backup files in "filename~"
+set backup
+
+# Set the directory where nano puts unique backup files if file backups
+# are enabled.
+set backupdir "~/.nano/backup"
+
+# Enable line numbering.
+set linenumbers
+
+# Do backwards searches by default.
+unset backwards
+
+# Use bold text instead of reverse video text.
+set boldtext
+
+# Automatically indent a newly created line to the same number of tabs and/or spaces 
+# as the previous line (or as the next line if the previous line is the beginning of 
+# a paragraph).
+set autoindent
+
+# Set the characters treated as closing brackets when justifying paragraphs.
+# They cannot contain blank characters. Only closing punctuation, optionally
+# followed by closing brackets, can end sentences. The default value
+# is ""')>]}".
+set brackets string ""')>]}"
+
+# Do case sensitive searches by default.
+set casesensitive
+
+# Constantly display the cursor position in the status bar.
+set constantshow
+
+# Use cut to end of line by default.
+unset cut
+
+# Wrap lines at column number n. If n is 0 or less, the maximum line length
+# will be the screen width less n columns. The default value is -8.
+set fill "-8"
+
+# Enable ~/.nano_history for saving and reading search/replace strings.
+set historylog
+
+# Set the opening and closing brackets that can be found by bracket searches.
+# They cannot contain blank characters. The former set must come before the
+# latter set, and both must be in the same order. The default value
+# is "(<[{)>]}".
+set matchbrackets string "(<[{)>]}"
+
+# Use of the blank line below the titlebar as extra editing space.
+unset morespace
+
+# Enable mouse support, so that mouse clicks can be used to place the cursor,
+# set the mark (with a double click), or execute shortcuts.
+unset mouse
+
+# Allow inserting files into their own buffers.
+set multibuffer
+
+# Don't convert files from DOS/Mac format.
+set noconvert
+
+# Don't follow symlinks when writing files.
+#unset nofollow
+
+# Don't display the help lists at the bottom of the screen.
+set nohelp
+
+# Don't add newlines to the ends of files.
+set nonewlines
+
+# Don't wrap text at all.
+unset nowrap
+
+# nano will only read and write files inside directory and its subdirectories.
+# Also, the current directory is changed to here, so files are inserted from
+# this diractory. By default, the operating directory feature is turned off.
+# set operatingdir "directory"
+
+# Preserve the XON and XOFF keys (^Q and ^S).
+unset preserve
+
+# Make Ctrl+Right stop at word ends instead of beginnings.
+set afterends
+
+# Set the characters treated as closing punctuation when justifying paragraphs.
+# They cannot contain blank characters. Only closing punctuation, optionally
+# followed by closing brackets, can end sentences. The default value is "!.?".
+set punct "!.?"
+
+# Do quick statusbar blanking. Statusbar messages will disappear after 1
+# keystroke instead of 25.
+unset quickblank
+
+# The email-quote string, used to justify email-quoted paragraphs. This is an
+# extended regular expression if your system supports them, otherwise a
+# literal string. The default value is "^([ \t]*[#:>\|}])+" if you have
+# extended regular expression support, or "> " otherwise. Note that '\t'
+# stands for a literal Tab character.
+set quotestr "^([ \\t]*[#:>\\|}])+"
+
+# Interpret the Delete key differently so that both Backspace and Delete work
+# properly. You should only need to use this option if Backspace acts like
+# Delete on your system.
+unset rebinddelete
+
+# Interpret the numeric keypad keys so that they all work properly. You should
+# only need to use this option if they don't, as mouse support won't work
+# properly with this option enabled.
+unset rebindkeypad
+
+# Do extended regular expression searches by default.
+set regexp
+
+# Make the Home key smarter. When Home is pressed anywhere but at the very
+# beginning of non-whitespace characters on a line, the cursor will jump to that
+# beginning (either forwards or backwards). If the cursor is already at that
+# position, it will jump to the true beginning of the line.
+set smarthome
+
+# Use smooth scrolling by default.
+set smooth
+
+# Use spelling checker spellprog instead of the built-in one, which calls
+# "spell".
+#set speller "aspell"
+
+# Allow nano to be suspended.
+set suspend
+
+# Use a tab size of "n" columns. The value of n must be greater than 0. The
+# default value is 8.
+set tabsize "4"
+
+# Convert typed tabs to spaces
+set tabstospaces
+
+# Save automatically on exit, don't prompt.
+unset tempfile
+
+# Disallow file modification.
+unset view
+
+# Set the two characters used to display the first characters of tabs and
+# spaces. They must be single-column characters.
+# set whitespace "string"
+
+# Detect word boundaries more accurately by treating punctuation characters
+# as part of a word.
+unset wordbounds
+
+## Enable the new (EXPERIMENTAL) generic undo code, not just for line cuts
+# set undo
+
+## Enable soft line wrapping (AKA full line display)
+# set softwrap
+
+## Key bindings
+## Please see nanorc(5) for more details on this
+##
+## Here are some samples to get you going
+##
+# bind M-W nowrap main
+# bind M-A casesens search
+# bind ^S research main
+
+## Set this if your backspace key sends delete most of the time (2.1.3+)
+# bind kdel backspace all
+
+## Nanorc files
+include "/usr/share/nano/nanorc.nanorc"
+include "~/.nano/syntax/apacheconf.nanorc"
+include "~/.nano/syntax/arduino.nanorc"
+include "~/.nano/syntax/asciidoc.nanorc"
+include "~/.nano/syntax/asm.nanorc"
+include "~/.nano/syntax/awk.nanorc"
+include "~/.nano/syntax/c.nanorc"
+include "~/.nano/syntax/clojure.nanorc"
+include "~/.nano/syntax/cmake.nanorc"
+include "~/.nano/syntax/coffeescript.nanorc"
+include "~/.nano/syntax/colortest.nanorc"
+include "~/.nano/syntax/conf.nanorc"
+include "~/.nano/syntax/csharp.nanorc"
+include "~/.nano/syntax/css.nanorc"
+include "~/.nano/syntax/cython.nanorc"
+include "~/.nano/syntax/dot.nanorc"
+include "~/.nano/syntax/dotenv.nanorc"
+include "~/.nano/syntax/email.nanorc"
+include "~/.nano/syntax/Dockerfile.nanorc"
+include "~/.nano/syntax/etc-hosts.nanorc"
+include "~/.nano/syntax/fish.nanorc"
+include "~/.nano/syntax/fortran.nanorc"
+include "~/.nano/syntax/gentoo.nanorc"
+include "~/.nano/syntax/git.nanorc"
+include "~/.nano/syntax/gitcommit.nanorc"
+include "~/.nano/syntax/glsl.nanorc"
+include "~/.nano/syntax/go.nanorc"
+include "~/.nano/syntax/gradle.nanorc"
+include "~/.nano/syntax/groff.nanorc"
+include "~/.nano/syntax/haml.nanorc"
+include "~/.nano/syntax/haskell.nanorc"
+include "~/.nano/syntax/html.nanorc"
+include "~/.nano/syntax/html.j2.nanorc"
+include "~/.nano/syntax/ical.nanorc"
+include "~/.nano/syntax/ini.nanorc"
+include "~/.nano/syntax/inputrc.nanorc"
+include "~/.nano/syntax/jade.nanorc"
+include "~/.nano/syntax/java.nanorc"
+include "~/.nano/syntax/javascript.nanorc"
+include "~/.nano/syntax/js.nanorc"
+include "~/.nano/syntax/json.nanorc"
+include "~/.nano/syntax/keymap.nanorc"
+include "~/.nano/syntax/kickstart.nanorc"
+include "~/.nano/syntax/kotlin.nanorc"
+include "~/.nano/syntax/ledger.nanorc"
+include "~/.nano/syntax/lisp.nanorc"
+include "~/.nano/syntax/lua.nanorc"
+include "~/.nano/syntax/makefile.nanorc"
+include "~/.nano/syntax/man.nanorc"
+include "~/.nano/syntax/markdown.nanorc"
+include "~/.nano/syntax/mpdconf.nanorc"
+include "~/.nano/syntax/mutt.nanorc"
+include "~/.nano/syntax/nanorc.nanorc"
+include "~/.nano/syntax/nginx.nanorc"
+include "~/.nano/syntax/nmap.nanorc"
+include "~/.nano/syntax/ocaml.nanorc"
+include "~/.nano/syntax/patch.nanorc"
+include "~/.nano/syntax/peg.nanorc"
+include "~/.nano/syntax/perl.nanorc"
+include "~/.nano/syntax/perl6.nanorc"
+include "~/.nano/syntax/php.nanorc"
+include "~/.nano/syntax/pkg-config.nanorc"
+include "~/.nano/syntax/pkgbuild.nanorc"
+include "~/.nano/syntax/po.nanorc"
+include "~/.nano/syntax/pov.nanorc"
+include "~/.nano/syntax/privoxy.nanorc"
+include "~/.nano/syntax/puppet.nanorc"
+include "~/.nano/syntax/pug.nanorc"
+include "~/.nano/syntax/python.nanorc"
+include "~/.nano/syntax/reST.nanorc"
+include "~/.nano/syntax/rpmspec.nanorc"
+include "~/.nano/syntax/ruby.nanorc"
+include "~/.nano/syntax/rust.nanorc"
+include "~/.nano/syntax/scala.nanorc"
+include "~/.nano/syntax/sed.nanorc"
+include "~/.nano/syntax/sh.nanorc"
+include "~/.nano/syntax/sls.nanorc"
+include "~/.nano/syntax/sql.nanorc"
+include "~/.nano/syntax/svn.nanorc"
+include "~/.nano/syntax/swift.nanorc"
+include "~/.nano/syntax/systemd.nanorc"
+include "~/.nano/syntax/tcl.nanorc"
+include "~/.nano/syntax/tex.nanorc"
+include "~/.nano/syntax/vala.nanorc"
+include "~/.nano/syntax/verilog.nanorc"
+include "~/.nano/syntax/vi.nanorc"
+include "~/.nano/syntax/xml.nanorc"
+include "~/.nano/syntax/xresources.nanorc"
+include "~/.nano/syntax/yaml.nanorc"
+include "~/.nano/syntax/yum.nanorc"
+include "~/.nano/syntax/zsh.nanorc"
+
diff --git a/.nano/search_history b/.nano/search_history
new file mode 100644
index 00000000..1d4b6c11
--- /dev/null
+++ b/.nano/search_history
@@ -0,0 +1,6 @@
+disable
+linen
+line
+
+
+
diff --git a/.nano/syntax/Dockerfile.nanorc b/.nano/syntax/Dockerfile.nanorc
new file mode 100644
index 00000000..053951e9
--- /dev/null
+++ b/.nano/syntax/Dockerfile.nanorc
@@ -0,0 +1,26 @@
+## Syntax highlighting for Dockerfiles
+syntax "Dockerfile" "Dockerfile[^/]*$" "\.dockerfile$"
+
+## Keywords
+icolor red "^(FROM|RUN|CMD|LABEL|MAINTAINER|EXPOSE|ENV|ADD|COPY|ENTRYPOINT|VOLUME|USER|WORKDIR|ARG|ONBUILD|STOPSIGNAL|HEALTHCHECK|SHELL)[[:space:]]"
+
+## Brackets & parenthesis
+color brightgreen "(\(|\)|\[|\])"
+
+## Double ampersand
+color brightmagenta "&&"
+
+## Comments
+icolor cyan "^[[:space:]]*#.*$"
+
+## Blank space at EOL
+color ,green "[[:space:]]+$"
+
+## Strings, single-quoted
+color brightwhite "'([^']|(\\'))*'" "%[qw]\{[^}]*\}" "%[qw]\([^)]*\)" "%[qw]<[^>]*>" "%[qw]\[[^]]*\]" "%[qw]\$[^$]*\$" "%[qw]\^[^^]*\^" "%[qw]![^!]*!"
+
+## Strings, double-quoted
+color brightwhite ""([^"]|(\\"))*"" "%[QW]?\{[^}]*\}" "%[QW]?\([^)]*\)" "%[QW]?<[^>]*>" "%[QW]?\[[^]]*\]" "%[QW]?\$[^$]*\$" "%[QW]?\^[^^]*\^" "%[QW]?![^!]*!"
+
+## Single and double quotes
+color brightyellow "('|\")"
diff --git a/.nano/syntax/Readme.rst b/.nano/syntax/Readme.rst
new file mode 100644
index 00000000..abc0e294
--- /dev/null
+++ b/.nano/syntax/Readme.rst
@@ -0,0 +1,60 @@
+***************************************
+Improved Nano Syntax Highlighting Files
+***************************************
+
+This repository holds {lang}.nanorc files that have imporved
+definitions of syntax highlighting for various languages.
+These should be placed inside of the ``~/.nano/`` directory.
+
+Once there you should add the languages you want to your
+nano configuration file ``~/.nanorc``.  For example,
+my config file includes::
+
+    ## C/C++
+    include "~/.nano/c.nanorc"
+
+    ## Fortran
+    include "~/.nano/fortran.nanorc"
+
+    ## HTML
+    include "~/.nano/html.nanorc"
+
+    ## Patch files
+    include "~/.nano/patch.nanorc"
+
+    ## Manpages
+    include "~/.nano/man.nanorc"
+
+    ## Perl
+    include "~/.nano/perl.nanorc"
+
+    ## Python
+    include "~/.nano/python.nanorc"
+
+    ## reST
+    include "~/.nano/reST.nanorc"
+
+    ## Ruby
+    include "~/.nano/ruby.nanorc"
+
+    ## Bourne shell scripts
+    include "~/.nano/sh.nanorc"
+
+    ## makefile .am
+    include "~/.nano/gentoo.nanorc"
+
+    ## TeX
+    include "~/.nano/tex.nanorc"
+
+    ## CSS
+    include "~/.nano/css.nanorc"
+
+    ## php
+    include "~/.nano/php.nanorc"
+
+    ## XML
+    include "~/.nano/xml.nanorc"
+
+    ## Lua
+    include "~/.nano/lua.nanorc"
+
diff --git a/.nano/syntax/Rnw.nanorc b/.nano/syntax/Rnw.nanorc
new file mode 100644
index 00000000..75e6f6e9
--- /dev/null
+++ b/.nano/syntax/Rnw.nanorc
@@ -0,0 +1,39 @@
+## Here is a short example for TeX files.
+##
+syntax "Tex" "\.Rnw$" "bib" "\.bib$" "cls" "\.cls$"
+color yellow "\$(\\\$|[^$])*[^\\]\$"
+color yellow "\$\$(\\\$|[^$])*[^\\]\$\$"
+icolor green "\\.|\\[A-Z]*"
+color magenta "[{}]"
+color red start="<<" end=">>="
+color white start=">>=" end="@"
+
+color brightblue "%.*"
+color brightblue "^[[:space:]]*#.*"
+color brightblue start="\\begin\{comment\}" end="\\end\{comment\}"
+
+color green "(class|extends|goto) ([a-zA-Z0-9_]*)"
+color green "[^a-z0-9_-]{1}(var|class|function|echo|case|break|default|exit|switch|if|else|elseif|endif|foreach|endforeach|@|while|public|private|protected|return|true|false|null|TRUE|FALSE|NULL|const|static|extends|as|array|require|include|require_once|include_once|define|do|continue|declare|goto|print|in|namespace|use)[^a-z0-9_-]{1}"
+
+# Functions
+color blue "([a-zA-Z0-9_\-$\.]*)\("
+
+# Variables
+color magenta "[a-zA-Z_0-9]* <\-"
+# Special Characters
+color yellow "[.,{}();]"
+color yellow "\["
+color yellow "\]"
+color yellow "[=][^>]"
+# Numbers
+color magenta "[+-]*([0-9]\.)*[0-9]+([eE][+-]?([0-9]\.)*[0-9])*"
+color magenta "0x[0-9a-zA-Z]*"
+# Special Variables
+color blue "(\$this|parent::|self::|\$this->)"
+# Bitwise Operations
+color magenta "(\;|\||\^){1}"
+# And/Or/SRO/etc
+color green "(\;\;|\|\||::|=>|->)"
+# STRINGS!
+color red "('[^']*')|(\"[^\"]*\")"
+
diff --git a/.nano/syntax/apacheconf.nanorc b/.nano/syntax/apacheconf.nanorc
new file mode 100644
index 00000000..f1325e68
--- /dev/null
+++ b/.nano/syntax/apacheconf.nanorc
@@ -0,0 +1,47 @@
+# Apache files
+syntax "Apacheconf" "httpd\.conf|mime\.types|vhosts\.d\\*|\.htaccess"
+color yellow ".+"
+color brightcyan "(AcceptMutex|AcceptPathInfo|AccessFileName|Action|AddAlt|AddAltByEncoding|AddAltByType|AddCharset|AddDefaultCharset|AddDescription|AddEncoding)"
+color brightcyan "(AddHandler|AddIcon|AddIconByEncoding|AddIconByType|AddInputFilter|AddLanguage|AddModuleInfo|AddOutputFilter|AddOutputFilterByType|AddType|Alias|AliasMatch)"
+color brightcyan "(Allow|AllowCONNECT|AllowEncodedSlashes|AllowOverride|Anonymous|Anonymous_Authoritative|Anonymous_LogEmail|Anonymous_MustGiveEmail|Anonymous_NoUserID)"
+color brightcyan "(Anonymous_VerifyEmail|AssignUserID|AuthAuthoritative|AuthDBMAuthoritative|AuthDBMGroupFile|AuthDBMType|AuthDBMUserFile|AuthDigestAlgorithm)"
+color brightcyan "(AuthDigestDomain|AuthDigestFile|AuthDigestGroupFile|AuthDigestNcCheck|AuthDigestNonceFormat|AuthDigestNonceLifetime|AuthDigestQop|AuthDigestShmemSize)"
+color brightcyan "(AuthGroupFile|AuthLDAPAuthoritative|AuthLDAPBindDN|AuthLDAPBindPassword|AuthLDAPCharsetConfig|AuthLDAPCompareDNOnServer|AuthLDAPDereferenceAliases)"
+color brightcyan "(AuthLDAPEnabled|AuthLDAPFrontPageHack|AuthLDAPGroupAttribute|AuthLDAPGroupAttributeIsDN|AuthLDAPRemoteUserIsDN|AuthLDAPUrl|AuthName|AuthType|AuthUserFile)"
+color brightcyan "(BrowserMatch|BrowserMatchNoCase|BS2000Account|BufferedLogs|CacheDefaultExpire|CacheDirLength|CacheDirLevels|CacheDisable|CacheEnable|CacheExpiryCheck)"
+color brightcyan "(CacheFile|CacheForceCompletion|CacheGcClean|CacheGcDaily|CacheGcInterval|CacheGcMemUsage|CacheGcUnused|CacheIgnoreCacheControl|CacheIgnoreHeaders)"
+color brightcyan "(CacheIgnoreNoLastMod|CacheLastModifiedFactor|CacheMaxExpire|CacheMaxFileSize|CacheMinFileSize|CacheNegotiatedDocs|CacheRoot|CacheSize|CacheTimeMargin)"
+color brightcyan "(CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckSpelling|ChildPerUserID|ContentDigest|CookieDomain|CookieExpires|CookieLog|CookieName)"
+color brightcyan "(CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavLockDB|DavMinTimeout|DefaultIcon|DefaultLanguage|DefaultType)"
+color brightcyan "(DeflateBufferSize|DeflateCompressionLevel|DeflateFilterNote|DeflateMemLevel|DeflateWindowSize|Deny|Directory|DirectoryIndex|DirectoryMatch|DirectorySlash)"
+color brightcyan "(DocumentRoot|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|ErrorDocument|ErrorLog|Example|ExpiresActive|ExpiresByType)"
+color brightcyan "(ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FileETag|Files|FilesMatch|ForceLanguagePriority|ForceType|ForensicLog|Group|Header)"
+color brightcyan "(HeaderName|HostnameLookups|IdentityCheck|IfDefine|IfModule|IfVersion|ImapBase|ImapDefault|ImapMenu|Include|IndexIgnore|IndexOptions|IndexOrderDefault)"
+color brightcyan "(ISAPIAppendLogToErrors|ISAPIAppendLogToQuery|ISAPICacheFile|ISAPIFakeAsync|ISAPILogNotSupported|ISAPIReadAheadBuffer|KeepAlive|KeepAliveTimeout)"
+color brightcyan "(LanguagePriority|LDAPCacheEntries|LDAPCacheTTL|LDAPConnectionTimeout|LDAPOpCacheEntries|LDAPOpCacheTTL|LDAPSharedCacheFile|LDAPSharedCacheSize)"
+color brightcyan "(LDAPTrustedCA|LDAPTrustedCAType|Limit|LimitExcept|LimitInternalRecursion|LimitRequestBody|LimitRequestFields|LimitRequestFieldSize|LimitRequestLine)"
+color brightcyan "(LimitXMLRequestBody|Listen|ListenBackLog|LoadFile|LoadModule|Location|LocationMatch|LockFile|LogFormat|LogLevel|MaxClients|MaxKeepAliveRequests)"
+color brightcyan "(MaxMemFree|MaxRequestsPerChild|MaxRequestsPerThread|MaxSpareServers|MaxSpareThreads|MaxThreads|MaxThreadsPerChild|MCacheMaxObjectCount|MCacheMaxObjectSize)"
+color brightcyan "(MCacheMaxStreamingBuffer|MCacheMinObjectSize|MCacheRemovalAlgorithm|MCacheSize|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads)"
+color brightcyan "(MMapFile|ModMimeUsePathInfo|MultiviewsMatch|NameVirtualHost|NoProxy|NumServers|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|PassEnv|PidFile)"
+color brightcyan "(ProtocolEcho|Proxy|ProxyBadHeader|ProxyBlock|ProxyDomain|ProxyErrorOverride|ProxyIOBufferSize|ProxyMatch|ProxyMaxForwards|ProxyPass|ProxyPassReverse)"
+color brightcyan "(ProxyPreserveHost|ProxyReceiveBufferSize|ProxyRemote|ProxyRemoteMatch|ProxyRequests|ProxyTimeout|ProxyVia|ReadmeName|Redirect|RedirectMatch)"
+color brightcyan "(RedirectPermanent|RedirectTemp|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader)"
+color brightcyan "(Require|RewriteBase|RewriteCond|RewriteEngine|RewriteLock|RewriteLog|RewriteLogLevel|RewriteMap|RewriteOptions|RewriteRule|RLimitCPU|RLimitMEM|RLimitNPROC)"
+color brightcyan "(Satisfy|ScoreBoardFile|Script|ScriptAlias|ScriptAliasMatch|ScriptInterpreterSource|ScriptLog|ScriptLogBuffer|ScriptLogLength|ScriptSock|SecureListen)"
+color brightcyan "(SendBufferSize|ServerAdmin|ServerAlias|ServerLimit|ServerName|ServerPath|ServerRoot|ServerSignature|ServerTokens|SetEnv|SetEnvIf|SetEnvIfNoCase|SetHandler)"
+color brightcyan "(SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSLCACertificateFile|SSLCACertificatePath)"
+color brightcyan "(SSLCARevocationFile|SSLCARevocationPath|SSLCertificateChainFile|SSLCertificateFile|SSLCertificateKeyFile|SSLCipherSuite|SSLEngine|SSLMutex|SSLOptions)"
+color brightcyan "(SSLPassPhraseDialog|SSLProtocol|SSLProxyCACertificateFile|SSLProxyCACertificatePath|SSLProxyCARevocationFile|SSLProxyCARevocationPath|SSLProxyCipherSuite)"
+color brightcyan "(SSLProxyEngine|SSLProxyMachineCertificateFile|SSLProxyMachineCertificatePath|SSLProxyProtocol|SSLProxyVerify|SSLProxyVerifyDepth|SSLRandomSeed|SSLRequire)"
+color brightcyan "(SSLRequireSSL|SSLSessionCache|SSLSessionCacheTimeout|SSLUserName|SSLVerifyClient|SSLVerifyDepth|StartServers|StartThreads|SuexecUserGroup|ThreadLimit)"
+color brightcyan "(ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnsetEnv|UseCanonicalName|User|UserDir|VirtualDocumentRoot)"
+color brightcyan "(VirtualDocumentRootIP|VirtualHost|VirtualScriptAlias|VirtualScriptAliasIP|Win32DisableAcceptEx|XBitHack)"
+color yellow "<[^>]+>"
+color brightcyan "</?[A-Za-z]+"
+color brightcyan "(<|</|>)"
+color green "\"(\\.|[^\"])*\""
+color white "#.*"
+
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/arduino.nanorc b/.nano/syntax/arduino.nanorc
new file mode 100644
index 00000000..b97b2ce5
--- /dev/null
+++ b/.nano/syntax/arduino.nanorc
@@ -0,0 +1,116 @@
+
+## FILENAME:    arduino.nanorc
+##
+## DESCRIPTION: The arduino.nanorc syntax files allows syntax highlighting
+##              for Arduino sketch files in the GNU nano text editor.
+##
+## Maintainer:  Nicholas Wilde
+## Version:     0.1
+## DATE:        06/23/2011
+##
+## HOMEPAGE:    http://code.google.com/p/arduino-nano-editor-syntax/
+##
+## COMMENTS:    -Most of the code was taken from the c.nanorc code found with 
+##               GNU nano 2.2.6.
+##              -Direction was taken from the arduino vim syntax code by johannes
+##               <https://bitbucket.org/johannes/arduino-vim-syntax/>
+##              -Tested on Ubuntu Server 11.04 Natty Narwhal and GNU nano 2.2.6
+##
+## DIRECTIONS:  For Ubuntu Server 11.04 Natty Narwhal:
+##              -Move this file <arduino.nanorc> to the nano directory
+##               /usr/share/nano/
+##              -Add arduino.nanorc reference to the nanorc settings file
+##               /etc/nanorc
+##               ...
+##               ## Arduino
+##               /usr/share/nano/arduino.nanorc
+##               ...
+
+syntax "INO"  "\.?ino$"
+
+## 
+color brightred "\<[A-Z_][0-9A-Z_]+\>" 
+
+## 
+color green "\<((s?size)|((u_?)?int(8|16|32|64|ptr)))_t\>"
+
+## Constants
+icolor green "\<(HIGH|LOW|INPUT|OUTPUT)\>"
+
+## Serial Print
+icolor red "\<(DEC|BIN|HEX|OCT|BYTE)\>"
+
+## PI Constants
+icolor green "\<(PI|HALF_PI|TWO_PI)\>"
+
+## ShiftOut
+icolor green "\<(LSBFIRST|MSBFIRST)\>"
+
+## Attach Interrupt
+icolor green "\<(CHANGE|FALLING|RISING)\>"
+
+## Analog Reference
+icolor green "\<(DEFAULT|EXTERNAL|INTERNAL|INTERNAL1V1|INTERNAL2V56)\>"
+
+## === FUNCTIONS === ##
+
+## Data Types
+color green "\<(boolean|byte|char|float|int|long|word)\>"
+
+## Control Structions
+color brightyellow "\<(case|class|default|do|double|else|false|for|if|new|null|private|protected|public|short|signed|static|String|switch|this|throw|try|true|unsigned|void|while)\>" 
+color magenta "\<(goto|continue|break|return)\>"
+
+## Math
+color brightyellow "\<(abs|acos|asin|atan|atan2|ceil|constrain|cos|degrees|exp|floor|log|map|max|min|radians|random|randomSeed|round|sin|sq|sqrt|tan)\>"
+
+## Bits & Bytes
+color brightyellow "\<(bitRead|bitWrite|bitSet|bitClear|bit|highByte|lowByte)\>"
+
+## Analog I/O
+color brightyellow "\<(analogReference|analogRead|analogWrite)\>"
+
+## External Interrupts
+color brightyellow "\<(attachInterrupt|detachInterrupt)\>"
+
+## Time
+color brightyellow "\<(delay|delayMicroseconds|millis|micros)\>"
+
+## Digital I/O
+color brightyellow "\<(pinMode|digitalWrite|digitalRead)\>"
+
+## Interrupts
+color brightyellow "\<(interrupts|noInterrupts)\>"
+
+## Advanced I/O
+color brightyellow "\<(noTone|pulseIn|shiftIn|shiftOut|tone)\>"
+
+## Serial
+color magenta "\<(Serial|Serial1|Serial2|Serial3|begin|end|peek|read|print|println|available|flush)\>"
+
+## Structure
+color brightyellow "\<(setup|loop)\>"
+
+## 
+color brightcyan "^[[:space:]]*#[[:space:]]*(define|include(_next)?|(un|ifn?)def|endif|el(if|se)|if|warning|error|pragma)"
+
+## 
+color brightmagenta "'([^'\]|(\\["'abfnrtv\\]))'" "'\\(([0-3]?[0-7]{1,2}))'" "'\\x[0-9A-Fa-f]{1,2}'"
+
+## GCC builtins
+color cyan "__attribute__[[:space:]]*\(\([^)]*\)\)" "__(aligned|asm|builtin|hidden|inline|packed|restrict|section|typeof|weak)__"
+
+## String highlighting.  You will in general want your comments and
+## strings to come last, because syntax highlighting rules will be
+## applied in the order they are read in.
+color brightyellow "<[^=    ]*>" ""(\\.|[^"])*""
+
+## This string is VERY resource intensive!
+color brightyellow start=""(\\.|[^"])*\\[[:space:]]*$" end="^(\\.|[^"])*""
+
+## Comments
+color brightblue "^\s*//.*"
+color brightblue start="/\*" end="\*/"
+
+## Trailing whitespace
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/asciidoc.nanorc b/.nano/syntax/asciidoc.nanorc
new file mode 100644
index 00000000..b16a74ee
--- /dev/null
+++ b/.nano/syntax/asciidoc.nanorc
@@ -0,0 +1,47 @@
+syntax "AsciiDoc" "\.(asc|asciidoc|adoc)$"
+
+# main header
+color red "^====+$"
+# h1
+color red "^==[[:space:]].*$"
+color red "^----+$"
+# h2
+color magenta "^===[[:space:]].*$"
+color magenta "^~~~~+$"
+# h4
+color green "^====[[:space:]].*$"
+color green "^\^\^\^\^+$"
+# h5
+color brightblue "^=====[[:space:]].*$"
+color brightblue "^\+\+\+\++$"
+
+# attributes
+color brightgreen ":.*:"
+color brightred "\{[a-z0-9]*\}"
+color red "\\\{[a-z0-9]*\}"
+color red "\+\+\+\{[a-z0-9]*\}\+\+\+"
+
+# Paragraph Title
+color yellow "^\..*$"
+
+# source 
+color magenta "^\[(source,.+|NOTE|TIP|IMPORTANT|WARNING|CAUTION)\]"
+
+# Other markup
+color yellow ".*[[:space:]]\+$"
+color yellow "_[^_]+_"
+color yellow "\*[^\*]+\*"
+color yellow "\+[^\+]+\+"
+color yellow "`[^`]+`"
+color yellow "\^[^\^]+\^"
+color yellow "~[^~]+~"
+color yellow "'[^']+'"
+
+color cyan "`{1,2}[^']+'{1,2}"
+
+# bullets
+color brightmagenta "^[[:space:]]*[\*\.-]{1,5}[[:space:]]"
+
+# anchors
+color brightwhite "\[\[.*\]\]"
+color brightwhite "<<.*>>"
diff --git a/.nano/syntax/asm.nanorc b/.nano/syntax/asm.nanorc
new file mode 100644
index 00000000..b27a2722
--- /dev/null
+++ b/.nano/syntax/asm.nanorc
@@ -0,0 +1,20 @@
+## Here is an example for assembler.
+##
+syntax "ASM" "\.(S|s|asm)$"
+magic "assembler source"
+comment "//"
+
+color red "\<[A-Z_]{2,}\>"
+color brightgreen "\.(data|subsection|text)"
+color green "\.(align|file|globl|global|hidden|section|size|type|weak)"
+color brightyellow "\.(ascii|asciz|byte|double|float|hword|int|long|short|single|struct|word)"
+icolor brightred "^[[:space:]]*[.0-9A-Z_]*:"
+color brightcyan "^[[:space:]]*#[[:space:]]*(define|undef|include|ifn?def|endif|elif|else|if|warning|error)"
+## Highlight strings (note: VERY resource intensive)
+color brightyellow "<[^= 	]*>" ""(\\.|[^"])*""
+color brightyellow start=""(\\.|[^"])*\\[[:space:]]*$" end="^(\\.|[^"])*""
+## Highlight comments
+color brightblue "^\s*//.*"
+color brightblue start="/\*" end="\*/"
+## Highlight trailing whitespace
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/awk.nanorc b/.nano/syntax/awk.nanorc
new file mode 100644
index 00000000..501bc97d
--- /dev/null
+++ b/.nano/syntax/awk.nanorc
@@ -0,0 +1,27 @@
+syntax "AWK" "\.awk$"
+header "^#!.*bin/(env +)?awk( |$)"
+magic "awk script"
+comment "#"
+
+color brightyellow "\$[A-Za-z0-9_!@#$*?-]+"
+color brightyellow "\<(ARGC|ARGIND|ARGV|BINMODE|CONVFMT|ENVIRON|ERRNO|FIELDWIDTHS)\>"
+color brightyellow "\<(FILENAME|FNR|FS|IGNORECASE|LINT|NF|NR|OFMT|OFS|ORS)\>"
+color brightyellow "\<(PROCINFO|RS|RT|RSTART|RLENGTH|SUBSEP|TEXTDOMAIN)\>"
+color brightblue "\<(function|extension|BEGIN|END)\>"
+color red "[-+*/%^|!=&<>?;:]|\\|\[|\]"
+color cyan  "\<(for|if|while|do|else|in|delete|exit)\>"
+color cyan  "\<(break|continue|return)\>"
+color brightblue "\<(close|getline|next|nextfile|print|printf|system|fflush)\>"
+color brightblue "\<(atan2|cos|exp|int|log|rand|sin|sqrt|srand)\>"
+color brightblue "\<(asort|asorti|gensub|gsub|index|length|match)\>"
+color brightblue "\<(split|sprintf|strtonum|sub|substr|tolower|toupper)\>"
+color brightblue "\<(mktime|strftime|systime)\>"
+color brightblue "\<(and|compl|lshift|or|rshift|xor)\>"
+color brightblue "\<(bindtextdomain|dcgettext|dcngettext)\>"
+color magenta   "/.*[^\]/"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color magenta   "\\."
+color brightblack "(^|[[:space:]])#([^{].*)?$"
+color brightwhite,cyan "TODO:?"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/c.nanorc b/.nano/syntax/c.nanorc
new file mode 100644
index 00000000..4ddd554c
--- /dev/null
+++ b/.nano/syntax/c.nanorc
@@ -0,0 +1,49 @@
+## Here is an example for C/C++.
+##
+syntax "C" "\.(c(c|pp|xx)?|C)$" "\.(h(h|pp|xx)?|H)$" "\.ii?$" "\.(def)$" "\.ino"
+magic "^(C|C\+\+) (source|program)"
+comment "//"
+color brightred "\<[A-Z_][0-9A-Z_]+\>" 
+color green "\<(float|double|bool|char|wchar_t|int|short|long|sizeof|enum|void|static|const|struct|union|typedef|extern|(un)?signed|inline)\>"
+color green "\<((s?size)|(char(16|32))|((u_?)?int(_fast|_least)?(8|16|32|64))|u?int(max|ptr))_t\>"
+color green "\<(class|namespace|template|public|protected|private|typename|this|friend|virtual|using|mutable|volatile|register|explicit)\>"
+color green "\<(for|if|while|do|else|case|default|switch)\>"
+color green "\<(try|throw|catch|operator|new|delete)\>"
+color green "\<((const|dynamic|reinterpret|static)_cast)\>"
+color green "\<(alignas|alignof|asm|auto|compl|concept|constexpr|decltype|export|noexcept|nullptr|requires|static_assert|thread_local|typeid|override|final)\>"
+color green "\<(and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\>"
+color brightmagenta "\<(goto|continue|break|return)\>"
+color brightcyan "^[[:space:]]*#[[:space:]]*(define|include|(un|ifn?)def|endif|el(if|se)|if|warning|error)"
+color brightmagenta "'([^'\]|(\\["'abfnrtv\\]))'" "'\\(([0-3]?[0-7]{1,2}))'" "'\\x[0-9A-Fa-f]{1,2}'"
+
+##
+## GCC builtins
+color green "__attribute__[[:space:]]*\(\([^)]*\)\)" "__(aligned|asm|builtin|hidden|inline|packed|restrict|section|typeof|weak)__"
+
+#Operator Color
+color yellow "[.:;,+*|=!\%]" "<" ">" "/" "-" "&" 
+
+#Parenthetical Color
+color magenta "[(){}]" "\[" "\]"
+
+
+##
+## String highlighting.  You will in general want your comments and
+## strings to come last, because syntax highlighting rules will be
+## applied in the order they are read in.
+color cyan "<[^= 	]*>" ""(\\.|[^"])*""
+##
+## This string is VERY resource intensive!
+#color cyan start=""(\\.|[^"])*\\[[:space:]]*$" end="^(\\.|[^"])*""
+
+## Comment highlighting
+color brightblue "^\s*//.*"
+color brightblue start="/\*" end="\*/"
+
+# Highlighting for documentation comments
+color magenta "@param [a-zA-Z_][a-z0-9A-Z_]+"
+color magenta "@return"
+color magenta "@author.*"
+
+## Trailing whitespace
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/clojure.nanorc b/.nano/syntax/clojure.nanorc
new file mode 100644
index 00000000..aac31f42
--- /dev/null
+++ b/.nano/syntax/clojure.nanorc
@@ -0,0 +1,33 @@
+## Clojure Syntax Highlighting
+##
+
+syntax "clojure" "\.((clj[s|c]?)|edn)"
+
+icolor green "defn? [0-9A-Z_]+"
+
+color brightgreen "[#']"
+color brightgreen "\<fn\>"
+color green "\<(map|reduce|filter|println)\>"
+
+color brightyellow "\<(if(-(let|not))?|condp?|when(-(let|not))?)\>"
+color brightyellow "\<(do(all|run|seq|sync)?|recur|loop)\>"
+color brightyellow "\<(try|catch|finally|throw)\>"
+color yellow "(\:else) "
+
+color brightcyan "\<(require|use|import|ns)\>"
+color cyan "(\:(require|use|import)) "
+
+color brightred "\<(let(fn)?|defn?)\>"
+color brightwhite "\((\/|((not|[<>\=])?\=?))"
+color brightwhite "\((\+|-|\*)'?"
+color brightwhite "\<(and|or|not|mod|quot|rem|inc|dec)\>"
+
+color magenta "[\(\)]"
+color magenta "(\[|\])"
+
+color yellow "\<(true|false|nil)\>"
+color brightyellow "(["][^"]*[^\\]["])|("")"
+
+color brightblue ";.*$"
+
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/cmake.nanorc b/.nano/syntax/cmake.nanorc
new file mode 100644
index 00000000..728d14a8
--- /dev/null
+++ b/.nano/syntax/cmake.nanorc
@@ -0,0 +1,26 @@
+## CMake syntax highlighter for GNU Nano
+##
+syntax "CMake" "(CMakeLists\.txt|\.cmake)$"
+comment "#"
+
+icolor green "^[[:space:]]*[A-Z0-9_]+"
+icolor brightyellow "^[[:space:]]*(include|include_directories|include_external_msproject)\>"
+
+icolor brightgreen "^[[:space:]]*\<((else|end)?if|else|(end)?while|(end)?foreach|break)\>"
+color brightgreen "\<(COPY|NOT|COMMAND|PROPERTY|POLICY|TARGET|EXISTS|IS_(DIRECTORY|ABSOLUTE)|DEFINED)\>[[:space:]]"
+color brightgreen "[[:space:]]\<(OR|AND|IS_NEWER_THAN|MATCHES|(STR|VERSION_)?(LESS|GREATER|EQUAL))\>[[:space:]]"
+
+icolor brightred "^[[:space:]]*\<((end)?(function|macro)|return)"
+
+#String Color
+color cyan "['][^']*[^\\][']" "[']{3}.*[^\\][']{3}"
+color cyan "["][^"]*[^\\]["]" "["]{3}.*[^\\]["]{3}"
+
+icolor brightred start="\$(\{|ENV\{)" end="\}"
+color magenta "\<(APPLE|UNIX|WIN32|CYGWIN|BORLAND|MINGW|MSVC(_IDE|60|71|80|90)?)\>"
+
+icolor brightblue "^([[:space:]]*)?#.*"
+icolor brightblue "[[:space:]]#.*"
+
+## Trailing whitespace
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/coffeescript.nanorc b/.nano/syntax/coffeescript.nanorc
new file mode 100644
index 00000000..b901c250
--- /dev/null
+++ b/.nano/syntax/coffeescript.nanorc
@@ -0,0 +1,16 @@
+syntax "CoffeeScript" "\.coffee$"
+header "^#!.*/(env +)?coffee"
+
+color red "[!&|=\/*+\-\<\>]|\<(and|or|is|isnt|not)\>"
+color brightblue "[A-Za-z_][A-Za-z0-9_]*:[[:space:]]*(->|\()" "->"
+color brightblue "[()]"
+color cyan  "\<(for|of|continue|break|isnt|null|unless|this|else|if|return)\>"
+color cyan  "\<(try|catch|finally|throw|new|delete|typeof|in|instanceof)\>"
+color cyan  "\<(debugger|switch|while|do|class|extends|super)\>"
+color cyan  "\<(undefined|then|unless|until|loop|of|by|when)\>"
+color brightcyan  "\<(true|false|yes|no|on|off)\>"
+color brightyellow "@[A-Za-z0-9_]*"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color brightblack "(^|[[:space:]])#([^{].*)?$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/colortest.nanorc b/.nano/syntax/colortest.nanorc
new file mode 100644
index 00000000..f2b44f29
--- /dev/null
+++ b/.nano/syntax/colortest.nanorc
@@ -0,0 +1,17 @@
+syntax "colorTest" "ColorTest$"
+
+color black "\<PLAIN\>"
+
+color red "\<red\>"
+color green "\<green\>"
+color yellow "\<yellow\>"
+color blue "\<blue\>"
+color magenta "\<magenta\>"
+color cyan "\<cyan\>"
+
+color brightred "\<brightred\>"
+color brightgreen "\<brightgreen\>"
+color brightyellow "\<brightyellow\>"
+color brightblue "\<brightblue\>"
+color brightmagenta "\<brightmagenta\>"
+color brightcyan "\<brightcyan\>"
diff --git a/.nano/syntax/conf.nanorc b/.nano/syntax/conf.nanorc
new file mode 100644
index 00000000..cf9f58a3
--- /dev/null
+++ b/.nano/syntax/conf.nanorc
@@ -0,0 +1,11 @@
+## Here is an example for nanorc files.
+##
+syntax "Conf" "\.c[o]?nf$"
+## Possible errors and parameters
+## Strings
+icolor white ""(\\.|[^"])*""
+## Comments
+icolor brightblue "^[[:space:]]*#.*$"
+icolor cyan "^[[:space:]]*##.*$"
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/conky.nanorc b/.nano/syntax/conky.nanorc
new file mode 100644
index 00000000..518938db
--- /dev/null
+++ b/.nano/syntax/conky.nanorc
@@ -0,0 +1,18 @@
+##
+## Syntax highlighting for conkyrc files.
+##
+##
+syntax "Conky" "(\.*conkyrc.*$|conky.conf)"
+
+## Configuration items
+color green "\<(alignment|append_file|background|border_inner_margin|border_outer_margin|border_width|color0|color1|color2|color3|color4|color5|color6|color7|color8|color9|colorN|cpu_avg_samples|default_bar_height|default_bar_width|default_color|default_gauge_height|default_gauge_width|default_graph_height|default_graph_width|default_outline_color|default_shade_color|diskio_avg_samples|display|double_buffer|draw_borders|draw_graph_borders|draw_outline|draw_shades|extra_newline|font|format_human_readable|gap_x|gap_y|http_refresh|if_up_strictness|imap|imlib_cache_flush_interval|imlib_cache_size|lua_draw_hook_post|lua_draw_hook_pre|lua_load|lua_shutdown_hook|lua_startup_hook|mail_spool|max_port_monitor_connections|max_text_width|max_user_text|maximum_width|minimum_height|minimum_width|mpd_host|mpd_password|mpd_port|music_player_interval|mysql_host|mysql_port|mysql_user|mysql_password|mysql_db|net_avg_samples|no_buffers|nvidia_display|out_to_console|out_to_http|out_to_ncurses|out_to_stderr|out_to_x|override_utf8_locale|overwrite_file|own_window|own_window_class|own_window_colour|own_window_hints|own_window_title|own_window_transparent|own_window_type|pad_percents|pop3|sensor_device|short_units|show_graph_range|show_graph_scale|stippled_borders|temperature_unit|template|template0|template1|template2|template3|template4|template5|template6|template7|template8|template9|text|text_buffer_size|times_in_seconds|top_cpu_separate|top_name_width|total_run_times|update_interval|update_interval_on_battery|uppercase|use_spacer|use_xft|xftalpha|xftfont)\>"
+
+## Configuration item constants
+color yellow "\<(above|below|bottom_left|bottom_right|bottom_middle|desktop|dock|no|none|normal|override|skip_pager|skip_taskbar|sticky|top_left|top_right|top_middle|middle_left|middle_right|middle_middle|undecorated|yes)\>"
+
+## Variables
+color brightblue "\<(acpiacadapter|acpifan|acpitemp|addr|addrs|alignc|alignr|apcupsd|apcupsd_cable|apcupsd_charge|apcupsd_lastxfer|apcupsd_linev|apcupsd_load|apcupsd_loadbar|apcupsd_loadgauge|apcupsd_loadgraph|apcupsd_model|apcupsd_name|apcupsd_status|apcupsd_temp|apcupsd_timeleft|apcupsd_upsmode|apm_adapter|apm_battery_life|apm_battery_time|audacious_bar|audacious_bitrate|audacious_channels|audacious_filename|audacious_frequency|audacious_length|audacious_length_seconds|audacious_main_volume|audacious_playlist_length|audacious_playlist_position|audacious_position|audacious_position_seconds|audacious_status|audacious_title|battery|battery_bar|battery_percent|battery_short|battery_time|blink|bmpx_album|bmpx_artist|bmpx_bitrate|bmpx_title|bmpx_track|bmpx_uri|buffers|cached|cmdline_to_pid|color|color0|color1|color2|color3|color4|color5|color6|color7|color8|color9|combine|conky_build_arch|conky_build_date|conky_version|cpu|cpubar|cpugauge|cpugraph|curl|desktop|desktop_name|desktop_number|disk_protect|diskio|diskio_read|diskio_write|diskiograph|diskiograph_read|diskiograph_write|distribution|downspeed|downspeedf|downspeedgraph|draft_mails|else|endif|entropy_avail|entropy_bar|entropy_perc|entropy_poolsize|eval|eve|exec|execbar|execgauge|execgraph|execi|execibar|execigauge|execigraph|execp|execpi|flagged_mails|font|format_time|forwarded_mails|freq|freq_g|fs_bar|fs_bar_free|fs_free|fs_free_perc|fs_size|fs_type|fs_used|fs_used_perc|goto|gw_iface|gw_ip|hddtemp|head|hr|hwmon|i2c|i8k_ac_status|i8k_bios|i8k_buttons_status|i8k_cpu_temp|i8k_left_fan_rpm|i8k_left_fan_status|i8k_right_fan_rpm|i8k_right_fan_status|i8k_serial|i8k_version|ibm_brightness|ibm_fan|ibm_temps|ibm_volume|ical|iconv_start|iconv_stop|if_empty|if_existing|if_gw|if_match|if_mixer_mute|if_mounted|if_mpd_playing|if_running|if_smapi_bat_installed|if_up|if_updatenr|if_xmms2_connected|image|imap_messages|imap_unseen|ioscheduler|irc|kernel|laptop_mode|lines|loadavg|loadgraph|lua|lua_bar|lua_gauge|lua_graph|lua_parse|machine|mails|mboxscan|mem|memwithbuffers|membar|memwithbuffersbar|memeasyfree|memfree|memgauge|memgraph|memmax|memperc|mixer|mixerbar|mixerl|mixerlbar|mixerr|mixerrbar|moc_album|moc_artist|moc_bitrate|moc_curtime|moc_file|moc_rate|moc_song|moc_state|moc_timeleft|moc_title|moc_totaltime|monitor|monitor_number|mpd_album|mpd_artist|mpd_bar|mpd_bitrate|mpd_elapsed|mpd_file|mpd_length|mpd_name|mpd_percent|mpd_random|mpd_repeat|mpd_smart|mpd_status|mpd_title|mpd_track|mpd_vol|mysql|nameserver|new_mails|nodename|nodename_short|no_update|nvidia|obsd_product|obsd_sensors_fan|obsd_sensors_temp|obsd_sensors_volt|obsd_vendor|offset|outlinecolor|pb_battery|pid_chroot|pid_cmdline|pid_cwd|pid_environ|pid_environ_list|pid_exe|pid_nice|pid_openfiles|pid_parent|pid_priority|pid_state|pid_state_short|pid_stderr|pid_stdin|pid_stdout|pid_threads|pid_thread_list|pid_time_kernelmode|pid_time_usermode|pid_time|pid_uid|pid_euid|pid_suid|pid_fsuid|pid_gid|pid_egid|pid_sgid|pid_fsgid|pid_read|pid_vmpeak|pid_vmsize|pid_vmlck|pid_vmhwm|pid_vmrss|pid_vmdata|pid_vmstk|pid_vmexe|pid_vmlib|pid_vmpte|pid_write|platform|pop3_unseen|pop3_used|processes|read_tcp|read_udp|replied_mails|rss|running_processes|running_threads|scroll|seen_mails|shadecolor|smapi|smapi_bat_bar|smapi_bat_perc|smapi_bat_power|smapi_bat_temp|sony_fanspeed|stippled_hr|stock|swap|swapbar|swapfree|swapmax|swapperc|sysname|tab|tail|tcp_ping|tcp_portmon|template0|template1|template2|template3|template4|template5|template6|template7|template8|template9|texeci|texecpi|threads|time|to_bytes|top|top_io|top_mem|top_time|totaldown|totalup|trashed_mails|tztime|gid_name|uid_name|unflagged_mails|unforwarded_mails|unreplied_mails|unseen_mails|updates|upspeed|upspeedf|upspeedgraph|uptime|uptime_short|user_names|user_number|user_terms|user_times|user_time|utime|voffset|voltage_mv|voltage_v|weather|wireless_ap|wireless_bitrate|wireless_essid|wireless_link_bar|wireless_link_qual|wireless_link_qual_max|wireless_link_qual_perc|wireless_mode|words|xmms2_album|xmms2_artist|xmms2_bar|xmms2_bitrate|xmms2_comment|xmms2_date|xmms2_duration|xmms2_elapsed|xmms2_genre|xmms2_id|xmms2_percent|xmms2_playlist|xmms2_size|xmms2_smart|xmms2_status|xmms2_timesplayed|xmms2_title|xmms2_tracknr|xmms2_url)\>"
+
+color brightblue "\$\{?[0-9A-Z_!@#$*?-]+\}?"
+color cyan "(\{|\}|\(|\)|\;|\]|\[|`|\\|\$|<|>|!|=|&|\|)"
+color brightred "^TEXT$"
diff --git a/.nano/syntax/csh.nanorc b/.nano/syntax/csh.nanorc
new file mode 100644
index 00000000..da13126f
--- /dev/null
+++ b/.nano/syntax/csh.nanorc
@@ -0,0 +1,15 @@
+## Here is an example for c-shell scripts.
+##
+syntax "CSH" "\.csh$" "\.tcshrc" "\.cshrc" "\.login" "\.logout" "\.history"
+header "^#!.*/(env +)?(t)?csh( |$)"
+
+color green "\<(break|breaksw|case|continue|default|else|end|endif|endsw|exec|exit|foreach|goto|if|repeat|shift|switch|then|while)\>"
+color green "(\{|\}|\(|\)|\;|\]|\[|`|\\|\$|<|>|!|=|&|\|)"
+color green "-[rfuMZwdgAUxlkebtAGoczpPsS]\>"
+color green "-(A\:|M\:|U\:|G\:)\>"
+color brightblue "\<(alias|bindkey|cat|cd|chmod|chown|complete|cp|echo|env|grep|install|ln|make|mkdir|mv|printenv|rm|sed|set|setenv|tar|touch|umask|unalias|uncomplete|unset|unsetenv)\>"
+icolor brightgreen "^\s+[0-9A-Z_]+\s+\(\)"
+icolor brightred "\$\{?[0-9A-Z_!@#$*?-]+\}?"
+color brightyellow ""(\\.|[^"])*"" "'(\\.|[^'])*'"
+color cyan "(^|[[:space:]])#.*$"
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/csharp.nanorc b/.nano/syntax/csharp.nanorc
new file mode 100644
index 00000000..893bb378
--- /dev/null
+++ b/.nano/syntax/csharp.nanorc
@@ -0,0 +1,26 @@
+syntax "C#" "\.cs$"
+
+# Class
+color brightmagenta  "class +[A-Za-z0-9]+ *((:) +[A-Za-z0-9.]+)?"
+
+# Annotation
+color magenta   "@[A-Za-z]+"
+
+color brightblue "[A-Za-z_][A-Za-z0-9_]*[[:space:]]*[()]"
+color green     "\<(bool|byte|sbyte|char|decimal|double|float|IntPtr|int|uint|long|ulong|object|short|ushort|string|base|this|var|void)\>"
+color cyan  "\<(alias|as|case|catch|checked|default|do|dynamic|else|finally|fixed|for|foreach|goto|if|is|lock|new|null|return|switch|throw|try|unchecked|while)\>"
+color cyan  "\<(abstract|async|class|const|delegate|enum|event|explicit|extern|get|implicit|in|internal|interface|namespace|operator|out|override|params|partial|private|protected|public|readonly|ref|sealed|set|sizeof|stackalloc|static|struct|typeof|unsafe|using|value|virtual|volatile|yield)\>"
+# LINQ-only keywords (ones that cannot be used outside of a LINQ query - lots others can)
+color cyan  "\<(from|where|select|group|info|orderby|join|let|in|on|equals|by|ascending|descending)\>"
+color brightred     "\<(break|continue)\>"
+color brightcyan "\<(true|false)\>"
+color red "[-+/*=<>?:!~%&|]"
+color blue   "\<([0-9._]+|0x[A-Fa-f0-9_]+|0b[0-1_]+)[FL]?\>"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color magenta   "\\([btnfr]|'|\"|\\)"
+color magenta   "\\u[A-Fa-f0-9]{4}"
+color brightblack "(^|[[:space:]])//.*"
+color brightblack start="^\s*/\*" end="\*/"
+color brightwhite,cyan "TODO:?"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/css.nanorc b/.nano/syntax/css.nanorc
new file mode 100644
index 00000000..04d4a971
--- /dev/null
+++ b/.nano/syntax/css.nanorc
@@ -0,0 +1,13 @@
+## Here is an example for css files.
+##
+
+syntax "CSS" "\.(css|scss|less)$"
+color brightred     "."
+color brightyellow  start="\{" end="\}"
+color brightwhite   start=":" end="[;^\{]"
+color brightblue    ":active|:focus|:hover|:link|:visited|:link|:after|:before|$"
+color brightblue    start="\/\*" end="\*\/"
+color green         ";|:|\{|\}"
+
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/csv.nanorc b/.nano/syntax/csv.nanorc
new file mode 100644
index 00000000..14d7d9cb
--- /dev/null
+++ b/.nano/syntax/csv.nanorc
@@ -0,0 +1,16 @@
+# Rainbow CSV highlighting rules (12 column coverage)
+# Inspired by https://github.com/mechatroner/rainbow_csv
+syntax "CSV" "\.csv$"
+
+color brightmagenta "^("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)|^([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?"
+color brightcyan "^("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)|^([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?"
+color brightblue "^("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)|^([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?"
+color brightyellow "^("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)|^([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?"
+color brightgreen "^("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)|^([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?"
+color brightred "^("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)|^([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?([^,]*,?))?"
+color cyan "^("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)|^([^,]*,)?([^,]*,)?([^,]*,)?([^,]*,)?([^,]*,)?([^,]*,)?"
+color magenta "^("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)|^([^,]*,)?([^,]*,)?([^,]*,)?([^,]*,)?([^,]*,)?"
+color blue "^("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)|^([^,]*,)?([^,]*,)?([^,]*,)?([^,]*,)?"
+color yellow "^("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)|^([^,]*,)?([^,]*,)?([^,]*,)?"
+color green "^("([^"]*"")*[^"]*",?)("([^"]*"")*[^"]*",?)|^([^,]*,)?([^,]*,)?"
+color red "^("([^"]*"")*[^"]*",?)|^([^,]*,?))?"
diff --git a/.nano/syntax/cython.nanorc b/.nano/syntax/cython.nanorc
new file mode 100644
index 00000000..0f73704c
--- /dev/null
+++ b/.nano/syntax/cython.nanorc
@@ -0,0 +1,33 @@
+## Cython nanorc, based off of Python nanorc.
+##
+syntax "Cython" "\.pyx$" "\.pxd$" "\.pyi$"
+icolor brightred "def [ 0-9A-Z_]+"
+icolor brightred "cpdef [0-9A-Z_]+\(.*\):"
+icolor brightred "cdef cppclass [ 0-9A-Z_]+\(.*\):"
+
+
+
+# Python Keyword Color
+color green "\<(and|as|assert|class|def|DEF|del|elif|ELIF|else|ELSE|except|exec|finally|for|from|global|if|IF|import|in|is|lambda|map|not|or|pass|print|raise|try|while|with|yield)\>"
+color brightmagenta "\<(continue|break|return)\>"
+
+# Cython Keyword Color
+color green "\<(cdef|cimport|cpdef|cppclass|ctypedef|extern|include|namespace|property|struct)\>"
+color red "\<(bint|char|double|int|public|void|unsigned)\>"
+
+#Operator Color
+color yellow "[.:;,+*|=!\%]" "<" ">" "/" "-" "&"
+
+#Parenthetical Color
+color magenta "[(){}]" "\[" "\]"
+
+#String Color
+color cyan "['][^']*[^\\][']" "[']{3}.*[^\\][']{3}"
+color cyan "["][^"]*[^\\]["]" "["]{3}.*[^\\]["]{3}"
+color cyan start=""""[^"]" end=""""" start="'''[^']" end="'''"
+
+# Comment Color
+color brightblue "#.*$"
+
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/dot.nanorc b/.nano/syntax/dot.nanorc
new file mode 100644
index 00000000..40d4d06b
--- /dev/null
+++ b/.nano/syntax/dot.nanorc
@@ -0,0 +1,8 @@
+syntax "DOT" "\.(dot|gv)$"
+
+color cyan   "\<(digraph|edge|graph|node|subgraph)\>"
+color magenta "\<(arrowhead|arrowsize|arrowtail|bgcolor|center|color|constraint|decorateP|dir|distortion|fillcolor|fontcolor|fontname|fontsize|headclip|headlabel|height|labelangle|labeldistance|labelfontcolor|labelfontname|labelfontsize|label|layers|layer|margin|mclimit|minlen|name|nodesep|nslimit|ordering|orientation|pagedir|page|peripheries|port_label_distance|rankdir|ranksep|rank|ratio|regular|rotate|samehead|sametail|shapefile|shape|sides|size|skew|style|tailclip|taillabel|URL|weight|width)\>"
+color red  "=|->|--"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color brightblack "(^|[[:space:]])//.*"
+color brightblack start="^\s*/\*" end="\*/"
diff --git a/.nano/syntax/dotenv.nanorc b/.nano/syntax/dotenv.nanorc
new file mode 100644
index 00000000..3f21b9b9
--- /dev/null
+++ b/.nano/syntax/dotenv.nanorc
@@ -0,0 +1,10 @@
+## Syntax highlight for .env files, eg. https://symfony.com/doc/current/components/dotenv.html
+## 
+## Derived from sh.nanorc
+##
+syntax "dotenv" "\.env" "\.env\..+"
+
+color green "(\(|\)|\$|=)"
+color brightyellow ""(\\.|[^"])*"" "'(\\.|[^'])*'"
+color cyan "(^|[[:space:]])#.*$"
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/elixir.nanorc b/.nano/syntax/elixir.nanorc
new file mode 100644
index 00000000..25b0cb00
--- /dev/null
+++ b/.nano/syntax/elixir.nanorc
@@ -0,0 +1,50 @@
+## Here is an example for Elixir.
+##
+syntax "Elixir" "\.ex$" "\.exs$"
+header "^#!.*/(env +)?elixir( |$)"
+
+## reserved words
+color yellow "\<(case|cond|true|if|false|nil|when|and|or|not|in|fn|do|end|catch|rescue|after|else|with)\>"
+color yellow "def[a-z]*"
+
+## Constants
+color brightblue "@[a-z]+"
+
+## Elixir atoms
+color magenta ":[0-9a-z_]+"
+
+## Elixir Modules
+color magenta "[A-Z][a-zA-Z0-9]*"
+
+## Elixir types
+color red "[A-Z][A-Za-z]+\.t\(\)"
+
+## Some unique things we want to stand out
+color brightyellow "\<(__CALLER__|__DIR__|__ENV__|__MODULE__|__STACKTRACE__)\>"
+color brightyellow "\<(__add__|__aliases__|__build__|__block__|__deriving__|__info__|__protocol__|__struct__|__using__)\>"
+
+## sigils
+color brightmagenta "~[a-z]\/([^\/])*\/[a-z]*" "~[a-z]\|([^\|])*\|[a-z]*" "~[a-z]\"([^\"])*\"[a-z]*" "~[a-z]\'([^\'])*\'[a-z]*" "~[a-z]\(([^\(\)])*\)[a-z]*" "~[a-z]\[([^\[\]])*\][a-z]*" "~[a-z]\{([^\{\}])*\}[a-z]*" "~[a-z]\<([^\<\>])*\>[a-z]*" 
+
+## Strings, double-quoted
+color green ""([^"]|(\\"))*""
+
+## Expression substitution.  These go inside double-quoted strings,
+## "like #{this}".
+color brightgreen "#\{[^}]*\}"
+
+## Strings, single-quoted
+color green "'([^']|(\\'))*'"
+
+## Comments
+color cyan "#.*$" "#$"
+color brightcyan "##.*$" "##$"
+
+## "Here" docs
+color green start="\"\"\"" end="\"\"\""
+
+## Some common markers
+color brightcyan "(XXX|TODO|FIXME|\?\?\?)"
+
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/email.nanorc b/.nano/syntax/email.nanorc
new file mode 100644
index 00000000..fd3cf70b
--- /dev/null
+++ b/.nano/syntax/email.nanorc
@@ -0,0 +1,5 @@
+syntax "Email"
+
+color magenta "^>([^>].*|$)"
+color blue "^>>([^>].*|$)"
+color green "^>>>.*"
diff --git a/.nano/syntax/erb.nanorc b/.nano/syntax/erb.nanorc
new file mode 100644
index 00000000..9a581b2a
--- /dev/null
+++ b/.nano/syntax/erb.nanorc
@@ -0,0 +1,26 @@
+## A HTML+Ruby set for Syntax Highlighting .erb files (Embedded RubyRails Views etc) ERB
+## (c) 2009, Georgios V. Michalakidis - g.michalakidis@computer.org
+## Licensed under the CC (Creative Commons) License.
+##
+## https://github.com/geomic/ERB-And-More-Code-Highlighting-for-nano
+
+syntax "ERB" "\.erb$" "\.rhtml$"
+color blue start="<" end=">"
+color white start="<%" end="%>"
+color red "&[^;[[:space:]]]*;"
+color yellow "\<(BEGIN|END|alias|and|begin|break|case|class|def|defined\?|do|else|elsif|end|ensure|false|for|if|in|module|next|nil|not|or|redo|rescue|retry|return|self|super|then|true|undef|unless|until|when|while|yield)\>"
+color brightblue "(\$|@|@@)?\<[A-Z]+[0-9A-Z_a-z]*"
+icolor magenta "([  ]|^):[0-9A-Z_]+\>"
+color brightyellow "\<(__FILE__|__LINE__)\>"
+color brightmagenta "!/([^/]|(\\/))*/[iomx]*" "%r\{([^}]|(\\}))*\}[iomx]*"
+color brightblue "`[^`]*`" "%x\{[^}]*\}"
+color green ""([^"]|(\\"))*"" "%[QW]?\{[^}]*\}" "%[QW]?\([^)]*\)" "%[QW]?<[^>]*>" "%[QW]?\[[^]]*\]" "%[QW]?\$[^$]*\$" "%[QW]?\^[^^]*\^" "%[QW]?![^!]*!"
+color brightgreen "#\{[^}]*\}"
+color green "'([^']|(\\'))*'" "%[qw]\{[^}]*\}" "%[qw]\([^)]*\)" "%[qw]<[^>]*>" "%[qw]\[[^]]*\]" "%[qw]\$[^$]*\$" "%[qw]\^[^^]*\^" "%[qw]![^!]*!"
+color cyan "#[^{].*$" "#$"
+color brightcyan "##[^{].*$" "##$"
+color green start="<<-?'?EOT'?" end="^EOT"
+color brightcyan "(XXX|TODO|FIXME|\?\?\?)"
+
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/etc-hosts.nanorc b/.nano/syntax/etc-hosts.nanorc
new file mode 100644
index 00000000..eb8a51ec
--- /dev/null
+++ b/.nano/syntax/etc-hosts.nanorc
@@ -0,0 +1,15 @@
+## Make /etc/hosts nicer to read, see `man hosts 5` to see the format
+syntax "/etc/hosts" "hosts"
+
+# IPv4
+color yellow "^[0-9\.]+\s"
+
+# IPv6
+icolor green "^[0-9a-f:]+\s"
+
+# interpunction
+color normal "[.:]"
+
+# comments
+color brightblack "^#.*"
+
diff --git a/.nano/syntax/fish.nanorc b/.nano/syntax/fish.nanorc
new file mode 100644
index 00000000..081ee9a6
--- /dev/null
+++ b/.nano/syntax/fish.nanorc
@@ -0,0 +1,15 @@
+## Here is an example for Fish shell scripts.
+##
+syntax "Fish" "\.fish$"
+header "^#!.*/(env +)?fish( |$)"
+icolor brightgreen "^[0-9A-Z_]+\(\)"
+color green "\<(alias|begin|break|case|continue|contains|else|end|for|function|if|math|return|set|switch|test|while)\>"
+color green "(\{|\}|\(|\)|\;|\]|\[|`|\\|\$|<|>|!|=|&|\|)"
+color green "\<(and|isatty|not|or|in)\>"
+color yellow "--[a-z-]+"
+color brightmagenta "\ -[a-z]+"
+color brightblue "\<(bg|bind|block|breakpoint|builtin|cd|command|commandline|complete|dirh|dirs|echo|emit|eval|exec|exit|fg|fish|fish_config|fish_ident|fish_pager|fish_prompt|fish_right_prompt|fish_update_completions|fishd|funced|funcsave|functions|help|history|jobs|mimedb|nextd|open|popd|prevd|psub|pushd|pwd|random|read|set_color|status|trap|type|ulimit|umask|vared)\>"
+icolor brightred "\$\{?[0-9A-Z_!@#$*?-]+\}?"
+color cyan "(^|[[:space:]])#.*$"
+color brightyellow ""(\\.|[^"])*"" "'(\\.|[^'])*'"
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/fortran.nanorc b/.nano/syntax/fortran.nanorc
new file mode 100644
index 00000000..73534d89
--- /dev/null
+++ b/.nano/syntax/fortran.nanorc
@@ -0,0 +1,53 @@
+## Here is an example for Fortran 90/95
+
+syntax "Fortran" "\.([Ff]|[Ff]90|[Ff]95|[Ff][Oo][Rr])$"
+comment "!"
+#color red "\<[A-Z_]a[0-9A-Z_]+\>" 
+color red "\<[0-9]+\>" 
+
+icolor green "\<(action|advance|all|allocatable|allocated|any|apostrophe)\>"
+icolor green "\<(append|asis|assign|assignment|associated|character|common)\>"
+icolor green "\<(complex|data|default|delim|dimension|double precision)\>"
+icolor green "\<(elemental|epsilon|external|file|fmt|form|format|huge)\>"
+icolor green "\<(implicit|include|index|inquire|integer|intent|interface)\>"
+icolor green "\<(intrinsic|iostat|kind|logical|module|none|null|only)\>"
+icolor green "\<(operator|optional|pack|parameter|pointer|position|private)\>"
+icolor green "\<(program|public|real|recl|recursive|selected_int_kind)\>"
+icolor green "\<(selected_real_kind|subroutine|status)\>"
+
+icolor cyan "\<(abs|achar|adjustl|adjustr|allocate|bit_size|call|char)\>" 
+icolor cyan "\<(close|contains|count|cpu_time|cshift|date_and_time)\>" 
+icolor cyan "\<(deallocate|digits|dot_product|eor|eoshift|function|iachar)\>" 
+icolor cyan "\<(iand|ibclr|ibits|ibset|ichar|ieor|iolength|ior|ishft|ishftc)\>" 
+icolor cyan "\<(lbound|len|len_trim|matmul|maxexponent|maxloc|maxval|merge)\>" 
+icolor cyan "\<(minexponent|minloc|minval|mvbits|namelist|nearest|nullify)\>" 
+icolor cyan "\<(open|pad|present|print|product|pure|quote|radix)\>" 
+icolor cyan "\<(random_number|random_seed|range|read|readwrite|replace)\>" 
+icolor cyan "\<(reshape|rewind|save|scan|sequence|shape|sign|size|spacing)\>" 
+icolor cyan "\<(spread|sum|system_clock|target|transfer|transpose|trim)\>" 
+icolor cyan "\<(ubound|unpack|verify|write|tiny|type|use|yes)\>"
+
+icolor yellow "\<(.and.|case|do|else|else?if|else?where|end|end?do|end?if)\>"
+icolor yellow "\<(end?select|.eqv.|forall|if|lge|lgt|lle|llt|.neqv.|.not.)\>"
+icolor yellow "\<(.or.|repeat|select case|then|where|while)\>"
+
+icolor magenta "\<(continue|cycle|exit|go?to|result|return)\>"
+
+#Operator Color
+color yellow "[.:;,+*|=!\%]" "<" ">" "/" "-" "&"
+
+#Parenthetical Color
+color magenta "[(){}]" "\[" "\]"
+
+# Add preprocessor commands.
+color brightcyan "^[[:space:]]*#[[:space:]]*(define|include|(un|ifn?)def|endif|el(if|se)|if|warning|error)"
+
+## String highlighting.  
+icolor cyan "<[^=     ]*>" ""(\\.|[^"])*""
+icolor cyan "<[^=     ]*>" "'(\\.|[^"])*'"
+
+## Comment highlighting
+icolor brightred "!.*$" "(^[Cc]| [Cc]) .*$"
+
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/fsharp.nanorc b/.nano/syntax/fsharp.nanorc
new file mode 100644
index 00000000..0ec109d2
--- /dev/null
+++ b/.nano/syntax/fsharp.nanorc
@@ -0,0 +1,39 @@
+syntax "F#" "\.fs$" "\.fsx$"
+
+# Type and Module Definitions
+color brightgreen  "type +[A-Za-z0-9]+ *((:) +[A-Za-z0-9.]+)?"
+color brightgreen  "module +[A-Za-z0-9]+ *((:) +[A-Za-z0-9.]+)?"
+color brightmagenta  "\<(List|Seq|Array|Option|Choice|Map|list|seq|array|option|choice|ref|in|out)\>"
+color brightgreen    "<+[A-Za-z0-9'^]+ *((:) +[A-Za-z0-9'^.]+)?>"
+# Attributes
+color brightmagenta  "[<+[A-Za-z0-9]+ *((:) +[A-Za-z0-9.]+)?>]"
+
+# Annotation
+color magenta   "@[A-Za-z]+"
+
+# Basic Types
+color brightgreen     "\<(bool|byte|sbyte|int16|uint16|int|uint32|int64|uint64|char|decimal|double|float|float32|single|nativeint|IntPtr|unativeint|UIntPtr|object|string)\>"
+
+#  Keywords
+color cyan            "\<(abstract|and|let|as|assert|base|begin|class|default|delegate|do|for|to|in|while|done|downcast|downto|elif|if|then|else|end|exception|extern|false|finally|try|fixed|fun|function|match|global|inherit|inline|interface|internal|lazy|let!|match!|member|module|mutable|namespace|new|not|not struct|null|of|open|or|override|private|public|rec|return|return!|select|static|struct|true|with|type|upcast|use|use!|val|void|when|yield|yield!)\>"
+
+color red "[-+/*=<>?:!~%&|]"
+color blue   "\<([0-9._]+|0x[A-Fa-f0-9_]+|0b[0-1_]+)[FL]?\>"
+color magenta   "\\([btnfr]|'|\"|\\)"
+color magenta   "\\u[A-Fa-f0-9]{4}"
+# String
+color yellow ""(\\.|[^"])*""
+
+# Comments
+color brightblack "(^|[[:space:]])//.*"
+color brightblack start="^\s*/\*" end="\*/"
+color brightblack start="\(\*" end="\*\)"
+color brightwhite,cyan "TODO:?"
+
+color ,green "[[:space:]]+$"
+color ,red "    + +| +  +"
+
+color red "#if .+"
+color red "#endif"
+
+color white start="``" end="``"
diff --git a/.nano/syntax/genie.nanorc b/.nano/syntax/genie.nanorc
new file mode 100644
index 00000000..0cd37225
--- /dev/null
+++ b/.nano/syntax/genie.nanorc
@@ -0,0 +1,53 @@
+## Here is an example for Genie.
+syntax "genie" "\.gs$"
+
+# Namespace.
+color magenta "\<(uses|namespace)\>"
+
+# Data types.
+color green "\<(bool|byte|char|date|datetime|decimal|double|float|int|long|object|sbyte|short|single|string|ulong|ushort)\>"
+
+# Definitions.
+color brightred "\<(const|class|construct|def|delegate|enum|exception|extern|event|final|get|init|inline|interface|override|prop|return|set|static|struct|var|virtual|weak)\>"
+
+# Keywords.
+color red "\<(abstract|as|and|break|case|cast|continue|default|delete|div|do|downto|dynamic|else|ensures|except|extern|finally|for|if|implements|in|isa|is|lock|new|not|of|out|or|otherwise|pass|private|raise|raises|readonly|ref|requires|to|try|unless|when|while)\>"
+
+# Special variables.
+color brightcyan "\<(self|super)\>"
+
+# Null value.
+color brightyellow "\<(null)\>"
+
+# Boolean.
+color yellow "\<(false|true)\>"
+
+# Builtin functions.
+color cyan "\<(array|assert|dict|list|max|min|print|prop|sizeof|typeof)\>"
+
+# Numbers.
+color brightmagenta "[0-9][0-9\.]*(m|ms|d|h|s|f|F|l|L)?"
+
+# Regular expression.
+color brightgreen "/(\\.|[^/])*/"
+
+# Double quoted string.
+color brightblue ""(\\.|[^"])*""
+
+# Single quoted string.
+color brightblue "'(\\.|[^'])*'"
+
+# Multiline string.
+color blue start=""""" end="""""
+
+# Line comment.
+color yellow "(^|[[:space:]])//.*"
+
+# Block comment.
+color yellow start="^\s*/\*" end="\*/"
+
+# Trailing whitespace.
+color ,green "[[:space:]]+$"
+
+# Spaces in front or rear of tabs.
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/gentoo.nanorc b/.nano/syntax/gentoo.nanorc
new file mode 100644
index 00000000..4959fa93
--- /dev/null
+++ b/.nano/syntax/gentoo.nanorc
@@ -0,0 +1,52 @@
+## Here is an example for ebuilds/eclasses
+##
+syntax "Ebuild" "\.e(build|class)$"
+comment "#"
+
+## All the standard portage functions
+color brightgreen "^src_(unpack|compile|install|test)" "^pkg_(config|nofetch|setup|(pre|post)(inst|rm))"
+## Highlight bash related syntax
+color green "\<(case|do|done|elif|else|esac|exit|fi|for|function|if|in|local|read|return|select|shift|then|time|until|while|continue|break)\>"
+color green "(\{|\}|\(|\)|\;|\]|\[|`|\\|\$|<|>|!|=|&|\|)"
+color green "-(e|d|f|r|g|u|w|x|L)\>"
+color green "-(eq|ne|gt|lt|ge|le|s|n|z)\>"
+## Highlight variables ... official portage ones in red, all others in bright red
+color brightred "\$\{?[a-zA-Z_0-9]+\}?"
+color red "\<(ARCH|HOMEPAGE|DESCRIPTION|IUSE|SRC_URI|LICENSE|SLOT|KEYWORDS|FILESDIR|WORKDIR|(P|R)?DEPEND|PROVIDE|DISTDIR|RESTRICT|USERLAND)\>"
+color red "\<(S|D|T|PV|PF|P|PN|A)\>" "\<C(XX)?FLAGS\>" "\<LDFLAGS\>" "\<C(HOST|TARGET|BUILD)\>"
+## Highlight portage commands
+color magenta "\<use(_(with|enable))?\> [!a-zA-Z0-9_+ -]*" "inherit.*"
+color brightblue "\<e(begin|end|conf|install|make|warn|infon?|error|log|patch|new(group|user))\>"
+color brightblue "\<die\>" "\<use(_(with|enable))?\>" "\<inherit\>" "\<has\>" "\<(has|best)_version\>" "\<unpack\>"
+color brightblue "\<(do|new)(ins|s?bin|doc|lib(\.so|\.a)|man|info|exe|initd|confd|envd|pam|menu|icon)\>"
+color brightblue "\<do(python|sed|dir|hard|sym|html|jar|mo)\>" "\<keepdir\>"
+color brightblue "prepall(docs|info|man|strip)" "prep(info|lib|lib\.(so|a)|man|strip)"
+color brightblue "\<(doc|ins|exe)into\>" "\<f(owners|perms)\>" "\<(exe|ins|dir)opts\>"
+## Highlight common commands used in ebuilds
+color blue "\<make\>" "\<(cat|cd|chmod|chown|cp|echo|env|export|grep|let|ln|mkdir|mv|rm|sed|set|tar|touch|unset)\>"
+## Highlight comments (doesnt work that well)
+color yellow "#.*$"
+## Highlight strings (doesnt work that well)
+color brightyellow ""(\\.|[^\"])*"" "'(\\.|[^'])*'"
+## Trailing space is bad!
+color ,green "[[:space:]]+$"
+
+## Here is an example for Portage control files
+##
+syntax "etc-portage" "\.(keywords|mask|unmask|use)$"
+## Base text:
+color green "^.+$"
+## Use flags:
+color brightred "[[:space:]]+\+?[a-zA-Z0-9_-]+"
+color brightblue "[[:space:]]+-[a-zA-Z0-9_-]+"
+## Likely version numbers:
+color magenta "-[[:digit:]].*([[:space:]]|$)"
+## Accepted arches:
+color white "[~-]?\<(alpha|amd64|arm|hppa|ia64|mips|ppc|ppc64|s390|sh|sparc|x86|x86-fbsd)\>"
+color white "[[:space:]][~-]?\*"
+## Categories:
+color cyan "^[[:space:]]*.*/"
+## Masking regulators:
+color brightmagenta "^[[:space:]]*(=|~|<|<=|=<|>|>=|=>)"
+## Comments:
+color yellow "#.*$"
diff --git a/.nano/syntax/git.nanorc b/.nano/syntax/git.nanorc
new file mode 100644
index 00000000..0aaf4755
--- /dev/null
+++ b/.nano/syntax/git.nanorc
@@ -0,0 +1,80 @@
+syntax "git-config" "git(config|modules)$|\.git/config$"
+
+color brightcyan "\<(true|false)\>"
+color cyan "^[[:space:]]*[^=]*="
+color brightmagenta "^[[:space:]]*\[.*\]$"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color brightblack "(^|[[:space:]])#([^{].*)?$"
+color ,green "[[:space:]]+$"
+color ,red "	+"
+
+# This code is free software; you can redistribute it and/or modify it under
+# the terms of the new BSD License.
+#
+# Copyright (c) 2010, Sebastian Staudt
+
+# A nano configuration file to enable syntax highlighting of some Git specific
+# files with the GNU nano text editor (http://www.nano-editor.org)
+#
+syntax "git-commit" "COMMIT_EDITMSG|TAG_EDITMSG"
+
+# Commit message
+color yellow ".*"
+
+# Comments
+color brightblack "^#.*"
+
+# Files changes
+color white       "#[[:space:]](deleted|modified|new file|renamed):[[:space:]].*"
+color red         "#[[:space:]]deleted:"
+color green       "#[[:space:]]modified:"
+color brightgreen "#[[:space:]]new file:"
+color brightblue  "#[[:space:]]renamed:"
+
+# Untracked filenames
+color black "^#	[^/?*:;{}\\]+\.[^/?*:;{}\\]+$"
+
+color brightmagenta "^#[[:space:]]Changes.*[:]"
+color brightred "^#[[:space:]]Your branch and '[^']+"
+color brightblack "^#[[:space:]]Your branch and '"
+color brightwhite "^#[[:space:]]On branch [^ ]+"
+color brightblack "^#[[:space:]]On branch"
+
+# Recolor hash symbols
+
+# Recolor hash symbols
+color brightblack "#"
+
+# Trailing spaces (+LINT is not ok, git uses tabs)
+color ,green "[[:space:]]+$"
+
+
+# This syntax format is used for interactive rebasing
+syntax "git-rebase-todo" "git-rebase-todo"
+
+# Default
+color yellow ".*"
+
+# Comments
+color brightblack "^#.*"
+
+# Rebase commands
+color green       "^(e|edit) [0-9a-f]{7,40}"
+color green       "^#  (e, edit)"
+color brightgreen "^(f|fixup) [0-9a-f]{7,40}"
+color brightgreen "^#  (f, fixup)"
+color brightwhite "^(p|pick) [0-9a-f]{7,40}"
+color brightwhite "^#  (p, pick)"
+color blue        "^(r|reword) [0-9a-f]{7,40}"
+color blue        "^#  (r, reword)"
+color brightred   "^(s|squash) [0-9a-f]{7,40}"
+color brightred   "^#  (s, squash)"
+color yellow      "^(x|exec) [^ ]+ [0-9a-f]{7,40}"
+color yellow      "^#  (x, exec)"
+
+# Recolor hash symbols
+color brightblack "#"
+
+# Commit IDs
+color brightblue "[0-9a-f]{7,40}"
+
diff --git a/.nano/syntax/gitcommit.nanorc b/.nano/syntax/gitcommit.nanorc
new file mode 120000
index 00000000..22ae20de
--- /dev/null
+++ b/.nano/syntax/gitcommit.nanorc
@@ -0,0 +1 @@
+git.nanorc
\ No newline at end of file
diff --git a/.nano/syntax/glsl.nanorc b/.nano/syntax/glsl.nanorc
new file mode 100644
index 00000000..d098e294
--- /dev/null
+++ b/.nano/syntax/glsl.nanorc
@@ -0,0 +1,15 @@
+syntax "GLSL" "\.(frag|vert|fp|vp|glsl)$"
+
+color brightblue "[A-Za-z_][A-Za-z0-9_]*[[:space:]]*[()]"
+color green     "\<(void|bool|bvec2|bvec3|bvec4|int|ivec2|ivec3|ivec4|float|vec2|vec3|vec4|mat2|mat3|mat4|struct|sampler1D|sampler2D|sampler3D|samplerCUBE|sampler1DShadow|sampler2DShadow)\>"
+color green     "\<gl_(DepthRangeParameters|PointParameters|MaterialParameters|LightSourceParameters|LightModelParameters|LightModelProducts|LightProducts|FogParameters)\>"
+color cyan  "\<(const|attribute|varying|uniform|in|out|inout|if|else|return|discard|while|for|do)\>"
+color brightred     "\<(break|continue)\>"
+color brightcyan "\<(true|false)\>"
+color red "[-+/*=<>?:!~%&|^]"
+color blue   "\<([0-9]+|0x[0-9a-fA-F]*)\>"
+color brightblack "(^|[[:space:]])//.*"
+color brightblack start="^\s*/\*" end="\*/"
+color brightwhite,cyan "TODO:?"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/go.nanorc b/.nano/syntax/go.nanorc
new file mode 100644
index 00000000..acd32df8
--- /dev/null
+++ b/.nano/syntax/go.nanorc
@@ -0,0 +1,23 @@
+syntax "GO" "\.go$"
+comment "//"
+
+color brightblue "[A-Za-z_][A-Za-z0-9_]*[[:space:]]*[()]"
+color brightblue "\<(append|cap|close|complex|copy|delete|imag|len)\>"
+color brightblue "\<(make|new|panic|print|println|protect|real|recover)\>"
+color green     "\<(u?int(8|16|32|64)?|float(32|64)|complex(64|128))\>"
+color green     "\<(uintptr|byte|rune|string|interface|bool|map|chan|error)\>"
+color cyan  "\<(package|import|const|var|type|struct|func|go|defer|nil|iota)\>"
+color cyan  "\<(for|range|if|else|case|default|switch|return)\>"
+color brightred     "\<(go|goto|break|continue)\>"
+color brightcyan "\<(true|false)\>"
+color red "[-+/*=<>!~%&|^]|:="
+color blue   "\<([0-9]+|0x[0-9a-fA-F]*)\>|'.'"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color magenta   "\\[abfnrtv'\"\\]"
+color magenta   "\\([0-7]{3}|x[A-Fa-f0-9]{2}|u[A-Fa-f0-9]{4}|U[A-Fa-f0-9]{8})"
+color yellow   "`[^`]*`"
+color brightblack "(^|[[:space:]])//.*"
+color brightblack start="^\s*/\*" end="\*/"
+color brightwhite,cyan "TODO:?"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/gradle.nanorc b/.nano/syntax/gradle.nanorc
new file mode 100644
index 00000000..58d73763
--- /dev/null
+++ b/.nano/syntax/gradle.nanorc
@@ -0,0 +1,23 @@
+syntax "groovy" "\.(groovy|gradle)$"
+
+# Keywords
+color brightblue "\<(boolean|byte|char|double|enum|float|int|long|new|short|super|this|transient)\>"
+color brightblue "\<(as|assert|break|case|catch|continue|default|do|else|finally|for|goto|if|in|return|switch|throw|try|while)\>"
+color brightblue "\<(abstract|class|extends|implements|import|interface|native|package|private|protected|public|static|strictfp|synchronized|throws|trait|void|volatile)\>"
+color brightblue "\<(const|def|final|instanceof)\>"
+color brightblue "\<(true|false|null)\>"
+
+# Strings
+color brightyellow ""(\\.|[^"])*"" "'(\\.|[^'])*'"
+
+# Interpolation
+icolor yellow "\$\{[^\}]*}"
+
+# Comments
+color cyan "^//.*"
+color cyan "\s//.*"
+color cyan start="^/\*(\*)?" end="\*/"
+color cyan start="\s/\*(\*)?" end="\*/"
+
+# Trailing whitespace
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/groff.nanorc b/.nano/syntax/groff.nanorc
new file mode 100644
index 00000000..508c4abf
--- /dev/null
+++ b/.nano/syntax/groff.nanorc
@@ -0,0 +1,26 @@
+## Here is an example for groff.
+##
+syntax "Groff" "\.m[ems]$" "\.rof" "\.tmac$" "^tmac."
+comment ".\""
+
+## The argument of .ds or .nr
+color cyan "^\.(ds|nr) [^[[:space:]]]*"
+## Single character escapes
+color brightmagenta "\\."
+## Highlight the argument of \f or \s in the same color
+color brightmagenta "\\f." "\\f\(.." "\\s(\+|\-)?[0-9]"
+## Newlines
+color cyan "(\\|\\\\)n(.|\(..)"
+color cyan start="(\\|\\\\)n\[" end="]"
+## Requests
+color brightgreen "^\.[[:space:]]*[^[[:space:]]]*"
+## Comments
+color yellow "^\.\\".*$"
+## Strings
+color green "(\\|\\\\)\*(.|\(..)"
+color green start="(\\|\\\\)\*\[" end="]"
+## Characters
+color brightred "\\\(.."
+color brightred start="\\\[" end="]"
+## Macro arguments
+color brightcyan "\\\\\$[1-9]"
diff --git a/.nano/syntax/haml.nanorc b/.nano/syntax/haml.nanorc
new file mode 100644
index 00000000..3337882f
--- /dev/null
+++ b/.nano/syntax/haml.nanorc
@@ -0,0 +1,18 @@
+syntax "Haml" "\.haml$"
+
+color cyan   "-|="
+color white "->|=>"
+icolor cyan "([  ]|^)%[0-9A-Z_]+\>"
+icolor magenta ":[0-9A-Z_]+\>"
+icolor yellow "\.[A-Z_]+\>"
+## Double quote & single quote
+color green ""([^"]|(\\"))*"" "%[QW]?\{[^}]*\}" "%[QW]?\([^)]*\)" "%[QW]?<[^>]*>" "%[QW]?\$[^$]*\$" "%[QW]?\^[^^]*\^" "%[QW]?![^!]*!"
+color green "'([^']|(\\'))*'" "%[qw]\{[^}]*\}" "%[qw]\([^)]*\)" "%[qw]<[^>]*>" "%[qw]\[[^]]*\]" "%[qw]\$[^$]*\$" "%[qw]\^[^^]*\^" "%[qw]![^!]*!"
+## Vars
+color brightgreen  "#\{[^}]*\}"
+color brightblue "(@|@@)[0-9A-Z_a-z]+"
+## Comments
+color brightcyan "#[^{].*$" "#$"
+
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/haskell.nanorc b/.nano/syntax/haskell.nanorc
new file mode 100644
index 00000000..f42ba06c
--- /dev/null
+++ b/.nano/syntax/haskell.nanorc
@@ -0,0 +1,34 @@
+syntax "Haskell" "\.hs$"
+
+## Keywords
+color red "[ ](as|case|of|class|data|default|deriving|do|forall|foreign|hiding|if|then|else|import|infix|infixl|infixr|instance|let|in|mdo|module|newtype|qualified|type|where)[ ]"
+color red "(^data|^foreign|^import|^infix|^infixl|^infixr|^instance|^module|^newtype|^type)[ ]"
+color red "[ ](as$|case$|of$|class$|data$|default$|deriving$|do$|forall$|foreign$|hiding$|if$|then$|else$|import$|infix$|infixl$|infixr$|instance$|let$|in$|mdo$|module$|newtype$|qualified$|type$|where$)"
+
+## Various symbols
+color cyan "(\||@|!|:|_|~|=|\\|;|\(\)|,|\[|\]|\{|\})"
+
+## Operators
+color magenta "(==|/=|&&|\|\||<|>|<=|>=)"
+
+## Various symbols
+color cyan "(->|<-|=>)"
+color magenta "\.|\$"
+
+## Data constructors
+color magenta "(True|False|Nothing|Just|Left|Right|LT|EQ|GT)"
+
+## Data classes
+color magenta "[ ](Read|Show|Enum|Eq|Ord|Data|Bounded|Typeable|Num|Real|Fractional|Integral|RealFrac|Floating|RealFloat|Monad|MonadPlus|Functor)"
+
+## Strings
+color yellow ""[^\"]*""
+
+## Comments
+color green "--.*"
+color green start="\{-" end="-\}"
+
+color brightred "undefined"
+
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/hcl.nanorc b/.nano/syntax/hcl.nanorc
new file mode 100644
index 00000000..f02308ba
--- /dev/null
+++ b/.nano/syntax/hcl.nanorc
@@ -0,0 +1,36 @@
+## Syntax highlighting for Hashicorp Terraform / HCL files.
+
+# See:  https://github.com/hashicorp/hcl
+# Original author:  John Boero
+# License:  GPLv3 or newer
+
+syntax "hcl" "\.(tf|hcl)$"
+# No comments are permitted in JSON.
+comment ""
+
+# Numbers (used as value).
+color green ":[[:space:]]*\-?(0|[1-9][0-9]*)(\.[0-9]+)?([Ee]?[-+]?[0-9]+)?"
+# Values (well, any string).
+color brightmagenta "\".+\""
+# Hex numbers (used as value).
+color green ":[[:space:]]*\"#[0-9abcdefABCDEF]+\""
+# Escapes.
+color green "\\\\" "\\\"" "\\[bfnrt]" "\\u[0-9abcdefABCDEF]{4})"
+# Special words.
+color green "(true|false|null|output|path|vault|description|default|value)"
+
+color brightgreen "(variable|terraform|resource|provider|module)"
+
+# Names (very unlikely to contain a quote).
+color brightblue "\"[^"]+\"[[:space:]]*:"
+
+# Brackets, braces, and separators.
+color brightblue "\[" "\]"
+color brightred "\{" "\}"
+color brightred "," ":"
+
+# Comments.
+color cyan "(^|[[:space:]]+)(//|#).*$"
+
+# Trailing whitespace.
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/html.j2.nanorc b/.nano/syntax/html.j2.nanorc
new file mode 120000
index 00000000..c18f7cba
--- /dev/null
+++ b/.nano/syntax/html.j2.nanorc
@@ -0,0 +1 @@
+html.nanorc
\ No newline at end of file
diff --git a/.nano/syntax/html.nanorc b/.nano/syntax/html.nanorc
new file mode 100644
index 00000000..77a04dde
--- /dev/null
+++ b/.nano/syntax/html.nanorc
@@ -0,0 +1,41 @@
+## HTML syntax highlighting rules for Nano
+
+syntax "HTML" "\.html?(.j2)?(.twig)?$"
+magic "HTML document"
+comment "<!--|-->"
+
+## Emphasis tags
+color brightwhite start="<([biu]|em|strong)[^>]*>" end="</([biu]|em|strong)>"
+
+## Tags
+color cyan start="<" end=">"
+
+## Attributes
+color brightblue "[[:space:]](abbr|accept(-charset)?|accesskey|action|[av]?link|alt|archive|axis|background|(bg)?color|border)="
+color brightblue "[[:space:]](cell(padding|spacing)|char(off|set)?|checked|cite|class(id)?|compact|code(base|tag)?|cols(pan)?)="
+color brightblue "[[:space:]](content(editable)?|contextmenu|coords|data|datetime|declare|defer|dir|enctype)="
+color brightblue "[[:space:]](for|frame(border)?|headers|height|hidden|href(lang)?|hspace|http-equiv|id|ismap)="
+color brightblue "[[:space:]](label|lang|longdesc|margin(height|width)|maxlength|media|method|multiple)="
+color brightblue "[[:space:]](name|nohref|noresize|noshade|object|on(click|focus|load|mouseover|keypress)|profile|readonly|rel|rev)="
+color brightblue "[[:space:]](rows(pan)?|rules|scheme|scope|scrolling|shape|size|span|src|standby|start|style|summary|pattern)="
+color brightblue "[[:space:]](tabindex|target|text|title|type|usemap|v?align|value(type)?|vspace|width|xmlns|xml:space)="
+color brightblue "[[:space:]](required|disabled|selected)[[:space:]=>]"
+
+## Strings
+color yellow ""(\\.|[^"])*""
+
+## Named character references and entities
+color red "&#?[[:alnum:]]*;"
+
+## Template strings (not in the HTML spec, but very commonly used)
+color magenta "\{[^\}]*\}"
+color brightgreen "[[:space:]]((end)?if|(end)?for|in|not|(end)?block)[[:space:]]"
+
+## Comments
+color green start="<!--" end="-->"
+
+## Trailing spaces
+color ,green "[[:space:]]+$"
+
+## Reminders
+color brightwhite,yellow "(FIXME|TODO|XXX)"
diff --git a/.nano/syntax/i3.nanorc b/.nano/syntax/i3.nanorc
new file mode 100644
index 00000000..196836e2
--- /dev/null
+++ b/.nano/syntax/i3.nanorc
@@ -0,0 +1,15 @@
+## Here is an example for i3 Window Manager config
+##
+syntax "i3" "i3/config"
+header "^(.*)i3 config file"
+
+color green "\<(case|do|done|elif|else|esac|exit|fi|for|function|if|in|local|read|return|select|shift|then|time|until|while)\>"
+color green "(\{|\}|\(|\)|\;|\]|\[|`|\\|\$|<|>|!|=|&|\|)"
+color green "-[Ldefgruwx]\>"
+color green "-(eq|ne|gt|lt|ge|le|s|n|z)\>"
+color brightblue "\<(cat|cd|chmod|chown|cp|echo|env|export|grep|install|let|ln|make|mkdir|mv|rm|sed|set|tar|touch|umask|unset)\>"
+icolor brightgreen "^\s+[0-9A-Z_]+\s+\(\)"
+icolor brightred "\$\{?[0-9A-Z_!@#$*?-]+\}?"
+color brightyellow ""(\\.|[^"])*"" "'(\\.|[^'])*'"
+color cyan "(^|[[:space:]])#.*$"
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/ical.nanorc b/.nano/syntax/ical.nanorc
new file mode 100644
index 00000000..cd946e77
--- /dev/null
+++ b/.nano/syntax/ical.nanorc
@@ -0,0 +1,20 @@
+syntax "iCal" "\.ics$"
+
+color green start="^BEGIN:VCALENDAR$" end="^END:VCALENDAR$"
+color yellow start="^BEGIN:VCARD$" end="^END:VCARD$"
+color brightblue start="^BEGIN:VJOURNAL$" end="^END:VJOURNAL$"
+color magenta start="^BEGIN:VTIMEZONE$" end="^END:VTIMEZONE"
+color cyan start="^BEGIN:VEVENT$" end="^END:VEVENT$"
+color brightmagenta start="^BEGIN:VALARM$" end="^END:VALARM$"
+color brightcyan start="^BEGIN:VFREEBUSY$" end="^END:VFREEBUSY$"
+
+# URLs
+color blue start="(https?|ftp)://" end="^[^ ]"
+# email
+icolor blue "mailto:[^ ]+"
+icolor white "mailto:"
+# parameters
+color brightyellow start="^[-A-Z0-9]" end=":"
+color white "^[-A-Z0-9]+"
+# section markers
+color red "^(BEGIN|END):.*$"
diff --git a/.nano/syntax/ini.nanorc b/.nano/syntax/ini.nanorc
new file mode 100644
index 00000000..d9fcee75
--- /dev/null
+++ b/.nano/syntax/ini.nanorc
@@ -0,0 +1,11 @@
+syntax "INI" "\.(ini|desktop|lfl|override|cfg)$" "(mimeapps\.list|pinforc|setup\.cfg)$" "weechat/.+\.conf$"
+header "^\[[A-Za-z]+\]$"
+
+color brightcyan "\<(true|false)\>"
+color cyan "^[[:space:]]*[^=]*="
+color brightmagenta "^[[:space:]]*\[.*\]$"
+color red "[=;]"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color brightblack "(^|[[:space:]])(#([^{].*)?|;.*)$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/inputrc.nanorc b/.nano/syntax/inputrc.nanorc
new file mode 100644
index 00000000..c2f6005e
--- /dev/null
+++ b/.nano/syntax/inputrc.nanorc
@@ -0,0 +1,10 @@
+syntax "Inputrc" "inputrc$"
+
+color red   "\<(off|none)\>"
+color green "\<on\>"
+color brightblue   "\<set|\$include\>"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color magenta     "\\.?"
+color brightblack "(^|[[:space:]])#([^{].*)?$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/jade.nanorc b/.nano/syntax/jade.nanorc
new file mode 100644
index 00000000..54fddd1b
--- /dev/null
+++ b/.nano/syntax/jade.nanorc
@@ -0,0 +1,45 @@
+syntax "Jade" "\.jade$"
+# Elements
+color yellow "^\s*([a-z0-9]+)"
+# Main elements
+color red "^\s*(html|head|body)"
+# Includes
+icolor magenta "^\s*(include)"
+# Variables
+color brightblue "^\s*(\-)\s(var)\s([a-z0-9]+)"
+icolor magenta "^\s*-\s(var)$" "^\s*-\s(var)\s"
+# Cases
+color brightblue "^\s*(case)\s(.*)"
+color cyan "^\s*(when)\s(.*)"
+icolor magenta "^\s*(case|when|default)$" "^\s*(case|when|default)\s"
+color brightred "^\s*-\s(break)$" "^\s*-\s(break)\s"
+# Conditionals
+icolor magenta "^\s*(if|else|else if)$" "^\s*(if|else|else if)\s"
+# For loops
+icolor magenta "^\s*-\s(for)"
+# Each
+icolor magenta "^\s*(each)$" "^\s*(each)\s"
+# Parenthesis content
+color blue start="\(" end="\)"
+# Strings
+color cyan "('[^']*')|(\"[^\"]*\")"
+# Parenthesis, commas, equals
+icolor green "\(" "\)" "\," "\="
+# Comments, dashes and spaces
+color blue "\s+(//.*)"
+color blue start="/\*" end="\*/"
+color white "^\s*(\-)"
+color ,green "[[:space:]]+$"
+# Unbuffered comments
+color brightblue "\s+(//-.*)"
+# HTML-style conditional comments
+color brightmagenta start="<!" end="!>"
+color brightmagenta "<!\[endif\]-->"
+# HTML-style elements
+color yellow "<([^!].*)>"
+# Pipes
+color yellow,magenta "\|"
+# Doctype
+color brightblack "^\s*(doctype)(.*)"
+# Links
+icolor brightgreen "https?:\/\/(www\.)?[a-zA-Z0-9@%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)" "_blank"
diff --git a/.nano/syntax/java.nanorc b/.nano/syntax/java.nanorc
new file mode 100644
index 00000000..c22894a4
--- /dev/null
+++ b/.nano/syntax/java.nanorc
@@ -0,0 +1,22 @@
+## Here is an example for Java.
+##
+syntax "Java" "\.java$"
+magic "Java "
+comment "//"
+
+color green "\<(boolean|byte|char|double|float|int|long|new|short|this|transient|void)\>"
+color red "\<(break|case|catch|continue|default|do|else|finally|for|if|return|switch|throw|try|while)\>"
+color cyan "\<(abstract|class|extends|final|implements|import|instanceof|interface|native|package|private|protected|public|static|strictfp|super|synchronized|throws|volatile)\>"
+color red ""[^"]*""
+color yellow "\<(true|false|null)\>"
+icolor yellow "\b(([1-9][0-9]+)|0+)\.[0-9]+\b" "\b[1-9][0-9]*\b" "\b0[0-7]*\b" "\b0x[1-9a-f][0-9a-f]*\b"
+color blue "^\s*//.*"
+color blue start="^\s*/\*" end="\*/"
+color brightblue start="/\*\*" end="\*/"
+
+# Highlighting for javadoc stuff
+color magenta "@param [a-zA-Z_][a-z0-9A-Z_]+"
+color magenta "@return"
+color magenta "@author.*"
+
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/javascript.nanorc b/.nano/syntax/javascript.nanorc
new file mode 100644
index 00000000..0f5c236f
--- /dev/null
+++ b/.nano/syntax/javascript.nanorc
@@ -0,0 +1,25 @@
+syntax "JavaScript" "\.js$"
+comment "//"
+color blue   "\<[-+]?([1-9][0-9]*|0[0-7]*|0x[0-9a-fA-F]+)([uU][lL]?|[lL][uU]?)?\>"
+color blue   "\<[-+]?([0-9]+\.[0-9]*|[0-9]*\.[0-9]+)([EePp][+-]?[0-9]+)?[fFlL]?"
+color blue   "\<[-+]?([0-9]+[EePp][+-]?[0-9]+)[fFlL]?"
+color brightblue "[A-Za-z_][A-Za-z0-9_]*[[:space:]]*[(]|)"
+color cyan  "\<(break|case|catch|continue|default|delete|do|else|finally)\>"
+color cyan  "\<(for|function|get|if|in|instanceof|new|return|set|switch)\>"
+color cyan  "\<(switch|this|throw|try|typeof|var|void|while|with)\>"
+color cyan  "\<(null|undefined|NaN)\>"
+color cyan  "\<(import|as|from|export)\>"
+color cyan  "\<(const|let|class|extends|get|set|of|async|await|yield)\>"
+color brightcyan "\<(true|false)\>"
+color green     "\<(Array|Boolean|Date|Enumerator|Error|Function|Math)\>"
+color green     "\<(Map|WeakMap|Set|WeakSet|Promise|Symbol)\>"
+color green     "\<(Number|Object|RegExp|String)\>"
+color red "[-+/*=<>!~%?:&|]"
+color magenta   "/[^*]([^/]|(\\/))*[^\\]/[gim]*"
+color magenta   "\\[0-7][0-7]?[0-7]?|\\x[0-9a-fA-F]+|\\[bfnrt'"\?\\]"
+color brightblack "(^|[[:space:]])//.*"
+color brightblack "/\*.+\*/"
+color brightwhite,cyan "TODO:?"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'|(`|\})(\\.|[^`$]|$[^{])*(\$\{|`)"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/js.nanorc b/.nano/syntax/js.nanorc
new file mode 100644
index 00000000..a986743c
--- /dev/null
+++ b/.nano/syntax/js.nanorc
@@ -0,0 +1,54 @@
+### all *js files  ( e.g. Firefox user.js, prefs.js )
+
+## Old version
+
+#syntax "JavaScript" "(\.|/|)js$"
+#color green "//.*$" start="\/\*" end="\*\/"
+#color blue "'(\\.|[^'])*'"
+#color red ""(\\.|[^\"])*""
+#color brightgreen "\<(true)\>"
+#color brightred "\<(false)\>" "http\:\/\/.*$"
+#color brightmagenta "[0-9](\\.|[^\"])*)"
+
+## New updated taken from http://wiki.linuxhelp.net/index.php/Nano_Syntax_Highlighting
+
+syntax "JavaScript" "\.(js)$"
+header "^#!.*\/(env +)node"
+comment "//"
+
+## Default
+color white "^.+$"
+
+## Decimal, cotal and hexadecimal numbers
+color yellow "\<[-+]?([1-9][0-9]*|0[0-7]*|0x[0-9a-fA-F]+)([uU][lL]?|[lL][uU]?)?\>"
+
+## Floating point number with at least one digit before decimal point
+color yellow "\<[-+]?([0-9]+\.[0-9]*|[0-9]*\.[0-9]+)([EePp][+-]?[0-9]+)?[fFlL]?"
+color yellow "\<[-+]?([0-9]+[EePp][+-]?[0-9]+)[fFlL]?"
+
+## Keywords
+color green "\<(break|case|catch|continue|default|delete|do|else|finally)\>"
+color green "\<(for|function|if|in|instanceof|new|null|return|switch)\>"
+color green "\<(switch|this|throw|try|typeof|undefined|var|void|while|with)\>"
+color green "\<(import|as|from|export)\>"
+color green "\<(const|let|class|extends|of|get|set|await|async|yield)\>"
+
+## Type specifiers
+color red "\<(Array|Boolean|Date|Enumerator|Error|Function|Math)\>"
+color red "\<(WeakMap|Map|WeakSet|Set|Symbol|Promise)\>"
+color red "\<(Number|Object|RegExp|String)\>"
+color red "\<(true|false)\>"
+
+## String
+color brightyellow "L?\"(\\"|[^"])*\""
+color brightyellow "L?'(\'|[^'])*'"
+
+## Trailing spaces
+color ,green "[[:space:]]+$"
+
+## Escapes
+color red "\\[0-7][0-7]?[0-7]?|\\x[0-9a-fA-F]+|\\[bfnrt'"\?\\]"
+
+## Comments
+color brightblue start="^\s*/\*" end="\*/"
+color brightblue "^\s*//.*$"
diff --git a/.nano/syntax/json.nanorc b/.nano/syntax/json.nanorc
new file mode 100644
index 00000000..1f79c180
--- /dev/null
+++ b/.nano/syntax/json.nanorc
@@ -0,0 +1,13 @@
+syntax "JSON" "\.json$"
+header "^\{$"
+# You can't add a comment to JSON.
+comment ""
+
+color blue   "\<[-]?[1-9][0-9]*([Ee][+-]?[0-9]+)?\>"  "\<[-]?[0](\.[0-9]+)?\>"
+color cyan  "\<null\>"
+color brightcyan "\<(true|false)\>"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color brightyellow "\"(\\"|[^"])*\"[[:space:]]*:"  "'(\'|[^'])*'[[:space:]]*:"
+color magenta   "\\u[0-9a-fA-F]{4}|\\[bfnrt'"/\\]"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/keymap.nanorc b/.nano/syntax/keymap.nanorc
new file mode 100644
index 00000000..bd49759b
--- /dev/null
+++ b/.nano/syntax/keymap.nanorc
@@ -0,0 +1,10 @@
+syntax "Keymap" "\.(k|key)?map$|Xmodmap$"
+
+color cyan  "\<(add|clear|compose|keycode|keymaps|keysym|remove|string)\>"
+color cyan  "\<(control|alt|shift)\>"
+color blue   "\<[0-9]+\>"
+color red "="
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color brightblack  "^!.*$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/kickstart.nanorc b/.nano/syntax/kickstart.nanorc
new file mode 100644
index 00000000..255618fa
--- /dev/null
+++ b/.nano/syntax/kickstart.nanorc
@@ -0,0 +1,15 @@
+syntax "KickStart" "\.ks$" "\.kickstart$"
+
+color brightmagenta  "%[a-z]+"
+color cyan  "^[[:space:]]*(install|cdrom|text|graphical|volgroup|logvol|reboot|timezone|lang|keyboard|authconfig|firstboot|rootpw|user|firewall|selinux|repo|part|partition|clearpart|bootloader)"
+color cyan  "--(name|mirrorlist|baseurl|utc)(=|\>)"
+color brightyellow "\$(releasever|basearch)\>"
+
+# Packages and groups
+color brightblack "^@[A-Za-z][A-Za-z-]*"
+color brightred   "^-@[a-zA-Z0-9*-]+"
+color red         "^-[a-zA-Z0-9*-]+"
+
+color brightblack "(^|[[:space:]])#([^{].*)?$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/kotlin.nanorc b/.nano/syntax/kotlin.nanorc
new file mode 100644
index 00000000..d9f3ea1f
--- /dev/null
+++ b/.nano/syntax/kotlin.nanorc
@@ -0,0 +1,26 @@
+# Nano syntax file
+# Language:     Kotlin
+# Maintainer:   Bjarne Holen <bjarneholen@gmail.com>
+# Edited by:    Ritiek Malhotra <ritiekmalhotra123@gmail.com>
+# Last Change:  2017 May 24
+# Copyright (c) 2014, Bjarne Holen
+
+syntax "kotlin" "\.kt$" "\.kts$"
+color magenta "\b(([1-9][0-9]+)|0+)\.[0-9]+\b" "\b[1-9][0-9]*\b" "\b0[0-7]*\b" "\b0x[1-9a-f][0-9a-f]*\b"
+color yellow "[.:;,+*|=!\%@]" "<" ">" "/" "-" "&"
+color green "\<(namespace|as|type|class|this|super|val|var|fun|is|in|object|when|trait|import|where|by|get|set|abstract|enum|open|annotation|override|private|public|internal|protected|out|vararg|inline|final|package|lateinit|constructor|companion|const)\>"
+color yellow "\<(true|false|null)\>"
+color cyan "\<(break|catch|continue|do|else|finally|for|if|return|throw|try|while|repeat)\>"
+color brightred "\<(inner|outer)\>"
+##
+## String highlighting.  You will in general want your comments and
+## strings to come last, because syntax highlighting rules will be
+## applied in the order they are read in.
+color brightblue "<[^= 	]*>" ""(\\.|[^"])*""
+
+## Comment highlighting
+color red "^\s*//.*"
+color red start="^\s*/\*" end="\*/"
+
+## Trailing whitespace
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/ledger.nanorc b/.nano/syntax/ledger.nanorc
new file mode 100644
index 00000000..8d07329d
--- /dev/null
+++ b/.nano/syntax/ledger.nanorc
@@ -0,0 +1,10 @@
+syntax "Ledger" "(^|\.|/)ledger|ldgr|beancount|bnct$"
+
+color brightmagenta  "^([0-9]{4}(/|-)[0-9]{2}(/|-)[0-9]{2}|[=~]) .*"
+color blue   "^[0-9]{4}(/|-)[0-9]{2}(/|-)[0-9]{2}"
+color brightyellow "^~ .*"
+color brightblue "^= .*"
+color cyan  "^[[:space:]]+(![[:space:]]+)?\(?[A-Za-z ]+(:[A-Za-z ]+)*\)?"
+color cyan  "^[[:space:]]+(![[:space:]]+)?\(?[A-Za-z_-]+(:[A-Za-z_-]+)*\)?"
+color red "[*!]"
+color brightblack  "^[[:space:]]*;.*"
diff --git a/.nano/syntax/lisp.nanorc b/.nano/syntax/lisp.nanorc
new file mode 100644
index 00000000..50392550
--- /dev/null
+++ b/.nano/syntax/lisp.nanorc
@@ -0,0 +1,13 @@
+syntax "Lisp" "(emacs|zile)$" "\.(el|li?sp|scm|ss)$"
+
+color brightblue "\([a-z-]+"
+color red "\(([-+*/<>]|<=|>=)|'"
+color blue   "\<[0-9]+\>"
+icolor cyan "\<nil\>"
+color brightcyan  "\<[tT]\>"
+color yellow   "\"(\\.|[^"])*\""
+color magenta   "'[A-Za-z][A-Za-z0-9_-]+"
+color magenta   "\\.?"
+color brightblack  "(^|[[:space:]]);.*"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/lua.nanorc b/.nano/syntax/lua.nanorc
new file mode 100644
index 00000000..bec44adc
--- /dev/null
+++ b/.nano/syntax/lua.nanorc
@@ -0,0 +1,80 @@
+##############################################################################
+#
+# Lua syntax highlighting for Nano.
+#
+# Author:  Matthew Wild <mwild1 (at) gmail.com>
+# License: GPL 2  or later
+#
+# Version: 2007-06-06
+#
+# Notes: Originally based on Ruby syntax rc by Josef 'Jupp' Schugt
+##############################################################################
+
+
+# Automatically use for '.lua' files
+syntax "Lua" ".*\.lua$"
+magic "Lua script"
+comment "--"
+
+linter luacheck --no-color
+
+# General
+color brightwhite ".+"
+
+# Operators
+color brightyellow ":|\*\*|\*|/|%|\+|-|\^|>|>=|<|<=|~=|=|\.\.|\<(not|and|or)\>"
+
+# Statements
+color brightblue "\<(do|end|while|repeat|until|if|elseif|then|else|for|in|function|local|return)\>"
+
+# Keywords
+color brightyellow "\<(debug|string|math|table|io|coroutine|os|utf8|bit32)\>\."
+color brightyellow "\<(_ENV|_G|_VERSION|assert|collectgarbage|dofile|error|getfenv|getmetatable|ipairs|load|loadfile|module|next|pairs|pcall|print|rawequal|rawget|rawlen|rawset|require|select|setfenv|setmetatable|tonumber|tostring|type|unpack|xpcall)\s*\("
+
+# Standard library
+color brightyellow "io\.\<(close|flush|input|lines|open|output|popen|read|tmpfile|type|write)\>"
+color brightyellow "math\.\<(abs|acos|asin|atan2|atan|ceil|cosh|cos|deg|exp|floor|fmod|frexp|huge|ldexp|log10|log|max|maxinteger|min|mininteger|modf|pi|pow|rad|random|randomseed|sinh|sqrt|tan|tointeger|type|ult)\>"
+color brightyellow "os\.\<(clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)\>"
+color brightyellow "package\.\<(config|cpath|loaded|loadlib|path|preload|seeall|searchers|searchpath)\>"
+color brightyellow "string\.\<(byte|char|dump|find|format|gmatch|gsub|len|lower|match|pack|packsize|rep|reverse|sub|unpack|upper)\>"
+color brightyellow "table\.\<(concat|insert|maxn|move|pack|remove|sort|unpack)\>"
+color brightyellow "utf8\.\<(char|charpattern|codes|codepoint|len|offset)\>"
+color brightyellow "coroutine\.\<(create|isyieldable|resume|running|status|wrap|yield)\>"
+color brightyellow "debug\.\<(debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|getuservalue|setfenv|sethook|setlocal|setmetatable|setupvalue|setuservalue|traceback|upvalueid|upvaluejoin)\>"
+color brightyellow "bit32\.\<(arshift|band|bnot|bor|btest|bxor|extract|replace|lrotate|lshift|rrotate|rshift)\>"
+
+# File handle methods
+color brightyellow "\:\<(close|flush|lines|read|seek|setvbuf|write)\>"
+
+# false, nil, true
+color brightmagenta "\<(false|nil|true)\>"
+
+# External files
+color brightgreen "(\<(dofile|require|include)|%q|%!|%Q|%r|%x)\>"
+
+# Numbers
+color red "\<([0-9]+)\>"
+
+# Symbols
+color brightmagenta "(\(|\)|\[|\]|\{|\})"
+
+# Strings
+color red "\"(\\.|[^\\\"])*\"|'(\\.|[^\\'])*'"
+
+# Multiline strings
+color red start="\s*\[\[" end="\]\]"
+
+# Escapes
+color red "\\[0-7][0-7][0-7]|\\x[0-9a-fA-F][0-9a-fA-F]|\\[abefnrs]|(\\c|\\C-|\\M-|\\M-\\C-)."
+
+# Shebang
+color brightcyan "^#!.*"
+
+# Simple comments
+color green "\-\-.*$"
+
+# Multiline comments
+color green start="\s*\-\-\s*\[\[" end="\]\]"
+
+# Trailing whitespaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/m3u.nanorc b/.nano/syntax/m3u.nanorc
new file mode 100644
index 00000000..3e237e39
--- /dev/null
+++ b/.nano/syntax/m3u.nanorc
@@ -0,0 +1,22 @@
+syntax "m3u" "\.(m3u|m3u8)$"
+
+# Header text
+color brightcyan "^#EXTINF.*,[^,]*$"
+
+# Header property values
+color brightyellow "^#[^:]*:[^ ,]*"
+color brightyellow "=[^ ,]*"
+color brightyellow "=[\"][^\"]*[\"]"
+
+# Header property keys
+color brightgreen "[a-zA-Z-]*="
+
+# Headers
+color brightred "^#EXT[-A-Z]*:"
+color brightmagenta "^#EXTM3U"
+
+# Separators
+color normal "[,=]"
+
+# URLs
+color normal "^[^#].*"
diff --git a/.nano/syntax/makefile.nanorc b/.nano/syntax/makefile.nanorc
new file mode 100644
index 00000000..5bda4347
--- /dev/null
+++ b/.nano/syntax/makefile.nanorc
@@ -0,0 +1,25 @@
+syntax "Makefile" "([Mm]akefile|\.ma?k)$"
+header "^#!.*/(env +)?[bg]?make( |$)"
+magic "makefile script"
+comment "#"
+
+color cyan  "\<(ifeq|ifdef|ifneq|ifndef|else|endif)\>"
+color cyan  "^(export|include|override)\>"
+color brightmagenta  "^[^:=	]+:"
+color brightmagenta  "^[^:+	]+\+"
+color red "[=,%]" "\+=|\?=|:=|&&|\|\|"
+color brightblue "\$\((abspath|addprefix|addsuffix|and|basename|call|dir)[[:space:]]"
+color brightblue "\$\((error|eval|filter|filter-out|findstring|firstword)[[:space:]]"
+color brightblue "\$\((flavor|foreach|if|info|join|lastword|notdir|or)[[:space:]]"
+color brightblue "\$\((origin|patsubst|realpath|shell|sort|strip|suffix)[[:space:]]"
+color brightblue "\$\((value|warning|wildcard|word|wordlist|words)[[:space:]]"
+color black    "[()$]"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color brightyellow "\$+(\{[^} ]+\}|\([^) ]+\))"
+color brightyellow "\$[@^<*?%|+]|\$\([@^<*?%+-][DF]\)"
+color magenta   "\$\$|\\.?"
+color brightblack "(^|[[:space:]])#([^{].*)?$"
+color brightblack  "^	@#.*"
+
+# Show trailing whitespace
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/man.nanorc b/.nano/syntax/man.nanorc
new file mode 100644
index 00000000..5239beaa
--- /dev/null
+++ b/.nano/syntax/man.nanorc
@@ -0,0 +1,12 @@
+## Here is an example for manpages.
+##
+syntax "Man" "\.[1-9]x?$"
+magic "troff or preprocessor input"
+comment ".\""
+
+color green "\.(S|T)H.*$"
+color brightgreen "\.(S|T)H" "\.TP"
+color brightred "\.(BR?|I[PR]?).*$"
+color brightblue "\.(BR?|I[PR]?|PP)"
+color brightwhite "\\f[BIPR]"
+color yellow "\.(br|DS|RS|RE|PD)"
diff --git a/.nano/syntax/markdown.nanorc b/.nano/syntax/markdown.nanorc
new file mode 100644
index 00000000..448a3961
--- /dev/null
+++ b/.nano/syntax/markdown.nanorc
@@ -0,0 +1,51 @@
+syntax "Markdown" "\.(md|mkd|mkdn|markdown)$"
+
+# Tables (Github extension)
+color cyan ".*[ :]\|[ :].*"
+
+# quotes
+color brightblack  start="^>" end="^$"
+color brightblack  "^>.*"
+
+# Emphasis
+color green "(^|[[:space:]])(_[^ ][^_]*_|\*[^ ][^*]*\*)"
+
+# Strong emphasis
+color brightgreen "(^|[[:space:]])(__[^ ][^_]*__|\*\*[^ ][^*]*\*\*)"
+
+# strike-through
+color red "(^|[[:space:]])~~[^ ][^~]*~~"
+
+# horizontal rules
+color brightmagenta "^(---+|===+|___+|\*\*\*+)\s*$"
+
+# headlines
+color brightmagenta  "^#{1,6}.*"
+
+# lists
+color blue   "^[[:space:]]*[\*+-] |^[[:space:]]*[0-9]+\. "
+
+# leading whitespace
+color black    "^[[:space:]]+"
+
+# misc
+color magenta   "\(([CcRr]|[Tt][Mm])\)" "\.{3}" "(^|[[:space:]])\-\-($|[[:space:]])"
+
+# links
+color brightblue "\[[^]]+\]"
+color brightblue "\[([^][]|\[[^]]*\])*\]\([^)]+\)"
+
+# images
+color magenta "!\[[^][]*\](\([^)]+\)|\[[^]]+\])"
+
+# urls
+color brightyellow "https?://[^ )>]+"
+
+# code
+color yellow   "`[^`]*`|^ {4}[^-+*].*"
+# code blocks
+color yellow start="^```[^$]" end="^```$"
+color yellow "^```$"
+
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/mpdconf.nanorc b/.nano/syntax/mpdconf.nanorc
new file mode 100644
index 00000000..3b4220be
--- /dev/null
+++ b/.nano/syntax/mpdconf.nanorc
@@ -0,0 +1,9 @@
+syntax "MPD" "mpd\.conf$"
+
+color cyan "\<(user|group|bind_to_address|host|port|plugin|name|type)\>"
+color cyan "\<((music|playlist)_directory|(db|log|state|pid|sticker)_file)\>"
+color brightmagenta "^(input|audio_output|decoder)[[:space:]]*\{|\}"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color brightblack "(^|[[:space:]])#([^{].*)?$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/mutt.nanorc b/.nano/syntax/mutt.nanorc
new file mode 100644
index 00000000..5f90a5b0
--- /dev/null
+++ b/.nano/syntax/mutt.nanorc
@@ -0,0 +1,4 @@
+## Here is an example for quoted emails (under e.g. mutt).
+##
+syntax "Mutt"
+color green "^>.*"
diff --git a/.nano/syntax/nanorc.nanorc b/.nano/syntax/nanorc.nanorc
new file mode 100644
index 00000000..dd889fd9
--- /dev/null
+++ b/.nano/syntax/nanorc.nanorc
@@ -0,0 +1,49 @@
+## Here is an example for nanorc files.
+##
+syntax "Nanorc" "\.?nanorc$"
+comment "#"
+
+## Possible errors and parameters
+icolor brightred "^[[:space:]]*((un)?set|include|syntax|i?color).*$"
+## Colors
+icolor black " black"
+icolor red " red"
+icolor green " green"
+icolor yellow " yellow"
+icolor blue " blue"
+icolor magenta " magenta"
+icolor cyan " cyan"
+icolor white " white"
+icolor normal " normal"
+icolor brightblack " brightblack"
+icolor brightred " brightred"
+icolor brightgreen " brightgreen"
+icolor brightyellow " brightyellow"
+icolor brightblue " brightblue"
+icolor brightmagenta " brightmagenta"
+icolor brightcyan " brightcyan"
+icolor brightwhite " brightwhite"
+icolor brightnormal " brightnormal"
+icolor ,black ",black "
+icolor ,red ",red "
+icolor ,green ",green "
+icolor ,yellow ",yellow "
+icolor ,blue ",blue "
+icolor ,magenta ",magenta "
+icolor ,cyan ",cyan "
+icolor ,white ",white "
+icolor ,normal ",normal"
+icolor magenta "^[[:space:]]*i?color\>" "\<(start|end)="
+icolor yellow "^[[:space:]]*(set|unset)[[:space:]]+(errorcolor|functioncolor|keycolor|numbercolor|selectedcolor|statuscolor|stripecolor|titlecolor)[[:space:]]+(bright)?(white|black|red|blue|green|yellow|magenta|cyan|normal)?(,(white|black|red|blue|green|yellow|magenta|cyan|normal))?\>"
+
+## Keywords
+icolor brightgreen "^[[:space:]]*(set|unset)[[:space:]]+(afterends|allow_insecure_backup|atblanks|autoindent|backup|backupdir|boldtext|brackets|breaklonglines|casesensitive|constantshow|cutfromcursor|emptyline|errorcolor|fill|functioncolor|guidestripe|historylog|jumpyscrolling|keycolor|linenumbers|locking|matchbrackets|morespace|mouse|multibuffer|noconvert|nohelp|nonewlines|nopauses|nowrap|numbercolor|operatingdir|positionlog|preserve|punct|quickblank|quotestr|rawsequences|rebinddelete|regexp|selectedcolor|showcursor|smarthome|smooth|softwrap|speller|statuscolor|stripecolor|suspend|tabsize|tabstospaces|tempfile|titlecolor|trimblanks|unix|view|whitespace|wordbounds|wordchars|zap)\>"
+icolor green "^[[:space:]]*(bind|set|unset|syntax|header|include|magic)\>"
+## Strings
+icolor white ""(\\.|[^"])*""
+## Comments
+icolor brightblue "^[[:space:]]*#.*$"
+icolor cyan "^[[:space:]]*##.*$"
+
+## Trailing whitespace
+icolor ,green "[[:space:]]+$"
diff --git a/.nano/syntax/nginx.nanorc b/.nano/syntax/nginx.nanorc
new file mode 100644
index 00000000..0efc2390
--- /dev/null
+++ b/.nano/syntax/nginx.nanorc
@@ -0,0 +1,13 @@
+syntax "Nginx" "nginx.*\.conf$" "\.nginx$" ".*\/sites\-available\/.*$" ".*\/sites\-enabled\/.*$"
+header "^(server|upstream)[^{]*\{$"
+
+color brightmagenta  "\<(events|server|http|location|upstream)[[:space:]]*\{"
+color cyan "(^|[[:space:]{;])(access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth_basic|auth_basic_user_file|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|default_type|deny|directio|directio_alignment|disable_symlinks|empty_gif|env|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|log_format|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|port_in_redirect|postpone_output|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_header|proxy_read_timeout|proxy_redirect|proxy_send_timeout|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_cache_methods|proxy_pass_request_body|proxy_pass_request_headers|proxy_cache_convert_head|proxy_cache_lock_age|proxy_cache_max_range_offset|proxy_send_lowat|proxy_set_body|proxy_socket_keepalive|proxy_ssl_trusted_certificate|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|ssl_ecdh_curve|ssl_session_tickets|ssl_stapling|ssl_stapling_verify|ssl_stapling_file|ssl_stapling_responder|ssl_buffer_size|ssl_early_data|ssl_password_file|ssl_session_ticket_key|ssl_trusted_certificate|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|working_directory|xml_entities|xslt_stylesheet|xslt_types)([[:space:]]|$)"
+color brightcyan  "\<(on|off)\>"
+color brightyellow "\$[A-Za-z][A-Za-z0-9_]*"
+color red "[*]"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color yellow   start="'$" end="';$"
+color brightblack "(^|[[:space:]])#([^{].*)?$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/nmap.nanorc b/.nano/syntax/nmap.nanorc
new file mode 100644
index 00000000..c573f424
--- /dev/null
+++ b/.nano/syntax/nmap.nanorc
@@ -0,0 +1,18 @@
+syntax "NMAP" "\.nmap$"
+
+color yellow "^Nmap scan report for.*"
+color brightwhite "^Not shown.*"
+color brightwhite "^Host is up.*"
+color brightwhite "^All.*"
+
+color yellow "^[0-9]+/(tcp|udp).*$"
+color cyan "^[0-9]+/(tcp|udp)"
+
+color brightgreen "(Host is )?(open|up)"
+color white "\(([0-9]+\.[0-9]+s latency)\)\."
+color brightyellow "filtered"
+color brightred "(Host is )?(All .* scanned ports on .*)?(^Not shown: [0-9]+ )?(closed|down)( ports)?"
+
+color magenta "^PORT *STATE *SERVICE"
+
+color brightblue "^#.*"
\ No newline at end of file
diff --git a/.nano/syntax/ocaml.nanorc b/.nano/syntax/ocaml.nanorc
new file mode 100644
index 00000000..d1bba126
--- /dev/null
+++ b/.nano/syntax/ocaml.nanorc
@@ -0,0 +1,32 @@
+## Syntax highlighting for OCaml.
+
+syntax "OCaml" "\.mli?$"
+magic "OCaml"
+comment "(*|*)"
+
+#uid
+color red "\<[A-Z][0-9a-z_]{2,}\>"
+#declarations
+color green "\<(let|val|method|in|and|rec|private|virtual|constraint)\>"
+#structure items
+color red "\<(type|open|class|module|exception|external)\>"
+#patterns
+color blue "\<(fun|function|functor|match|try|with)\>"
+#patterns-modifiers
+color yellow "\<(as|when|of)\>" 
+#conditions
+color cyan "\<(if|then|else)\>"
+#blocs
+color magenta "\<(begin|end|object|struct|sig|for|while|do|done|to|downto)\>"
+#constantes
+color green "\<(true|false)\>"
+#modules/classes
+color green "\<(include|inherit|initializer)\>"
+#expr modifiers
+color yellow "\<(new|ref|mutable|lazy|assert|raise)\>"
+#comments
+color white start="\(\*" end="\*\)"
+#strings (no multiline handling yet)
+color brightblack ""[^\"]*""
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/octave.nanorc b/.nano/syntax/octave.nanorc
new file mode 100644
index 00000000..0b188b9d
--- /dev/null
+++ b/.nano/syntax/octave.nanorc
@@ -0,0 +1,24 @@
+# Source: https://wiki.octave.org/Nano
+# Octave syntax colors
+syntax "octave" "\.m$" "\.octaverc$"
+
+# keywords
+color brightyellow "(case|catch|do|else(if)?|for|function|if|otherwise|switch|try|until|unwind_protect(_cleanup)?|vararg(in|out)|while)"
+color brightyellow "end(_try_catch|_unwind_protect|for|function|if|switch|while)?"
+color magenta "(break|continue|return)"
+
+# storage-type
+color green "(global|persistent|static)"
+# data-type
+color green "(cell(str)?|char|double|(u)?int(8|16|32|64)|logical|single|struct)"
+
+# embraced
+# TODO: the next line needs to be fixed to work properly in all cases
+color brightred start="\(" end="\)"
+color blue start="\[|\{" end="\]|\}"
+
+# strings
+color yellow ""(\\.|[^\"])*"|'(\\.|[^\"])*'"
+
+# comments
+color brightblue "#.*|%.*"
diff --git a/.nano/syntax/patch.nanorc b/.nano/syntax/patch.nanorc
new file mode 100644
index 00000000..bd282b7c
--- /dev/null
+++ b/.nano/syntax/patch.nanorc
@@ -0,0 +1,14 @@
+## Here is an example for patch files.
+##
+syntax "Patch" "\.(patch|diff)$"
+magic "diff output"
+# You can't add comments in patch files.
+comment ""
+
+color brightgreen "^\+.*"
+color green "^\+\+\+.*"
+color brightblue "^ .*"
+color brightred "^-.*"
+color red "^---.*"
+color brightyellow "^@@.*"
+color magenta "^diff.*"
diff --git a/.nano/syntax/peg.nanorc b/.nano/syntax/peg.nanorc
new file mode 100644
index 00000000..32297523
--- /dev/null
+++ b/.nano/syntax/peg.nanorc
@@ -0,0 +1,12 @@
+syntax "PEG" "\.l?peg$"
+
+color cyan  "^[[:space:]]*[A-Za-z][A-Za-z0-9_]*[[:space:]]*<-"
+color blue   "\^[+-]?[0-9]+"
+color red "[-+*?^/!&]|->|<-|=>"
+color brightyellow    "%[A-Za-z][A-Za-z0-9_]*"
+color magenta   "\[[^]]*\]"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color brightblack  "(^|[[:space:]])\-\-.*$"
+color brightwhite,cyan "TODO:?"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/perl.nanorc b/.nano/syntax/perl.nanorc
new file mode 100644
index 00000000..117a95c4
--- /dev/null
+++ b/.nano/syntax/perl.nanorc
@@ -0,0 +1,18 @@
+## Here is an example for Perl.
+##
+syntax "Perl" "\.p[lm]$"
+header "^#!.*/(env +)?perl( |$)"
+magic "Perl script"
+comment "#"
+
+color red "\<(accept|alarm|atan2|bin(d|mode)|c(aller|h(dir|mod|op|own|root)|lose(dir)?|onnect|os|rypt)|d(bm(close|open)|efined|elete|ie|o|ump)|e(ach|of|val|x(ec|ists|it|p))|f(cntl|ileno|lock|ork))\>" "\<(get(c|login|peername|pgrp|ppid|priority|pwnam|(host|net|proto|serv)byname|pwuid|grgid|(host|net)byaddr|protobynumber|servbyport)|([gs]et|end)(pw|gr|host|net|proto|serv)ent|getsock(name|opt)|gmtime|goto|grep|hex|index|int|ioctl|join)\>" "\<(keys|kill|last|length|link|listen|local(time)?|log|lstat|m|mkdir|msg(ctl|get|snd|rcv)|next|oct|open(dir)?|ord|pack|pipe|pop|printf?|push|q|qq|qx|rand|re(ad(dir|link)?|cv|do|name|quire|set|turn|verse|winddir)|rindex|rmdir|s|scalar|seek(dir)?)\>" "\<(se(lect|mctl|mget|mop|nd|tpgrp|tpriority|tsockopt)|shift|shm(ctl|get|read|write)|shutdown|sin|sleep|socket(pair)?|sort|spli(ce|t)|sprintf|sqrt|srand|stat|study|substr|symlink|sys(call|read|tem|write)|tell(dir)?|time|tr(y)?|truncate|umask)\>" "\<(un(def|link|pack|shift)|utime|values|vec|wait(pid)?|wantarray|warn|write)\>"
+color magenta "\<(continue|else|elsif|do|for|foreach|if|unless|until|while|eq|ne|lt|gt|le|ge|cmp|x|my|sub|use|package|can|isa)\>"
+icolor cyan start="[$@%]" end="( |[^0-9A-Z_]|-)"
+color yellow ""[^"]*"|'[^']*'|qq\|.*\|"
+color white "[sm]/.*/"
+color white start="(^use| = new)" end=";"
+color green "#.*"
+color yellow start="<< 'STOP'" end="STOP"
+
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/perl6.nanorc b/.nano/syntax/perl6.nanorc
new file mode 100644
index 00000000..0660c569
--- /dev/null
+++ b/.nano/syntax/perl6.nanorc
@@ -0,0 +1,19 @@
+## Here is an example for perl
+## Hybrid perl5 / perl6 syntax highlighting
+### Found in CPAN - http://cpansearch.perl.org/src/NIGE/Goo-0.09/lib/.gooskel/nanorc
+
+syntax "Perl6" "\.p6$" "\.pl6$" "\.pm6"
+color brightblue "\<(accept|alarm|atan2|bin(d|mode)|c(aller|h(dir|mod|op|own|root)|lose(dir)?|onnect|os|rypt)|d(bm(close|open)|efined|elete|ie|o|ump)|e(ach|of|val|x(ec|ists|it|p))|f(cntl|ileno|lock|ork)|get(c|login|peername|pgrp|ppid|priority|pwnam|(host|net|proto|serv)byname|pwuid|grgid|(host|net)byaddr|protobynumber|servbyport)|([gs]et|end)(pw|gr|host|net|proto|serv)ent|getsock(name|opt)|gmtime|goto|grep|hex|index|int|ioctl|join|keys|kill|last|length|link|listen|local(time)?|log|lstat|m|mkdir|msg(ctl|get|snd|rcv)|next|oct|open(dir)?|ord|pack|pipe|pop|printf?|push|q|qq|qx|rand|re(ad(dir|link)?|cv|do|name|quire|set|turn|verse|winddir)|rindex|rmdir|s|scalar|seek|seekdir|se(lect|mctl|mget|mop|nd|tpgrp|tpriority|tsockopt)|shift|shm(ctl|get|read|write)|shutdown|sin|sleep|socket(pair)?|sort|spli(ce|t)|sprintf|sqrt|srand|stat|study|substr|symlink|sys(call|read|tem|write)|tell(dir)?|time|tr|y|truncate|umask|un(def|link|pack|shift)|utime|values|vec|wait(pid)?|wantarray|warn|write)\>"
+color brightblue "\<(continue|else|elsif|do|for|foreach|if|unless|until|while|eq|ne|lt|gt|le|ge|cmp|x|my|sub|use|package|can|isa)\>"
+
+# Perl 6 words
+color brightcyan "\<(has|is|class|role|given|when|BUILD|multi|returns|method|submethod|slurp|say|sub)\>"
+color brightmagenta start="[$@%]" end="( |\\W|-)"
+color brightred "".*"|qq\|.*\|"
+color white "[sm]/.*/"
+color brightblue start="(^use| = new)" end=";"
+color brightgreen "#.*"
+color brightred start="<<EOSQL" end="EOSQL"
+
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/php.nanorc b/.nano/syntax/php.nanorc
new file mode 100644
index 00000000..33f6f9ac
--- /dev/null
+++ b/.nano/syntax/php.nanorc
@@ -0,0 +1,42 @@
+## PHP Syntax Highlighting
+syntax "PHP" "\.php[2345s~]?$|\.module$"
+magic "PHP script"
+comment "//"
+color white start="<\?(php|=)?" end="\?>"
+# Functions
+color brightblue "([a-zA-Z0-9_-]*)\("
+# Constructs
+color brightblue "(class|extends|goto) ([a-zA-Z0-9_]*)"
+color green "[^a-z0-9_-]{1}(var|class|function|echo|case|break|default|exit|switch|if|else|elseif|endif|foreach|endforeach|@|while|public|private|protected|return|true|false|null|TRUE|FALSE|NULL|const|static|extends|as|array|require|include|require_once|include_once|define|do|continue|declare|goto|print|in|namespace|use)[^a-z0-9_-]{1}"
+color brightblue "[a-zA-Z0-9_]+:"
+# Variables
+color white "\$[a-zA-Z_0-9$]*|[=!<>]"
+color white "\->[a-zA-Z_0-9$]*|[=!<>]"
+# Special Characters
+color yellow "[.,{}();]"
+color yellow "\["
+color yellow "\]"
+color yellow "[=][^>]"
+# Numbers
+color magenta "[+-]*([0-9]\.)*[0-9]+([eE][+-]?([0-9]\.)*[0-9])*"
+color magenta "0x[0-9a-zA-Z]*"
+# Special Variables
+color brightblue "(\$this|parent::|self::|\$this->)"
+# Bitwise Operations
+color magenta "(\;|\||\^){1}"
+# And/Or/SRO/etc
+color green "(\;\;|\|\||::|=>|->)"
+# Online Comments
+color brightyellow "(#.*|//.*)$"
+# STRINGS!
+color red "('[^']*')|(\"[^\"]*\")"
+# Inline Variables
+color white "\{\$[^}]*\}"
+# PHP Tags
+color red "(<\?(php)?|\?>)"
+# General HTML
+color red start="\?>" end="<\?(php|=)?"
+# trailing whitespace
+color ,green "[^[:space:]]{1}[[:space:]]+$"
+# multi-line comments
+color brightyellow start="/\*" end="\*/"
diff --git a/.nano/syntax/pkg-config.nanorc b/.nano/syntax/pkg-config.nanorc
new file mode 100644
index 00000000..4c83ce89
--- /dev/null
+++ b/.nano/syntax/pkg-config.nanorc
@@ -0,0 +1,8 @@
+syntax "PC" "\.pc$"
+
+color cyan  "^(Name|Description|URL|Version|Conflicts|Cflags):"
+color cyan  "^(Requires|Libs)(\.private)?:"
+color red "="
+color brightyellow "\$\{[A-Za-z_][A-Za-z0-9_]*\}"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/pkgbuild.nanorc b/.nano/syntax/pkgbuild.nanorc
new file mode 100644
index 00000000..85d359cd
--- /dev/null
+++ b/.nano/syntax/pkgbuild.nanorc
@@ -0,0 +1,26 @@
+## Arch PKGBUILD files
+##
+syntax "PKGBUILD" "^.*PKGBUILD$"
+color green start="^." end="$"
+color cyan "^.*(pkgbase|pkgname|epoch|pkgver|pkgrel|pkgdesc|arch|url|license).*=.*$"
+color brightcyan "\<(pkgbase|pkgname|epoch|pkgver|pkgrel|pkgdesc|arch|url|license)\>"
+color brightcyan "(\$|\$\{|\$\()(pkgbase|epoch|pkgname|pkgver|pkgrel|pkgdesc|arch|url|license)(\}|\))"
+color cyan "^.*(depends|makedepends|checkdepends|optdepends|conflicts|provides|replaces).*=.*$"
+color brightcyan "\<(depends|makedepends|checkdepends|optdepends|conflicts|provides|replaces)\>"
+color brightcyan "(\$|\$\{|\$\()(depends|makedepends|checkdepends|optdepends|conflicts|provides|replaces)(\}|\))"
+color cyan "^.*(groups|backup|noextract|options|validpgpkeys|changelog).*=.*$"
+color brightcyan "\<(groups|backup|noextract|options|validpgpkeys|changelog)\>"
+color brightcyan "(\$|\$\{|\$\()(groups|backup|noextract|options|validpgpkeys|changelog)(\}|\))"
+color cyan "^.*(install|source|md5sums|sha1sums|sha224sums|sha256sums|sha384sums|sha512sums).*=.*$"
+color brightcyan "\<(install|source|md5sums|sha1sums|sha224sums|sha256sums|sha384sums|sha512sums)\>"
+color brightcyan "(\$|\$\{|\$\()(install|source|md5sums|sha1sums|sha224sums|sha256sums|sha384sums|sha512sums)(\}|\))"
+color brightcyan "\<(startdir|srcdir|pkgdir)\>"
+color cyan "\.install"
+color brightwhite "=" "'" "\(" "\)" "\"" "#.*$" "\," "\{" "\}"
+color brightred "build\(\)"
+color brightred "package_.*.*$"
+color brightred "\<(configure|make|cmake|scons)\>"
+color red "\<(DESTDIR|PREFIX|prefix|sysconfdir|datadir|libdir|includedir|mandir|infodir)\>"
+
+## Trailing whitespace
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/po.nanorc b/.nano/syntax/po.nanorc
new file mode 100644
index 00000000..24bc6a63
--- /dev/null
+++ b/.nano/syntax/po.nanorc
@@ -0,0 +1,9 @@
+syntax "PO" "\.pot?$"
+comment "#"
+
+color cyan  "\<(msgid|msgstr)\>"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color magenta   "\\.?"
+color brightblack "(^|[[:space:]])#([^{].*)?$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/pov.nanorc b/.nano/syntax/pov.nanorc
new file mode 100644
index 00000000..91517928
--- /dev/null
+++ b/.nano/syntax/pov.nanorc
@@ -0,0 +1,17 @@
+## Here is an example for POV-Ray.
+##
+syntax "POV" "\.(pov|POV|povray|POVRAY)$"
+comment "//"
+
+color brightcyan "^[[:space:]]*#[[:space:]]*(declare)"
+color brightyellow "\<(sphere|cylinder|translate|matrix|rotate|scale)\>"
+color brightyellow "\<(orthographic|location|up|right|direction|clipped_by)\>"
+color brightyellow "\<(fog_type|fog_offset|fog_alt|rgb|distance|transform)\>"
+color brightred "^\<(texture)\>"
+color brightred "\<(light_source|background)\>"
+color brightred "\<(fog|object|camera)\>"
+color green "(\{|\}|\(|\)|\;|\]|\[|`|\\|\$|<|>|!|=|&|\|)"
+color brightmagenta "\<(union|group|subgroup)\>"
+## Comment highlighting
+color brightblue "^\s*//.*"
+color brightblue start="^\s*/\*" end="\*/"
diff --git a/.nano/syntax/privoxy.nanorc b/.nano/syntax/privoxy.nanorc
new file mode 100644
index 00000000..6f1f609c
--- /dev/null
+++ b/.nano/syntax/privoxy.nanorc
@@ -0,0 +1,27 @@
+syntax "Privoxy-config" "privoxy/config$"
+
+color cyan "(accept-intercepted-requests|actionsfile|admin-address|allow-cgi-request-crunching|buffer-limit|compression-level|confdir|connection-sharing|debug|default-server-timeout|deny-access|enable-compression|enable-edit-actions|enable-remote-http-toggle|enable-remote-toggle|enforce-blocks|filterfile|forward|forwarded-connect-retries|forward-socks4|forward-socks4a|forward-socks5|handle-as-empty-doc-returns-ok|hostname|keep-alive-timeout|listen-address|logdir|logfile|max-client-connections|permit-access|proxy-info-url|single-threaded|socket-timeout|split-large-forms|templdir|toggle|tolerate-pipelining|trustfile|trust-info-url|user-manual)[[:space:]]"
+color brightblack "(^|[[:space:]])#([^{].*)?$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
+
+syntax "Privoxy-action" "\.action$"
+
+color brightred   "[{[:space:]]\-block([[:space:]{}]|$)"
+color brightgreen "[{[:space:]]\+block([[:space:]{}]|$)"
+
+color brightred   "-(add-header|change-x-forwarded-for|client-header-filter|client-header-tagger|content-type-overwrite|crunch-client-header|crunch-if-none-match|crunch-incoming-cookies|crunch-outgoing-cookies|crunch-server-header|deanimate-gifs|downgrade-http-version|fast-redirects|filter|force-text-mode|forward-override|handle-as-empty-document|handle-as-image|hide-accept-language|hide-content-disposition|hide-from-header|hide-if-modified-since|hide-referrer|hide-user-agent|limit-connect|overwrite-last-modified|prevent-compression|redirect|server-header-filter|server-header-tagger|session-cookies-only|set-image-blocker)"
+color brightgreen "\+(add-header|change-x-forwarded-for|client-header-filter|client-header-tagger|content-type-overwrite|crunch-client-header|crunch-if-none-match|crunch-incoming-cookies|crunch-outgoing-cookies|crunch-server-header|deanimate-gifs|downgrade-http-version|fast-redirects|filter|force-text-mode|forward-override|handle-as-empty-document|handle-as-image|hide-accept-language|hide-content-disposition|hide-from-header|hide-if-modified-since|hide-referrer|hide-user-agent|limit-connect|overwrite-last-modified|prevent-compression|redirect|server-header-filter|server-header-tagger|session-cookies-only|set-image-blocker)"
+color magenta           "\\.?"
+color brightblack "(^|[[:space:]])#([^{].*)?$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
+
+syntax "Privoxy-filter" "\.filter$"
+
+color cyan  "^(FILTER|CLIENT-HEADER-FILTER|CLIENT-HEADER-TAGGER|SERVER-HEADER-FILTER|SERVER-HEADER-TAGGER): [a-z-]+"
+color brightblue "^(FILTER|CLIENT-HEADER-FILTER|CLIENT-HEADER-TAGGER|SERVER-HEADER-FILTER|SERVER-HEADER-TAGGER):"
+color magenta   "\\.?"
+color brightblack "(^|[[:space:]])#([^{].*)?$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/prolog.nanorc b/.nano/syntax/prolog.nanorc
new file mode 100644
index 00000000..ecd9e410
--- /dev/null
+++ b/.nano/syntax/prolog.nanorc
@@ -0,0 +1,35 @@
+## Here is a prolog example.
+
+syntax "prolog" "\.pl"
+comment "%"
+
+# Reset everything
+color normal ".*"
+
+# Integers and floats
+color yellow "(^| |=)[0-9]+\.?[0-9]*"
+
+# Variables
+color red "(^|[[:blank:]]|\(|,)[A-Z]+"
+color red "(^|[[:blank:]]|\(|,)_[0-9a-zA-Z_]+($|[[:blank:]]|,|\))"
+
+# Anonymous variable '_'
+color yellow "(^|[[:blank:]]|\(|,)_($|[[:blank:]]|,|\))"
+
+# Functions
+color cyan "(^|[[:blank:]])\w+\("
+color normal "\(|\)|\[|\]|,|=|\\="
+
+# Atoms
+color green start="\"" end="\""
+color green start="'" end="'"
+
+# Comments
+color white "(^|[[:blank:]])%.*$"
+color white start="^\s*/\*" end="\*/"
+
+# Reminders
+color black,yellow "(BUG|DEBUG|FIXME|IDEA|NOTE|REVIEW|TEMP|TODO|WARNING|XXX)"
+
+# Spaces in front of tabs
+color ,red " +	+"
diff --git a/.nano/syntax/properties.nanorc b/.nano/syntax/properties.nanorc
new file mode 100644
index 00000000..bb75d45e
--- /dev/null
+++ b/.nano/syntax/properties.nanorc
@@ -0,0 +1,6 @@
+syntax "properties" "\.properties$"
+# property key
+icolor green "^[^:=]+[:=]"
+
+# comments
+icolor blue "([[:space:]])*[#!].*$"
diff --git a/.nano/syntax/pug.nanorc b/.nano/syntax/pug.nanorc
new file mode 100644
index 00000000..a1855c08
--- /dev/null
+++ b/.nano/syntax/pug.nanorc
@@ -0,0 +1,45 @@
+syntax "Pug" "\.pug$"
+# Elements
+color yellow "^\s*([a-z0-9]+)"
+# Main elements
+color red "^\s*(html|head|body)"
+# Includes
+icolor magenta "^\s*(include)"
+# Variables
+color brightblue "^\s*(\-)\s(var)\s([a-z0-9]+)"
+icolor magenta "^\s*-\s(var)$" "^\s*-\s(var)\s"
+# Cases
+color brightblue "^\s*(case)\s(.*)"
+color cyan "^\s*(when)\s(.*)"
+icolor magenta "^\s*(case|when|default)$" "^\s*(case|when|default)\s"
+color brightred "^\s*-\s(break)$" "^\s*-\s(break)\s"
+# Conditionals
+icolor magenta "^\s*(if|else|else if)$" "^\s*(if|else|else if)\s"
+# For loops
+icolor magenta "^\s*-\s(for)"
+# Each
+icolor magenta "^\s*(each)$" "^\s*(each)\s"
+# Parenthesis content
+color blue start="\(" end="\)"
+# Strings
+color cyan "('[^']*')|(\"[^\"]*\")"
+# Parenthesis, commas, equals
+icolor green "\(" "\)" "\," "\="
+# Comments, dashes and spaces
+color blue "\s+(//.*)"
+color blue start="^\s*/\*" end="\*/"
+color white "^\s*(\-)"
+color ,green "[[:space:]]+$"
+# Unbuffered comments
+color brightblue "\s+(//-.*)"
+# HTML-style conditional comments
+color brightmagenta start="<!" end="!>"
+color brightmagenta "<!\[endif\]-->"
+# HTML-style elements
+color yellow "<([^!].*)>"
+# Pipes
+color yellow,magenta "\|"
+# Doctype
+color brightblack "^\s*(doctype)(.*)"
+# Links
+icolor brightgreen "https?:\/\/(www\.)?[a-zA-Z0-9@%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)" "_blank"
diff --git a/.nano/syntax/puppet.nanorc b/.nano/syntax/puppet.nanorc
new file mode 100644
index 00000000..8511dc53
--- /dev/null
+++ b/.nano/syntax/puppet.nanorc
@@ -0,0 +1,38 @@
+## Nano syntax highlighting for Puppet.
+##
+syntax "Puppet" "\.pp$"
+
+#This goes first, so the normal builtins will override in some classes
+## Paramerers
+color brightwhite "^[[:space:]]([a-z][a-z0-9_]+)"
+color brightgreen "\$[a-z:][a-z0-9_:]+"
+
+## List of built in types, also catches defines
+color yellow "\<(augeas|computer|cron|exec|file|filebucket|group|host|interface|k5login|macauthorization|mailalias|maillist|mcx|mount|nagios_command|nagios_contact|nagios_contactgroup|nagios_host|nagios_hostdependency|nagios_hostescalation|nagios_hostextinfo|nagios_hostgroup|nagios_service|nagios_servicedependency|nagios_serviceescalation|nagios_serviceextinfo|nagios_servicegroup|nagios_timeperiod|notify|package|resources|router|schedule|scheduled_task|selboolean|selmodule|service|ssh_authorized_key|sshkey|stage|tidy|user|vlan|yumrepo|zfs|zone|zpool|anchor)\>"
+color yellow "\<(class|define|if|else|undef|inherits)\>"
+color red "(=|-|~|>)"
+
+## Constants
+color brightblue "(\$|@|@@)?\<[A-Z]+[0-9A-Z_a-z]*"
+## Ruby "symbols"
+color magenta "([      ]|^):[0-9A-Z_]+\>"
+## Regular expressions
+color brightmagenta "/([^/]|(\\/))*/[iomx]*" "%r\{([^}]|(\\}))*\}[iomx]*"
+## Shell command expansion is in `backticks` or like %x{this}.  These are
+## "double-quotish" (to use a perlism).
+color brightblue "`[^`]*`" "%x\{[^}]*\}"
+## Strings, double-quoted
+color green ""([^"]|(\\"))*"" "%[QW]?\{[^}]*\}" "%[QW]?\([^)]*\)" "%[QW]?<[^>]*>" "%[QW]?\[[^]]*\]" "%[QW]?\$[^$]*\$" "%[QW]?\^[^^]*\^" "%[QW]?![^!]*!"
+## Expression substitution.  These go inside double-quoted strings,
+## "like ${this}".
+color brightgreen "\$\{[^}]*\}"
+## Strings, single-quoted
+color green "'([^']|(\\'))*'" "%[qw]\{[^}]*\}" "%[qw]\([^)]*\)" "%[qw]<[^>]*>" "%[qw]\[[^]]*\]" "%[qw]\$[^$]*\$" "%[qw]\^[^^]*\^" "%[qw]![^!]*!"
+## Comments
+color cyan "#[^{].*$" "#$"
+color brightcyan "##[^{].*$" "##$"
+## Some common markers
+color brightcyan "(XXX|TODO|FIXME|\?\?\?)"
+## Trailing spaces
+color ,green "[[:space:]]+$"
+
diff --git a/.nano/syntax/python.nanorc b/.nano/syntax/python.nanorc
new file mode 100644
index 00000000..70022a33
--- /dev/null
+++ b/.nano/syntax/python.nanorc
@@ -0,0 +1,56 @@
+## Python syntax highlighting rules for Nano
+
+syntax "python" "\.py$"
+header "^#!.*/(env +)?python[-0-9._]*( |$)"
+magic "Python script"
+comment "#"
+
+linter pyflakes
+
+## built-in objects
+color cyan "\<(None|self|True|False)\>"
+## built-in attributes
+color cyan "\<(__builtin__|__dict__|__methods__|__members__|__class__|__bases__|__import__|__name__|__doc__|__self__|__debug__)\>"
+## built-in functions
+color cyan "\<(abs|append|apply|buffer|callable|chr|clear|close|closed|cmp|coerce|compile|complex|conjugate|copy|count|delattr|dir|divmod|eval|execfile|exec|extend|fileno|filter|float|flush|get|getattr|globals|has_key|hasattr|hash|hex|id|index|input|insert|int|intern|isatty|isinstance|issubclass|items|keys|len|list|locals|long|map|max|min|mode|name|oct|open|ord|pop|pow|print|range|raw_input|read|readline|readlines|reduce|reload|remove|repr|reverse|round|seek|setattr|slice|softspace|sort|str|tell|truncate|tuple|type|unichr|unicode|update|values|vars|write|writelines|xrange|zip)\>"
+## built-in functions that were previously keywords
+color brightblue "\<(print|exec)\>([[:space:]]|$)"
+## special method names
+color cyan "\<(__abs__|__add__|__and__|__call__|__cmp__|__coerce__|__complex__|__concat__|__contains__|__del__|__delattr__|__delitem__|__delslice__|__div__|__divmod__|__float__|__getattr__|__getitem__|__getslice__|__hash__|__hex__|__init__|__int__|__inv__|__invert__|__len__|__long__|__lshift__|__mod__|__mul__|__neg__|__nonzero__|__oct__|__or__|__pos__|__pow__|__radd__|__rand__|__rcmp__|__rdiv__|__rdivmod__|__repeat__|__repr__|__rlshift__|__rmod__|__rmul__|__ror__|__rpow__|__rrshift__|__rshift__|__rsub__|__rxor__|__setattr__|__setitem__|__setslice__|__str__|__sub__|__xor__)\>"
+## exception classes
+color cyan "\<(Exception|StandardError|ArithmeticError|LookupError|EnvironmentError|AssertionError|AttributeError|EOFError|FloatingPointError|IOError|ImportError|IndexError|KeyError|KeyboardInterrupt|MemoryError|NameError|NotImplementedError|OSError|OverflowError|RuntimeError|SyntaxError|SystemError|SystemExit|TypeError|UnboundLocalError|UnicodeError|ValueError|WindowsError|ZeroDivisionError)\>"
+## types
+color brightcyan "\<(NoneType|TypeType|IntType|LongType|FloatType|ComplexType|StringType|UnicodeType|BufferType|TupleType|ListType|DictType|FunctionType|LambdaType|CodeType|ClassType|UnboundMethodType|InstanceType|MethodType|BuiltinFunctionType|BuiltinMethodType|ModuleType|FileType|XRangeType|TracebackType|FrameType|SliceType|EllipsisType)\>"
+## definitions
+color brightcyan "def [a-zA-Z_0-9]+" 
+## keywords
+color brightblue "\<(and|as|assert|async|await|break|class|continue|def|del|elif|else|except|finally|for|from|global|if|import|in|is|lambda|map|not|or|pass|raise|return|try|with|while|yield)\>"
+
+## decorators
+color brightgreen "@.*[(]"
+
+## operators
+color magenta "[.:;,+*|=!\%@]" "<" ">" "/" "-" "&"
+
+## parentheses
+color magenta "[(){}]" "\[" "\]"
+
+## numbers
+icolor brightyellow "\b(([1-9][0-9]+)|0+)\.[0-9]+j?\b" "\b([1-9][0-9]*[Lj]?)\b" "\b0o?[0-7]*L?\b" "\b0x[1-9a-f][0-9a-f]*L?\b" "\b0b[01]+\b"
+
+
+## strings
+color yellow "['][^']*[^\\][']" "[']{3}.*[^\\][']{3}"
+color yellow "["][^"]*[^\\]["]" "["]{3}.*[^\\]["]{3}"
+
+## comments
+color green "^#.*|[[:space:]]#.*$"
+
+## block comments
+color yellow start=""""[^"]" end=""""" start="'''[^']" end="'''"
+
+## trailing spaces
+color ,green "[[:space:]]+$"
+
+## reminders
+color brightwhite,yellow "(FIXME|TODO|XXX)"
diff --git a/.nano/syntax/reST.nanorc b/.nano/syntax/reST.nanorc
new file mode 100644
index 00000000..c0152fda
--- /dev/null
+++ b/.nano/syntax/reST.nanorc
@@ -0,0 +1,27 @@
+## For reST
+syntax "RST" "\.rest$" "\.rst$"
+# italics
+#color magenta "\*[^*]\*"
+# bold
+color red "\*\*[^*]+\*\*"
+# code block
+color brightred "::"
+# link reference
+color blue "`[^`]+`_{1,2}"
+# code
+color yellow "``[^`]+``"
+# directives or comments
+color cyan "^\.\. .*$"
+# anon link targets
+color cyan "^__ .*$"
+# h1
+color yellow "^###+$"
+color yellow "^\*\*\*+$"
+# h2
+color magenta "^===+$"
+# h3
+color red "^---+$"
+# h4
+color green "^\^\^\^+$"
+# h5
+color blue "^"""+$"
diff --git a/.nano/syntax/rever.xsh b/.nano/syntax/rever.xsh
new file mode 100644
index 00000000..17d797f1
--- /dev/null
+++ b/.nano/syntax/rever.xsh
@@ -0,0 +1,6 @@
+$PROJECT = $GITHUB_REPO = 'nanorc'
+$GITHUB_ORG = "scopatz"
+$WEBSITE_URL = 'https://github.com/scopatz/nanorc'
+$ACTIVITIES = ['authors', 'tag', 'push_tag', 'ghrelease']
+
+$AUTHORS_FILENAME = "AUTHORS.rst"
diff --git a/.nano/syntax/rpmspec.nanorc b/.nano/syntax/rpmspec.nanorc
new file mode 100644
index 00000000..eab8ee5c
--- /dev/null
+++ b/.nano/syntax/rpmspec.nanorc
@@ -0,0 +1,27 @@
+syntax "Rpmspec" "\.spec$" "\.rpmspec$"
+
+color cyan  "\<(Icon|ExclusiveOs|ExcludeOs):"
+color cyan  "\<(BuildArch|BuildArchitectures|ExclusiveArch|ExcludeArch):"
+color cyan  "\<(Conflicts|Obsoletes|Provides|Requires|Requires\(.*\)|Enhances|Suggests|BuildConflicts|BuildRequires|Recommends|PreReq|Supplements):"
+color cyan  "\<(Epoch|Serial|Nosource|Nopatch):"
+color cyan  "\<(AutoReq|AutoProv|AutoReqProv):"
+color cyan  "\<(Copyright|License|Summary|Summary\(.*\)|Distribution|Vendor|Packager|Group|Source[0-9]*|Patch[0-9]*|BuildRoot|Prefix):"
+color cyan  "\<(Name|Version|Release|Url|URL):"
+color cyan  start="^(Source|Patch)" end=":"
+color cyan  "(i386|i486|i586|i686|athlon|ia64|alpha|alphaev5|alphaev56|alphapca56|alphaev6|alphaev67|sparc|sparcv9|sparc64armv3l|armv4b|armv4lm|ips|mipsel|ppc|ppc|iseries|ppcpseries|ppc64|m68k|m68kmint|Sgi|rs6000|i370|s390x|s390|noarch)"
+color cyan  "(ifarch|ifnarch|ifos|ifnos)"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color brightyellow    "%(if|else|endif|define|global|undefine)"
+color brightyellow    "%_?([A-Z_a-z_0-9_]*)"
+color brightyellow    start="%\{" end="\}"
+color brightyellow    start="%\{__" end="\}"
+color brightyellow "\$(RPM_BUILD_ROOT)\>"
+color brightmagenta  "^%(build$|changelog|check$|clean$|description)"
+color brightmagenta  "^%(files|install$|package|prep$)"
+color brightmagenta  "^%(pre|preun|pretrans|post|postun|posttrans)"
+color brightmagenta  "^%(trigger|triggerin|triggerpostun|triggerun|verifyscript)"
+color brightblack "(^|[[:space:]])#([^{].*)?$"
+color blue   "^\*.*$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
+color brightwhite,cyan "TODO:?"
diff --git a/.nano/syntax/ruby.nanorc b/.nano/syntax/ruby.nanorc
new file mode 100644
index 00000000..7e8aef18
--- /dev/null
+++ b/.nano/syntax/ruby.nanorc
@@ -0,0 +1,37 @@
+## Here is an example for Ruby.
+##
+syntax "Ruby" "\.rb$" "Gemfile" "config.ru" "Rakefile" "Capfile" "Vagrantfile"
+header "^#!.*/(env +)?ruby( |$)"
+magic "Ruby script"
+linter ruby -w -c
+comment "#"
+
+## Asciibetical list of reserved words
+color yellow "\<(BEGIN|END|alias|and|begin|break|case|class|def|defined\?|do|else|elsif|end|ensure|false|for|if|in|module|next|nil|not|or|redo|rescue|retry|return|self|super|then|true|undef|unless|until|when|while|yield)\>"
+## Constants
+color brightblue "(\$|@|@@)?\<[A-Z]+[0-9A-Z_a-z]*"
+## Ruby "symbols"
+icolor magenta "([ 	]|^):[0-9A-Z_]+\>"
+## Some unique things we want to stand out
+color brightyellow "\<(__FILE__|__LINE__)\>"
+## Regular expressions
+color brightmagenta "/([^/]|(\\/))*/[iomx]*" "%r\{([^}]|(\\}))*\}[iomx]*"
+## Shell command expansion is in `backticks` or like %x{this}.  These are
+## "double-quotish" (to use a perlism).
+color brightblue "`[^`]*`" "%x\{[^}]*\}"
+## Strings, double-quoted
+color green ""([^"]|(\\"))*"" "%[QW]?\{[^}]*\}" "%[QW]?\([^)]*\)" "%[QW]?<[^>]*>" "%[QW]?\[[^]]*\]" "%[QW]?\$[^$]*\$" "%[QW]?\^[^^]*\^" "%[QW]?![^!]*!"
+## Expression substitution.  These go inside double-quoted strings,
+## "like #{this}".
+color brightgreen "#\{[^}]*\}"
+## Strings, single-quoted
+color green "'([^']|(\\'))*'" "%[qw]\{[^}]*\}" "%[qw]\([^)]*\)" "%[qw]<[^>]*>" "%[qw]\[[^]]*\]" "%[qw]\$[^$]*\$" "%[qw]\^[^^]*\^" "%[qw]![^!]*!"
+## Comments
+color cyan "#[^{].*$" "#$"
+color brightcyan "##[^{].*$" "##$"
+## "Here" docs
+color green start="<<-?'?EOT'?" end="^EOT"
+## Some common markers
+color brightcyan "(XXX|TODO|FIXME|\?\?\?)"
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/rust.nanorc b/.nano/syntax/rust.nanorc
new file mode 100644
index 00000000..88a0be86
--- /dev/null
+++ b/.nano/syntax/rust.nanorc
@@ -0,0 +1,42 @@
+# Nano configuration for Rust
+# Copyright 2015 The Rust Project Developers.
+#
+# NOTE: Rules are applied in order: later rules re-colorize matching text.
+
+
+syntax "Rust" "\.rs"
+comment "//"
+
+# function definition
+color magenta "fn [a-z0-9_]+"
+
+# Reserved words
+color yellow "\<(abstract|alignof|as|become|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|offsetof|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\>"
+
+# macros
+color red "[a-z_]+!"
+
+# Constants
+color magenta "[A-Z][A-Z_]+"
+
+# Traits/Enums/Structs/Types/etc.
+color magenta "[A-Z][a-z]+"
+
+# Strings
+color green "\".*\""
+color green start="\".*\\$" end=".*\""
+# NOTE: This isn't accurate but matching "#{0,} for the end of the string is too liberal
+color green start="r#+\"" end="\"#+"
+
+# Comments
+color blue "^\s*//.*"
+color blue start="^\s*/\*" end="\*/"
+
+# Attributes
+color magenta start="#!\[" end="\]"
+
+# Some common markers
+color brightcyan "(XXX|TODO|FIXME|\?\?\?)"
+
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/scala.nanorc b/.nano/syntax/scala.nanorc
new file mode 100644
index 00000000..53fc5f76
--- /dev/null
+++ b/.nano/syntax/scala.nanorc
@@ -0,0 +1,12 @@
+## Here is an example for Scala.
+##
+syntax "Scala" "\.(scala|sc|sbt)$"
+color green "\<(boolean|byte|char|double|float|int|long|new|short|this|transient|void)\>"
+color red "\<(match|val|var|break|case|catch|continue|default|do|else|finally|for|if|return|switch|throw|try|while)\>"
+color cyan "\<(def|object|case|trait|lazy|implicit|abstract|class|extends|final|implements|import|instanceof|interface|native|package|private|protected|public|static|strictfp|super|synchronized|throws|volatile|sealed)\>"
+color red ""[^"]*""
+color yellow "\<(true|false|null)\>"
+color blue "^\s*//.*"
+color blue start="^\s*/\*" end="\*/"
+color brightblue start="/\*\*" end="\*/"
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/sed.nanorc b/.nano/syntax/sed.nanorc
new file mode 100644
index 00000000..286c8ca5
--- /dev/null
+++ b/.nano/syntax/sed.nanorc
@@ -0,0 +1,9 @@
+syntax "SED" "\.sed$"
+header "^#!.*bin/(env +)?sed( |$)"
+
+color red "[|^$.*+]"
+color brightyellow "\{[0-9]+,?[0-9]*\}"
+color magenta   "\\."
+color brightblack "(^|[[:space:]])#([^{].*)?$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/sh.nanorc b/.nano/syntax/sh.nanorc
new file mode 100644
index 00000000..febc22c6
--- /dev/null
+++ b/.nano/syntax/sh.nanorc
@@ -0,0 +1,23 @@
+## Here is an example for Bourne shell scripts.
+##
+syntax "SH" "\.sh$" "\.ash" "\.bashrc" "bashrc" "\.bash_aliases" "bash_aliases" "\.bash_functions" "bash_functions" "\.bash_login" "\.bash_logout" "\.bash_profile" "bash_profile" "\.profile" "revise\..+$"
+header "^#!.*/(env +)?(ba|da|a)?sh( |$)"
+magic "(POSIX|Bourne-Again) shell script.*text"
+comment "#"
+
+linter dash -n
+
+## keywords:
+color green "\<(case|do|done|elif|else|esac|fi|for|function|if|in|select|then|time|until|while)\>"
+color green "(\{|\}|\(|\)|\;|\]|\[|`|\\|\$|<|>|!|=|&|\|)"
+color green "-[Ldefgruwx]\>"
+color green "-(eq|ne|gt|lt|ge|le|s|n|z)\>"
+## builtins:
+color brightblue "\<(alias|bg|bind|break|builtin|caller|cd|command|compgen|complete|compopt|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|false|fc|fg|getopts|hash|help|history|jobs|kill|let|local|logout|mapfile|popd|printf|pushd|pwd|read|readarray|readonly|return|set|shift|shopt|source|suspend|test|times|trap|true|type|typeset|ulimit|umask|unalias|unset|wait)\>"
+## not buitins:
+## cat|chmod|chown|cp|env|grep|install|ln|make|mkdir|mv|rm|sed|tar|touch
+icolor brightgreen "^\s+[0-9A-Z_]+\s+\(\)"
+icolor brightred "\$\{?[0-9A-Z_!@#$*?-]+\}?"
+color brightyellow ""(\\.|[^"])*"" "'(\\.|[^'])*'"
+color cyan "(^|[[:space:]])#.*$"
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/shellcheck.sh b/.nano/syntax/shellcheck.sh
new file mode 100755
index 00000000..22ad42b2
--- /dev/null
+++ b/.nano/syntax/shellcheck.sh
@@ -0,0 +1,4 @@
+#!/bin/sh -ev
+# Shellcheck the script
+
+shellcheck install.sh
diff --git a/.nano/syntax/sls.nanorc b/.nano/syntax/sls.nanorc
new file mode 100644
index 00000000..c8affffd
--- /dev/null
+++ b/.nano/syntax/sls.nanorc
@@ -0,0 +1,29 @@
+## SaltStack files (*.sls)
+##
+
+syntax "Salt" "\.sls$"
+
+# Anything ending in a colon (:), including things that start with a dash (-)
+color blue "^[^ -].*:$"
+color blue ".*:"
+# Except for salt:// URLs
+color white "salt:"
+
+# Numbers, etc
+color red "/*[0-9]/*"
+color red "\<(True|False)\>"
+
+# Anything between two single quotes
+color green ""(\\.|[^"])*"|'(\\.|[^'])*'"
+
+# Matching keywords
+color yellow "\<(grain|grains|compound|pcre|grain_pcre|list|pillar)\>"
+
+# Comments
+color brightblack "^#.*"
+
+# Logic keywords
+color magenta "\<(if|elif|else|or|not|and|endif|end)\>"
+
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/sql.nanorc b/.nano/syntax/sql.nanorc
new file mode 100644
index 00000000..1ebd5745
--- /dev/null
+++ b/.nano/syntax/sql.nanorc
@@ -0,0 +1,34 @@
+syntax "SQL" "\.sql$" "sqliterc$"
+
+icolor cyan "\<(ALL|ASC|AS|ALTER|AND|ADD|AUTO_INCREMENT)\>"
+icolor cyan "\<(BETWEEN|BINARY|BOTH|BY|BOOLEAN)\>"
+icolor cyan "\<(CHANGE|CHECK|COLUMNS|COLUMN|CROSS|CREATE)\>"
+icolor cyan "\<(DATABASES|DATABASE|DATA|DELAYED|DESCRIBE|DESC|DISTINCT|DELETE|DROP|DEFAULT)\>"
+icolor cyan "\<(ENCLOSED|ESCAPED|EXISTS|EXPLAIN)\>"
+icolor cyan "\<(FIELDS|FIELD|FLUSH|FOR|FOREIGN|FUNCTION|FROM)\>"
+icolor cyan "\<(GROUP|GRANT|HAVING)\>"
+icolor cyan "\<(IGNORE|INDEX|INFILE|INSERT|INNER|INTO|IDENTIFIED|IN|IS|IF)\>"
+icolor cyan "\<(JOIN|KEYS|KILL|KEY)\>"
+icolor cyan "\<(LEADING|LIKE|LIMIT|LINES|LOAD|LOCAL|LOCK|LOW_PRIORITY|LEFT|LANGUAGE)\>"
+icolor cyan "\<(MODIFY|NATURAL|NOT|NULL|NEXTVAL)\>"
+icolor cyan "\<(OPTIMIZE|OPTION|OPTIONALLY|ORDER|OUTFILE|OR|OUTER|ON)\>"
+icolor cyan "\<(PROCEDURE|PROCEDURAL|PRIMARY)\>"
+icolor cyan "\<(READ|REFERENCES|REGEXP|RENAME|REPLACE|RETURN|REVOKE|RLIKE|RIGHT)\>"
+icolor cyan "\<(SHOW|SONAME|STATUS|STRAIGHT_JOIN|SELECT|SETVAL|SET)\>"
+icolor cyan "\<(TABLES|TERMINATED|TO|TRAILING|TRUNCATE|TABLE|TEMPORARY|TRIGGER|TRUSTED)\>"
+icolor cyan "\<(UNIQUE|UNLOCK|USE|USING|UPDATE|VALUES|VARIABLES|VIEW)\>"
+icolor cyan "\<(WITH|WRITE|WHERE|ZEROFILL|TYPE|XOR)\>"
+color green     "\<(VARCHAR|TINYINT|TEXT|DATE|SMALLINT|MEDIUMINT|INT|INTEGER|BIGINT|FLOAT|DOUBLE|DECIMAL|DATETIME|TIMESTAMP|TIME|YEAR|UNSIGNED|CHAR|TINYBLOB|TINYTEXT|BLOB|MEDIUMBLOB|MEDIUMTEXT|LONGBLOB|LONGTEXT|ENUM|BOOL|BINARY|VARBINARY)\>"
+
+# SQLite meta commands
+icolor cyan "\.\<(databases|dump|echo|exit|explain|header(s)?|help)\>"
+icolor cyan "\.\<(import|indices|mode|nullvalue|output|prompt|quit|read)\>"
+icolor cyan "\.\<(schema|separator|show|tables|timeout|width)\>"
+color brightcyan  "\<(ON|OFF)\>"
+
+color blue   "\<([0-9]+)\>"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color yellow   "`(\\.|[^\\`])*`"
+color brightblack  "\-\-.*$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/svn.nanorc b/.nano/syntax/svn.nanorc
new file mode 100644
index 00000000..c2f89abe
--- /dev/null
+++ b/.nano/syntax/svn.nanorc
@@ -0,0 +1,14 @@
+syntax "svn-commit" "svn-commit(\.[[:digit:]]+)?\.tmp$"
+
+# commit message
+color yellow ".*"
+
+# ignore after line EDITOR_EOF_PREFIX (see svn/util.c)
+color brightblack "^--.+--$"
+
+# files changes
+color white       "^[ADM_](M|[[:space:]])[[:space:]](\+|[[:space:]])[[:space:]].*"
+color red         "^D[[:space:]]{4}"
+color green       "^[M_](M|[[:space:]])[[:space:]]{3}"
+color brightgreen "^A(M|[[:space:]])[[:space:]]{3}"
+color brightblue  "^A(M|[[:space:]])[[:space:]]\+[[:space:]]"
diff --git a/.nano/syntax/swift.nanorc b/.nano/syntax/swift.nanorc
new file mode 100644
index 00000000..636441a6
--- /dev/null
+++ b/.nano/syntax/swift.nanorc
@@ -0,0 +1,64 @@
+##############################################################################
+# Swift syntax highlighting for Nano. v.1.1
+##############################################################################
+
+syntax "Swift" "\.swift$"
+
+# Default
+color white ".+"
+
+# Operators
+color yellow "[.:;,+*|=!?\%]" "<" ">" "/" "-" "&"
+color brightyellow "[!]"
+
+# Statements
+color magenta  "\<(class|import|let|var|struct|enum|func|if|else|switch|case|default|for|in|static|private|public|throws)\>"
+color magenta  "\<(lazy|get|set|self|willSet|didSet|override|super|convenience|weak|strong|mutating|return|guard)\>"
+color magenta  "\<(protocol|typealias|prefix|postfix|operator|extension|internal|external|unowned)\>"
+
+# Keywords
+color cyan "\<(print)\>"
+color magenta "\<(init)\>"
+
+# Attribute
+color red "(@+[a-zA-Z]+)"
+
+# Numbers / Decimal Literal 
+color blue "\<([0-9]+)\>"
+# Unicode Literal "U+"
+color blue "\<(U\++[0-9A-Z]+)\>"
+# Binary Literal "0b"
+color blue "\<(0b+[0-1]+)\>"
+# Octal Literal "0o"
+color blue "\<(0o+[0-7]+)\>"
+# Hexadecimal Literal "0x"
+color blue "\<(0x+[0-9A-Fa-f]+)\>"
+
+# Standard Types
+color brightmagenta "\<((U)?Int(8|16|32|64))\>"
+color brightmagenta "\<(true|false|nil)\>"
+color brightmagenta "\<(UInt|Int|Double|String|Float|Bool|Dictionary|Array|Character|Range|Set|Bit|RawByte|Slice)\>"
+color brightmagenta "\<(UnicodeScalar|UnsafePointer|UnsafeMutablePointer)\>"
+color magenta "\<(AnyObject)\>"
+
+# Standard Type Aliases and Protocols
+color magenta "\<(AnyObject|AnyClass|GeneratorType|AnyGenerator|Element|Optional|Mirror)\>"
+color magenta "\<(UnicodeScalarType|IntMax|UIntMax|Void|Any|Comparable|Equatable|Hashable|SequenceType)\>"
+
+# Standard Libraries
+color cyan "\<(Foundation|Glibc|Darwin|XCTest)\>"
+
+# Text
+color red ""[^"]*""
+
+# Variable in Text
+color white start="\\\(" end="\)"
+
+# Comments
+color green "^\s*//.*"
+color brightgreen "^\s*///.*"
+color green start="/\*\*" end="\*/"
+color green "[/**]"
+
+# Trailing whitespace
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/systemd.nanorc b/.nano/syntax/systemd.nanorc
new file mode 100644
index 00000000..888cab86
--- /dev/null
+++ b/.nano/syntax/systemd.nanorc
@@ -0,0 +1,12 @@
+syntax "Systemd" "\.(service|socket)$"
+header "^\[Unit\]$"
+
+color cyan  "^(Accept|After|Alias|AllowIsolate|Also|AmbientCapabilities|ANSI_COLOR|_AUDIT_LOGINUID|_AUDIT_SESSION|Backlog|Before|BindIPv6Only|BindsTo|BindToDevice|BlockIOReadBandwidth|BlockIOWeight|BlockIOWriteBandwidth|_BOOT_ID|Broadcast|BUG_REPORT_URL|BusName|Capabilities|CapabilityBoundingSet|CHASSIS|cipher|class|_CMDLINE|CODE_FILE|CODE_FUNC|CODE_LINE|_COMM|Compress|ConditionACPower|ConditionCapability|ConditionDirectoryNotEmpty|ConditionFileIsExecutable|ConditionFileNotEmpty|ConditionHost|ConditionKernelCommandLine|ConditionNull|ConditionPathExists|ConditionPathExistsGlob|ConditionPathIsDirectory|ConditionPathIsMountPoint|ConditionPathIsReadWrite|ConditionPathIsSymbolicLink|ConditionSecurity|ConditionVirtualization|Conflicts|ControlGroup|ControlGroupAttribute|ControlGroupModify|ControlGroupPersistent|controllers|Controllers|CPE_NAME|CPUAffinity|CPUSchedulingPolicy|CPUSchedulingPriority|CPUSchedulingResetOnFork|CPUShares|CrashChVT|CrashShell|__CURSOR|debug|DefaultControllers|DefaultDependencies|DefaultLimitAS|DefaultLimitCORE|DefaultLimitCPU|DefaultLimitDATA|DefaultLimitFSIZE|DefaultLimitLOCKS|DefaultLimitMEMLOCK|DefaultLimitMSGQUEUE|DefaultLimitNICE|DefaultLimitNOFILE|DefaultLimitNPROC|DefaultLimitRSS|DefaultLimitRTPRIO|DefaultLimitRTTIME|DefaultLimitSIGPENDING|DefaultLimitSTACK|DefaultStandardError|DefaultStandardOutput|Description|DeviceAllow|DeviceDeny|DirectoryMode|DirectoryNotEmpty|Documentation|DumpCore|entropy|Environment|EnvironmentFile|ERRNO|event_timeout|_EXE|ExecReload|ExecStart|ExecStartPost|ExecStartPre|ExecStop|ExecStopPost|ExecStopPre|filter|FONT|FONT_MAP|FONT_UNIMAP|ForwardToConsole|ForwardToKMsg|ForwardToSyslog|FreeBind|freq|FsckPassNo|fstab|_GID|Group|GuessMainPID|HandleHibernateKey|HandleLidSwitch|HandlePowerKey|HandleSuspendKey|hash|HibernateKeyIgnoreInhibited|HOME_URL|_HOSTNAME|ICON_NAME|ID|IdleAction|IdleActionSec|ID_LIKE|ID_MODEL|ID_MODEL_FROM_DATABASE|IgnoreOnIsolate|IgnoreOnSnapshot|IgnoreSIGPIPE|InaccessibleDirectories|InhibitDelayMaxSec|init|IOSchedulingClass|IOSchedulingPriority|IPTOS|IPTTL|JobTimeoutSec|JoinControllers|KeepAlive|KEYMAP|KEYMAP_TOGGLE|KillExcludeUsers|KillMode|KillOnlyUsers|KillSignal|KillUserProcesses|LidSwitchIgnoreInhibited|LimitAS|LimitCORE|LimitCPU|LimitDATA|LimitFSIZE|LimitLOCKS|LimitMEMLOCK|LimitMSGQUEUE|LimitNICE|LimitNOFILE|LimitNPROC|LimitRSS|LimitRTPRIO|LimitRTTIME|LimitSIGPENDING|LimitSTACK|link_priority|valueListenDatagram|ListenFIFO|ListenMessageQueue|ListenNetlink|ListenSequentialPacket|ListenSpecial|ListenStream|LogColor|LogLevel|LogLocation|LogTarget|luks|_MACHINE_ID|MakeDirectory|Mark|MaxConnections|MaxFileSec|MaxLevelConsole|MaxLevelKMsg|MaxLevelStore|MaxLevelSyslog|MaxRetentionSec|MemoryLimit|MemorySoftLimit|MESSAGE|MESSAGE_ID|MessageQueueMaxMessages|MessageQueueMessageSize|__MONOTONIC_TIMESTAMP|MountFlags|NAME|NAutoVTs|Nice|NonBlocking|NoNewPrivileges|NotifyAccess|OnActiveSec|OnBootSec|OnCalendar|OnFailure|OnFailureIsolate|OnStartupSec|OnUnitActiveSec|OnUnitInactiveSec|OOMScoreAdjust|Options|output|PAMName|PartOf|PassCredentials|PassSecurity|PathChanged|PathExists|PathExistsGlob|PathModified|PermissionsStartOnly|_PID|PIDFile|PipeSize|PowerKeyIgnoreInhibited|PRETTY_HOSTNAME|PRETTY_NAME|Priority|PRIORITY|PrivateDevices|PrivateNetwork|PrivateTmp|PropagatesReloadTo|ProtectControlGroups|ProtectHome|ProtectKernelModules|ProtectKernelTunables|ProtectSystem|pss|RateLimitBurst|RateLimitInterval|ReadOnlyDirectories|ReadWriteDirectories|__REALTIME_TIMESTAMP|ReceiveBuffer|RefuseManualStart|RefuseManualStop|rel|ReloadPropagatedFrom|RemainAfterExit|RestrictAddressFamilies|RestrictNamespaces|RestrictRealtime|RequiredBy|Requires|RequiresMountsFor|RequiresOverridable|Requisite|RequisiteOverridable|ReserveVT|ResetControllers|Restart|RestartPreventExitStatus|RestartSec|RootDirectory|RootDirectoryStartOnly|RuntimeKeepFree|RuntimeMaxFileSize|RuntimeMaxUse|RuntimeWatchdogSec|samples|scale_x|scale_y|Seal|SecureBits|_SELINUX_CONTEXT|SendBuffer|SendSIGKILL|Service|ShowStatus|ShutdownWatchdogSec|size|SmackLabel|SmackLabelIPIn|SmackLabelIPOut|SocketMode|Sockets|SourcePath|_SOURCE_REALTIME_TIMESTAMP|SplitMode|StandardError|StandardInput|StandardOutput|StartLimitAction|StartLimitBurst|StartLimitInterval|static_node|StopWhenUnneeded|Storage|string_escape|none|replaceSuccessExitStatus|SupplementaryGroups|SUPPORT_URL|SuspendKeyIgnoreInhibited|SyslogFacility|SYSLOG_FACILITY|SyslogIdentifier|SYSLOG_IDENTIFIER|SyslogLevel|SyslogLevelPrefix|SYSLOG_PID|SystemCallArchitectures|SystemCallFilter|SYSTEMD_ALIAS|_SYSTEMD_CGROUP|_SYSTEMD_OWNER_UID|SYSTEMD_READY|_SYSTEMD_SESSION|_SYSTEMD_UNIT|_SYSTEMD_USER_UNIT|SYSTEMD_WANTS|SystemKeepFree|SystemMaxFileSize|SystemMaxUse|SysVStartPriority|TCPCongestion|TCPWrapName|timeout|TimeoutSec|TimeoutStartSec|TimeoutStopSec|TimerSlackNSec|Transparent|_TRANSPORT|tries|TTYPath|TTYReset|TTYVHangup|TTYVTDisallocate|Type|_UID|UMask|Unit|User|UtmpIdentifier|VERSION|VERSION_ID|WantedBy|Wants|WatchdogSec|What|Where|WorkingDirectory)="
+color brightblue "^\.include\>"
+color red "="
+color brightmagenta  "^\[(Unit|Install|Service|Socket)\]"
+color brightyellow "\$MAINPID"
+color brightcyan "\<(true|false)\>"
+color brightblack "(^|[[:space:]])#([^{].*)?$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/tcl.nanorc b/.nano/syntax/tcl.nanorc
new file mode 100644
index 00000000..99c9ae0c
--- /dev/null
+++ b/.nano/syntax/tcl.nanorc
@@ -0,0 +1,27 @@
+syntax "TCL" "\.tcl$"
+header "^#!.*/(env +)?tclsh( |$)"
+
+magic "Tcl(/Tk)? script"
+comment "#"
+
+## Standard Tcl [info commands]
+color cyan "\<(after|append|array|auto_execok|auto_import|auto_load|auto_load_index|auto_qualify|binary|break|case|catch|cd|clock|close|concat|continue|else|encoding|eof|error|eval|exec|exit|expr|fblocked|fconfigure|fcopy|file|fileevent|flush|for|foreach|format|gets|glob|global|history|if|incr|info|interp|join|lappend|lindex|linsert|list|llength|load|lrange|lreplace|lsearch|lset|lsort|namespace|open|package|pid|puts|pwd|read|regexp|regsub|rename|return|scan|seek|set|socket|source|split|string|subst|switch|tclLog|tell|time|trace|unknown|unset|update|uplevel|upvar|variable|vwait|while)\>"
+## Basic Tcl sub commands
+color cyan "\<(array anymore|array donesearch|array exists|array get|array names|array nextelement|array set|array size|array startsearch|array statistics|array unset)\>"
+color cyan "\<(string bytelength|string compare|string equal|string first|string index|string is|string last|string length|string map|string match|string range|string repeat|string replace|string to|string tolower|string totitle|string toupper|string trim|string trimleft|string trimright|string will|string wordend|string wordstart)\>"
+## Extended TclX [info commands]
+color cyan "\<(alarm|auto_load_pkg|bsearch|catclose|catgets|catopen|ccollate|cconcat|cequal|chgrp|chmod|chown|chroot|cindex|clength|cmdtrace|commandloop|crange|csubstr|ctoken|ctype|dup|echo|execl|fcntl|flock|fork|fstat|ftruncate|funlock|host_info|id|infox|keyldel|keylget|keylkeys|keylset|kill|lassign|lcontain|lempty|lgets|link|lmatch|loadlibindex|loop|lvarcat|lvarpop|lvarpush|max|min|nice|pipe|profile|random|readdir|replicate|scancontext|scanfile|scanmatch|select|server_accept|server_create|signal|sleep|sync|system|tclx_findinit|tclx_fork|tclx_load_tndxs|tclx_sleep|tclx_system|tclx_wait|times|translit|try_eval|umask|wait)\>"
+## Function declaration
+color brightblue "proc[[:space:]]" "(\{|\})"
+## Syntax
+color green "(\(|\)|\;|`|\\|\$|<|>|!|=|&|\|)"
+## Numbers
+color brightyellow "\<[0-9]+(\.[0-9]+)?\>"
+## Strings
+color yellow ""(\\.|[^"])*"" "'(\\.|[^'])*'"
+## Variables
+icolor brightred "\$\{?[0-9A-Z_!@#$*?-]+\}?"
+## Comments
+color magenta "(^|;)[[:space:]]*#.*"
+## Trailing whitespace
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/tex.nanorc b/.nano/syntax/tex.nanorc
new file mode 100644
index 00000000..8b281d54
--- /dev/null
+++ b/.nano/syntax/tex.nanorc
@@ -0,0 +1,14 @@
+## Here is a short example for TeX files.
+##
+syntax "TeX" "\.tex$" "bib" "\.bib$" "cls" "\.cls$"
+magic "(La)?TeX document"
+comment "%"
+
+linter chktex -v0 -q -I
+
+color yellow "\$(\\\$|[^$])*[^\\]\$"
+color yellow "\$\$(\\\$|[^$])*[^\\]\$\$"
+icolor green "\\.|\\[A-Z]*"
+color magenta "[{}]"
+color blue "%.*"
+color blue start="\\begin\{comment\}" end="\\end\{comment\}"
diff --git a/.nano/syntax/toml.nanorc b/.nano/syntax/toml.nanorc
new file mode 100644
index 00000000..3bafa749
--- /dev/null
+++ b/.nano/syntax/toml.nanorc
@@ -0,0 +1,54 @@
+syntax "toml" "\.toml$"
+comment "#"
+
+# Booleans
+color magenta "true|false"
+
+# Numbers
+color green "[+-]?[[:space:]]*[0-9]+(\.[0-9]+)?([Ee][+-]?[0-9]+)?"
+color green "[0-9]+(_[0-9]+)*"
+
+# Tables / unwrapped keys
+color brightgreen "[a-zA-Z0-9_]*(\.[a-zA-Z0-9_]+)*"
+
+# Invalid Table names
+color ,red "^[[:space:]]*\[\]"
+color ,red "^[[:space:]]*\[[a-zA-Z0-9_]\.\]"
+color ,red "^[[:space:]]*\[.*\.\..*\]"
+color ,red "^[[:space:]]*\[\..*?\]"
+
+# Strings
+color brightyellow ""(\.|[^"])*"" "'(\.|[^'])*'"
+color yellow start="\"\"\"" end="\"\"\""
+
+# Comments
+color brightblue "#.*"
+
+# Keyless value
+color ,red "^[[:space:]]*=.*"
+
+# Trailing whitespace
+color ,green "[[:space:]]+$"
+
+
+# MIT License
+
+# Copyright (c) 2017 Uninteresting Account
+
+# Permission is hereby granted, free of charge, to any person obtaining a copy
+# of this software and associated documentation files (the "Software"), to deal
+# in the Software without restriction, including without limitation the rights
+# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+# copies of the Software, and to permit persons to whom the Software is
+# furnished to do so, subject to the following conditions:
+
+# The above copyright notice and this permission notice shall be included in all
+# copies or substantial portions of the Software.
+
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+# SOFTWARE.
diff --git a/.nano/syntax/ts.nanorc b/.nano/syntax/ts.nanorc
new file mode 100644
index 00000000..1a8d85c4
--- /dev/null
+++ b/.nano/syntax/ts.nanorc
@@ -0,0 +1,47 @@
+syntax "typescript" "\.(ts)$"
+header "^#!.*\/(env +)ts-node"
+
+## Default
+color white "^.+$"
+
+## Decimal, cotal and hexadecimal numbers
+color yellow "\<[-+]?([1-9][0-9]*|0[0-7]*|0x[0-9a-fA-F]+)([uU][lL]?|[lL][uU]?)?\>"
+
+## Floating point number with at least one digit before decimal point
+color yellow "\<[-+]?([0-9]+\.[0-9]*|[0-9]*\.[0-9]+)([EePp][+-]?[0-9]+)?[fFlL]?"
+color yellow "\<[-+]?([0-9]+[EePp][+-]?[0-9]+)[fFlL]?"
+
+## Keywords
+color green "\<(as|abstract|asserts|boolean|break|byte|case|catch)\>"
+color green "\<(class|const|continue|debugger|default|delete|readonly)\>"
+color green "\<(do|else|enum|export|extends|finally|final|for)\>"
+color green "\<(from|function|goto|if|implements|import|instanceof)\>"
+color green "\<(var|interface|int|in|is|infer|let|new|package|private)\>"
+color green "\<(protected|public|return|static|super|switch)\>"
+color green "\<(this|throw|try|typeof|type)\>"
+color green "\<(void|while|with|yield)\>"
+color green "\<(async|await)\>"
+color green "\<(set|get)\>"
+color green "\<(module|namespace)\>"
+color green "\<(declare)\>"
+
+## Type specifiers
+color red "\<(Array|Boolean|Date|Enumerator|Error|Function)\>"
+color red "\<(Number|Object|RegExp|String)\>"
+color red "\<(true|false)\>"
+
+## String
+color brightyellow "L?\"(\\"|[^"])*\""
+color brightyellow "L?'(\'|[^'])*'"
+color brightcyan "L?`(\`|[^`])*`"
+color brightwhite,blue start="\$\{" end="\}"
+
+## Escapes
+color red "\\[0-7][0-7]?[0-7]?|\\x[0-9a-fA-F]+|\\[bfnrt'"\?\\]"
+
+## Comments
+color magenta start="/\*" end="\*/"
+color magenta "^\s*//.*$"
+
+## Trailing whitespace
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/twig.nanorc b/.nano/syntax/twig.nanorc
new file mode 120000
index 00000000..c18f7cba
--- /dev/null
+++ b/.nano/syntax/twig.nanorc
@@ -0,0 +1 @@
+html.nanorc
\ No newline at end of file
diff --git a/.nano/syntax/vala.nanorc b/.nano/syntax/vala.nanorc
new file mode 100644
index 00000000..0864cf13
--- /dev/null
+++ b/.nano/syntax/vala.nanorc
@@ -0,0 +1,18 @@
+syntax "Vala" "\.vala$"
+
+color green     "\<(float|double|bool|char|int|uint|short|long|void|(un)?signed)\>"
+color brightblue "[A-Za-z_][A-Za-z0-9_]*[[:space:]]*[()]"
+color cyan  "\<(for|if|while|do|else|case|default|switch|try|throw|catch)\>"
+color cyan  "\<(inline|typedef|struct|enum|union|extern|static|const)\>"
+color cyan  "\<(operator|new|delete|return|null)\>"
+color cyan  "\<(class|override|private|public|signal|this|weak)\>"
+color brightred     "\<(goto|break|continue)\>"
+color brightcyan "\<(true|false)\>"
+color blue   "\<([0-9]+)\>"
+color red "[-+/*=<>?:!~%&|]" "->"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color brightblack "(^|[[:space:]])//.*"
+color brightblack start="^\s*/\*" end="\*/"
+color brightwhite,cyan "TODO:?"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/verilog.nanorc b/.nano/syntax/verilog.nanorc
new file mode 100644
index 00000000..b4143083
--- /dev/null
+++ b/.nano/syntax/verilog.nanorc
@@ -0,0 +1,84 @@
+## (System)Verilog syntax highlighting.
+
+# See http://savannah.gnu.org/patch/?9356
+# From bc2635d9c8dcf6a71e834582501546fac6bdbfff Mon Sep 17 00:00:00 2001
+# From: Ben Rosser <rosser.bjr@gmail.com>
+# Date: Tue, 23 May 2017 17:43:15 -0400
+# Subject: [PATCH] Add Verilog nanorc file for syntax highlighting
+
+# This adds a verilog.nanorc file for syntax highlighting of Verilog
+# and SystemVerilog code. It is based off of the nanorc files for
+# Python and C.
+
+# All keywords in both Verilog (*.v, *.vh) and SystemVerilog (*.sv,
+# *.svh) are listed. Compiler directives (commands beginning with a
+# backtick) and builtin functions are also colorized.
+
+# Possibly the color scheme could use some work, but this is at least
+# a starting point. I based verilog.nanorc off of c.nanorc and
+# python.nanorc.
+
+syntax "verilog" "\.(v|vh|sv|svh)$"
+
+# I don't think we want this.
+#color brightred "\<[A-Z_][0-9A-Z_]+\>"
+
+# Module, package, etc. definitions: colorize their names.
+# (I'm not sure if brightred is a good color).
+icolor brightred "(module|package|task|interface|program|class) [0-9A-Z_]+"
+icolor brightred "function [0-9A-Z_]+ [0-9A-Z_]+"
+
+# Verilog keywords, taken from http://svref.renerta.com/sv00003.htm.
+color green "\<(always|and|assign|automatic|begin|buf|bufif0|bufif1|case|casex|casez|cell|class|cmos|config)\>"
+color green "\<(deassign|default|defparam|design|disable|edge|else|end|endcase|endconfig|endfunction|endgenerate)\>"
+color green "\<(endmodule|endprimitive|endspecify|endtable|endtask|event|for|force|forever|fork|function|generate)\>"
+color green "\<(genvar|highz0|highz1|if|iff|ifnone|incdir|include|initial|inout|input|instance|integer|join)\>"
+color green "\<(large|liblist|library|localparam|macromodule|medium|module|nand|negedge|nmos|nor|noshowcancelled)\>"
+color green "\<(not|notif0|notif1|null|or|output|parameter|pmos|posedge|primitive|pull0|pull1|pulldown|pullup)\>"
+color green "\<(pulsestyle_onevent|pulsestyle_ondetect|rcmos|real|realtime|reg|release|repeat|rnmos|rpmos|rtran)\>"
+color green "\<(rtranif0|rtranif1|scalared|showcancelled|signed|small|specify|specparam|strong0|strong1|supply0)\>"
+color green "\<(supply1|table|task|time|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|unsigned|use|uwire)\>"
+color green "\<(vectored|wait|wand|weak0|weak1|while|wire|wor|xnor|xor)\>"
+
+# System Verilog keywords, taken from same source.
+color green "\<(alias|always_comb|always_ff|always_latch|assert|assume|before|bind|bins|binsof|bit|break|byte)\>"
+color green "\<(chandle|clocking|const|constraint|context|continue|cover|covergroup|coverpoint|cross|dist|do)\>"
+color green "\<(endclass|endclocking|endgroup|endinterface|endpackage|endprogram|endproperty|endsequence|enum)\>"
+color green "\<(expect|export|extends|extern|final|first_match|foreach|forkjoin|ignore_bins|illegal_bins|import)\>"
+color green "\<(inside|int|interface|intersect|join_any|join_none|local|logic|longint|matches|modport|new|package)\>"
+color green "\<(packed|priority|program|property|protected|pure|rand|randc|randcase|randsequence|ref|return)\>"
+color green "\<(sequence|shortint|shortreal|solve|static|string|struct|super|tagged|this|throughout|timeprecision)\>"
+color green "\<(timeunit|type|typedef|union|unique|var|virtual|void|wait_order|wildcard|with|within)\>"
+
+# We need to go through these and decide if everything should be the same color, and remove extra things from C.
+# I don't think this is wanted.
+#color green "\<((s?size)|((u_?)?int(8|16|32|64|ptr)))_t\>"
+
+# Builtin function names (e.g. $display).
+icolor cyan "\$[0-9A-Z_]+"
+
+# Macros. Here are some of the standard ones, as per http://verilog.renerta.com/source/vrg00008.htm.
+#color cyan "^[[:space:]]*`[[:space:]]*(define|include(_next)?|timescale|(un|ifn?)def|endif|el(sif|se)|if|resetall)"
+#color cyan "^[[:space:]]*`[[:space:]]*(celldefine|endcelldefine|default_nettype|unconnected_drive|nounconnected_drive)"
+# This isn't complete and it may be better to just colorize `(string), like so:
+icolor cyan "^[[:space:]]*`[0-9A-Z_]+"
+
+# I'm not sure what this line does... it was in c.nanorc.
+#color brightmagenta "'([^'\]|(\\["'abfnrtv\\]))'" "'\\(([0-3]?[0-7]{1,2}))'" "'\\x[0-9A-Fa-f]{1,2}'"
+
+# Strings.  In general you will want your strings and comments to come last,
+# because highlighting rules are applied in the order they are read in.
+color brightyellow ""([^"]|\\")*"" "<[^[:blank:]=]*>"
+# Multiline strings.  This regex is VERY resource intensive,
+# and sometimes colours things that shouldn't be coloured.
+###color brightyellow start=""(\\.|[^"])*\\[[:space:]]*$" end="^(\\.|[^"])*""
+
+# Comments.
+color brightblue "^\s*//.*"
+color brightblue start="/\*" end="\*/"
+
+# Reminders.
+color ,yellow "\<(FIXME|TODO|XXX)\>"
+
+# Trailing whitespace.
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/vi.nanorc b/.nano/syntax/vi.nanorc
new file mode 100644
index 00000000..a2e2888d
--- /dev/null
+++ b/.nano/syntax/vi.nanorc
@@ -0,0 +1,10 @@
+syntax "VI" "(^|/|\.)(ex|vim)rc$|\.vim"
+
+color brightblue "[A-Za-z_][A-Za-z0-9_]*[[:space:]]*[()]"
+color cyan  "\<([nvxsoilc]?(nore|un)?map|[nvlx]n|[ico]?no|[cilovx][um]|s?unm)\>"
+color cyan  "\<(snor|nun|nm|set|if|endif|let|unlet)\>"
+color red "[!&=]"
+color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
+color brightblack  "(^|[[:space:]])\"[^"]*$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/x11basic.nanorc b/.nano/syntax/x11basic.nanorc
new file mode 100644
index 00000000..2a8d236b
--- /dev/null
+++ b/.nano/syntax/x11basic.nanorc
@@ -0,0 +1,172 @@
+## Sytax highlighting for nano and pico for X11-Basic. (c) Markus Hoffmann 2019
+
+# This file is part of X11-Basic, the basic interpreter for Unix/X
+# ======================================================================
+# X11-Basic is free software and comes with NO WARRANTY - read the file
+# COPYING for details
+
+syntax "x11basic" "\.(bas|xbas|LST|BAS)$"
+
+# Variable names
+
+icolor brightwhite "\<[A-Z_][A-Za-z0-9_]*(|\$|\%|\&|\||\(\))\>"
+
+# system vars
+icolor cyan "\<(CCSAPLID|CCSERR|COLS|CRSCOL|CRSLIN|CTIMER|ERR|FALSE)\>"
+icolor cyan "\<(GPS_ALT|GPS_LAT|GPS_LON|MOUSEK|MOUSES|MOUSEX|MOUSEY)\>"
+icolor cyan "\<(PC|PI|ROWS|SP|STIMER|TIMER|TRUE)\>"
+
+# system string vars
+icolor cyan "\<(DATE|FILEEVENT|INKEY|TERMINALNAME|TIME|TRACE)\$"
+
+#special system vars
+icolor cyan "\<(ANDROID|GPIO|GPS|SENSOR|WIN32|UNIX)\?"
+
+
+# system array vars
+
+# regular functions
+
+icolor green "\<(ABS|ACOS|ACOSH|ADD|AND|ARG|ARRPTR|ASC|ASIN|ASINH|ATAN|ATANH|ATN)\("
+icolor green "\<(BCHG|BCLR|BSET|BTST|BYTE)\("
+icolor green "\<(CALL|CALLD|CARD|CBRT|CEIL|COLOR_RGB|COMBIN|CONJ|COS|COSH|CRC|CVD|CVF|CVI|CVL|CVS)\("
+icolor green "\<(DEG|DET|DEVICE|DIV|DPEEK)\("
+icolor green "\<(EOF|EVAL|EVEN|EXEC|EXIST|EXP|EXPM1)\("
+icolor green "\<(FACT|FIX|FLOOR|FORK|FORM_ALERT|FORM_CENTER|FORM_DIAL|FORM_DO|FRAC|FREEFILE)\("
+icolor green "\<(GAMMA|GASDEV|GCD|GET_COLOR|GLOB|GPIO|GRAY)\("
+icolor green "\<(HYPOT)\("
+icolor green "\<(IMAG|INODE|INP|INSTR|INT|INVERT|IOCTL)\("
+icolor green "\<(JULIAN)\("
+icolor green "\<(LCM|LEN|LGAMMA|LISTSELECT|LN|LOC|LOF|LOG|LOG10|LOG1P|LOGB|LPEEK|LTEXTLEN)\("
+icolor green "\<(MALLOC|MAX|MIN|MOD|MODE|MSHRINK|MUL)\("
+icolor green "\<(NEXTPRIME|NLINK|NOT)\("
+icolor green "\<(OBJC_DRAW|OBJC_FIND|OBJC_OFFSET|ODD|OR)\("
+icolor green "\<(PEEK|POINT|POWM|PRED|PTST)\("
+icolor green "\<(RAD|RAND|RANDOM|REAL|REALLOC|RINSTR|RND|ROL|ROOT|ROR|ROUND|RSRC_GADDR)\("
+icolor green "\<(SENSOR|SGN|SHL|SHM_ATTACH|SHM_MALLOC|SHR|SIN|SINH|SIZE|SQR|SQRT|SRAND|SUB|SUCC|SWAP|SYM_ADR)\("
+icolor green "\<(TALLY|TAN|TANH|TRUNC)\("
+icolor green "\<(UBOUND)\("
+icolor green "\<(VAL|VARIAT|VARPTR|VRFY)\("
+icolor green "\<(WORD|WORT_SEP)\("
+icolor green "\<(XOR)\("
+
+# question functions
+icolor green "\<(DIM|EVENT|INP|TYP|VAL)\?\("
+
+# special functions
+
+icolor green "\<(INP)\%\("
+icolor green "\<(INP)\&\("
+
+
+
+# string functions
+icolor green "\<(ARID|ARIE)\$\("
+icolor green "\<(BIN|BWTD|BWTE)\$\("
+icolor green "\<(CALL|CHR|COMPRESS)\$\("
+icolor green "\<(DECLOSE|DECRYPT|DIR)\$\("
+icolor green "\<(ENCLOSE|ENCRYPT|ENV|ERR)\$\("
+icolor green "\<(FSFIRST|FSNEXT)\$\("
+icolor green "\<(HASH|HEX)\$\("
+icolor green "\<(INLINE|INPUT)\$\("
+icolor green "\<(JULDATE)\$\("
+icolor green "\<(LEFT|LEFTOF|LINEINPUT|LOWER)\$\("
+icolor green "\<(MID|MKA|MKD|MKF|MKI|MKL|MKS|MTFD|MTFE)\$\("
+icolor green "\<(OCT)\$\("
+icolor green "\<(PARAM|PNGDECODE|PNGENCODE|PRG)\$\("
+icolor green "\<(REPLACE|REVERSE|RADIX|RIGHT|RIGHTOF|RLD|RLE)\$\("
+icolor green "\<(SIGN|SPACE|STR|STRING|SYSTEM)\$\("
+icolor green "\<(TERMINALNAME|TRIM)\$\("
+icolor green "\<(UCASE|UNCOMPRESS|UNIXDATE|UNIXTIME|UPPER|USING)\$\("
+icolor green "\<(WORD)\$\("
+icolor green "\<(XTRIM)\$\("
+
+# array functions
+
+icolor green "\<(0|1|CONVOLUT|CVA|FFT|INV|SMUL|SOLVE|TRANS)\("
+
+
+
+# special commands
+
+icolor brightmagenta "(^|^[[:space:]]*)(DIM|LOCAL|LET)\>"
+icolor cyan "(^|^[[:space:]]*)DATA.*$"
+
+icolor red "(^|^[[:space:]]*)ENDFUNCTION\>"
+icolor red "(^|^[[:space:]]*)(RETURN|BREAK|CONTINUE|EXIT\ IF)\>"
+icolor red "(^|^[[:space:]]*)(FUNCTION|PROCEDURE|DEFFN)\>"
+
+icolor blue "(^|^[[:space:]]*)(endselect|select|default|endif|else\ if|else|case|do|loop|next|for|if|while|wend|repeat|until|goto|gosub|spawn|void)\>"
+icolor brightred "(^|^[[:space:]]*)(END|QUIT|STOP|TRON|TROFF|ECHO|EDIT|NEW|RUN)\>"
+
+
+# regular commands
+
+icolor brightgreen "(^|^[[:space:]]*)(ABSOLUTE|ADD|AFTER|ALERT|ARRAYCOPY|ARRAYFILL)\>"
+icolor brightgreen "(^|^[[:space:]]*)(BEEP|BELL|BGET|BLOAD|BMOVE|BOTTOMW|BOUNDARY|BOX|BPUT|BSAVE)\>"
+icolor brightgreen "(^|^[[:space:]]*)(CALL|CHAIN|CHDIR|CHMOD|CIRCLE|CLEAR|CLEARW|CLIP|CLOSE|CLOSEW|CLR|CLS|COLOR|CONNECT|COPYAREA|CURVE)\>"
+icolor brightgreen "(^|^[[:space:]]*)(DEC|DEFFILL|DEFLINE|DEFMARK|DEFMOUSE|DEFTEXT|DELAY|DIV|DPOKE|DRAW|DUMP)\>"
+icolor brightgreen "(^|^[[:space:]]*)(ELLIPSE|ERASE|ERROR|EVAL|EVENT|EVERY|EXEC)\>"
+icolor brightgreen "(^|^[[:space:]]*)(FFT|FILESELECT|FILL|FIT|FIT_LINEAR|FIT_POLY|FLUSH|FREE|FULLW)\>"
+icolor brightgreen "(^|^[[:space:]]*)(GET|GET_GEOMETRY|GET_LOCATION|GET_SCREENSIZE|GPIO|GPRINT|GPS|GRAPHMODE)\>"
+icolor brightgreen "(^|^[[:space:]]*)(HELP|HIDEK|HIDEM|HOME)\>"
+icolor brightgreen "(^|^[[:space:]]*)(INC|INFOW|INPUT)\>"
+icolor brightgreen "(^|^[[:space:]]*)(KEYEVENT|KILL)\>"
+icolor brightgreen "(^|^[[:space:]]*)(LINE|LINEINPUT|LINK|LIST|LOAD|LOCATE|LPOKE|LTEXT)\>"
+icolor brightgreen "(^|^[[:space:]]*)(MEMDUMP|MENU|MENUDEF|MENUKILL|MENUSET|MERGE|MFREE|MKDIR|MOUSE|MOUSEEVENT|MOTIONEVENT|MOVEW|MSYNC|MUL)\>"
+icolor brightgreen "(^|^[[:space:]]*)(NOOP|NOP|NOROOTWINDOW)\>"
+icolor brightgreen "(^|^[[:space:]]*)(OBJC_ADD|OBJC_DELETE|ON|OPEN|OPENW|OUT)\>"
+icolor brightgreen "(^|^[[:space:]]*)(PAUSE|PBOX|PCIRCLE|PELLIPSE|PIPE|PLAYSOUND|PLAYSOUNDFILE|PLIST|PLOT|POKE|POLYFILL|POLYLINE|POLYMARK|PRBOX|PRINT|PUT|PUTBACK|PUT_BITMAP)\>"
+icolor brightgreen "(^|^[[:space:]]*)(RANDOMIZE|RBOX|READ|RECEIVE|RELSEEK|RENAME|RESTORE|RMDIR|ROOTWINDOW|RSRC_FREE|RSRC_LOAD)\>"
+icolor brightgreen "(^|^[[:space:]]*)(SAVE|SAVESCREEN|SAVEWINDOW|SCOPE|SCREEN|SEEK|SEND|SENSOR|SETFONT|SETMOUSE|SGET|SHELL|SHM_DETACH|SHM_FREE|SHOWK|SHOWM|SHOEPAGE|SIZEW|SORT|SOUND|SPEAK|SPLIT|SPUT|SUB|SWAP|SYSTEM)\>"
+icolor brightgreen "(^|^[[:space:]]*)(TEXT|TITLEW|TOPW|TOUCH)\>"
+icolor brightgreen "(^|^[[:space:]]*)(UNLINK|UNMAP|USEWINDOW)\>"
+icolor brightgreen "(^|^[[:space:]]*)(VERSION|VSYNC)\>"
+icolor brightgreen "(^|^[[:space:]]*)(WATCH|WAVE|WORT_SEP)\>"
+icolor brightgreen "(^|^[[:space:]]*)(XLOAD|XRUN)\>"
+
+## commands with a blank in it
+
+icolor brightblue "(^|^[[:space:]]*)(ON\ ERROR\ CONT)"
+icolor brightblue "(^|^[[:space:]]*)(ON\ BREAK\ CONT)"
+icolor brightred "(^|^[[:space:]]*)(ECHO\ (ON|OFF))"
+
+
+## keywords
+icolor brightblue "\<(and|or|not|to|xor|not|then|step|var|tab|using)\>"
+
+## operators
+color white "[+*=\^]" "<" ">" "/" "-"
+color brightred "[@\~]" 
+
+
+## number constants
+icolor brightyellow "\b(([1-9][0-9]+)|0+)\.[0-9]+j?\b" "\b([1-9][0-9]*[Lj]?)\b" "\b0o?[0-7]*L?\b" "\b0x[1-9a-f][0-9a-f]*L?\b" "\b0b[01]+\b"
+icolor brightyellow "[\ ,\(]\#[1-9][0-9]*\b"
+
+## parentheses
+color magenta "[(){}]" "\[" "\]"
+
+# labels
+icolor red "(^|^[[:space:]]*)[^\ ^=.]*:"
+
+# Comments.
+color yellow "(^|^[[:space:]]*)'.*$"
+icolor yellow "(^|^[[:space:]]*)REM.*$"
+color yellow "!.*$"
+
+icolor brightwhite,blue "(^|^[[:space:]]*)PROGRAM.*$"
+
+#shebang line
+icolor brightwhite,green "^\#\!.*$"
+
+
+
+# Strings
+color yellow "<[^= ]*>" ""(\\.|[^"])*""
+
+## trailing spaces
+color ,green "[[:space:]]+$"
+
+## reminders
+color brightwhite,yellow "(FIXME|TODO|XXX)"
diff --git a/.nano/syntax/xml.nanorc b/.nano/syntax/xml.nanorc
new file mode 100644
index 00000000..809a0484
--- /dev/null
+++ b/.nano/syntax/xml.nanorc
@@ -0,0 +1,18 @@
+## Here is an example for xml files.
+##
+
+syntax "XML" ".*\.([jrs]?html?|xml|sgml?|rng|vue|mei|musicxml)$"
+header "<\?xml.*version=.*\?>"
+magic "(XML|SGML) (sub)?document"
+comment "<!--|-->"
+
+color white "^.+$"
+color green  start="<" end=">"
+color cyan   "<[^> ]+"
+color cyan   ">"
+color yellow start="<!DOCTYPE" end="[/]?>"
+color yellow start="<!--" end="-->"
+color red    "&[^;]*;"
+
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/xresources.nanorc b/.nano/syntax/xresources.nanorc
new file mode 100644
index 00000000..7773642c
--- /dev/null
+++ b/.nano/syntax/xresources.nanorc
@@ -0,0 +1,10 @@
+syntax "Xresources" "X(defaults|resources)$"
+
+color green     "^[[:alnum:]]+\*"
+color brightyellow "\*[[:alnum:]]+\:"
+color blue   "\<[0-9]+\>"
+color red "[*:=]"
+color brightcyan "\<(true|false)\>"
+color brightblack "(^|[[:space:]])#([^{].*)?$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/yaml.nanorc b/.nano/syntax/yaml.nanorc
new file mode 100644
index 00000000..b079c725
--- /dev/null
+++ b/.nano/syntax/yaml.nanorc
@@ -0,0 +1,21 @@
+syntax "yaml" "\.ya?ml$"
+#comment "#"
+header "^---" "%YAML"
+
+# Values
+color green "(:|^|\s)+\S+"
+
+# Keys
+color red "(^|\s+).*+\s*:(\s|$)"
+
+# Special values
+color yellow "[:-]\s+(true|false|null)\s*$"
+color yellow "[:-]\s+[0-9]+\.?[0-9]*(\s*($|#))"
+color yellow "(^| )!!(binary|bool|float|int|map|null|omap|seq|set|str) "
+
+# Separator
+color brightwhite "^\s+-"
+color brightwhite ":(\s|\t|$)"
+
+# Comments
+color brightblue "(^|[[:space:]])#.*$"
diff --git a/.nano/syntax/yum.nanorc b/.nano/syntax/yum.nanorc
new file mode 100644
index 00000000..b4639229
--- /dev/null
+++ b/.nano/syntax/yum.nanorc
@@ -0,0 +1,8 @@
+syntax "YUM" "\.repo$|yum.*\.conf$"
+
+color cyan "^[[:space:]]*[^=]*="
+color brightmagenta "^[[:space:]]*\[.*\]$"
+color brightyellow "\$(releasever|arch|basearch|uuid|YUM[0-9])"
+color brightblack "(^|[[:space:]])#([^{].*)?$"
+color ,green "[[:space:]]+$"
+color ,red "	+ +| +	+"
diff --git a/.nano/syntax/zsh.nanorc b/.nano/syntax/zsh.nanorc
new file mode 100644
index 00000000..4e77b369
--- /dev/null
+++ b/.nano/syntax/zsh.nanorc
@@ -0,0 +1,42 @@
+## Syntax highlighting for ZSH scripts (initially copied from sh.nanorc)
+syntax "ZSH" "\.zsh$" "\.?(zshenv|zprofile|zshrc|zlogin|zlogout|zsh-theme)$"
+header "^#!.*/(env +)?zsh( |$)"
+
+## Numbers
+color brightyellow "\b[0-9]+\b"
+
+## Conditionals and control flow
+color green "\<(always|break|bye|case|continue|disown|do|done|elif|else|esac|exit|fi|for|function|if|in|local|read|return|select|shift|then|time|until|while)\>"
+
+color green "(\{|\}|\(|\)|\;|\]|\[|`|\\|\$|<|>|!|=|&|\|)"
+## Conditional flags
+color green "-[Ldefgruwx]\>"
+color green "-(eq|ne|gt|lt|ge|le|s|n|z)\>"
+
+## Bash-inherited
+color brightblue "\<((un)?alias|bindkey|builtin|cd|command|declare|eval|exec|export|jobs|let|popd|pushd|set|source|typeset|umask|unset)\>"
+## ZSH-specific
+color brightblue "\<(add-zsh-hook|autoload|cdr|chdir|compinit|dirs|(dis|en)able|echotc|echoti|emulate|print|printf|prompt(init)?|(un)?setopt|zle|zmodload|zstyle|whence|zargs|zmv)\>"
+
+## Common linux commands
+color brightmagenta "\<((g|ig)?awk|find|diff|\w{0,4}grep|kill|killall|\w{0,4}less|make|pkill|sed|sudo|tar)\>"
+
+## Coreutils commands
+color brightmagenta "\<(base(32|64)|basename|cat|chcon|chgrp|chmod|chown|chroot|cksum|comm|cp|csplit|cut|date|dd|df|dir|dircolors|dirname|du|echo|env|expand|expr|factor|false|fmt|fold|head|hostid|id|install|join|link|ln|logname|ls|md5sum|mkdir|mkfifo|mknod|mktemp|mv|nice|nl|nohup|nproc|numfmt|od|paste|pathchk|pinky|pr|printenv|ptx|pwd|readlink|realpath|rm|rmdir|runcon|seq|(sha1|sha224|sha256|sha384|sha512)sum|shred|shuf|sleep|sort|split|stat|stdbuf|stty|sum|sync|tac|tail|tee|test|timeout|touch|tr|true|truncate|tsort|tty|uname|unexpand|uniq|unlink|users|vdir|wc|who|whoami|yes)\>"
+
+## Function definition
+icolor brightgreen "^\s+(function\s+)[0-9A-Z_]+\s+\(\)"
+
+## Variables
+icolor brightred "\$\{?[0-9A-Z_!@#$*?-]+\}?"
+
+## Strings
+color yellow ""(\\.|[^"])*""
+color yellow "'(\\.|[^'])*'"
+
+## Comments
+color cyan "(^|[[:space:]])#.*$"
+color brightcyan "(^|[[:space:]])##.*$"
+
+## Trailing spaces
+color ,green "[[:space:]]+$"
diff --git a/.nano/syntax/zshrc.nanorc b/.nano/syntax/zshrc.nanorc
new file mode 120000
index 00000000..925a14a4
--- /dev/null
+++ b/.nano/syntax/zshrc.nanorc
@@ -0,0 +1 @@
+zsh.nanorc
\ No newline at end of file
diff --git a/.nanorc b/.nanorc
new file mode 100644
index 00000000..525c099f
--- /dev/null
+++ b/.nanorc
@@ -0,0 +1,274 @@
+#
+# dotphiles : https://github.com/dotphiles/dotphiles
+#
+# Basic nano configuration
+#
+# Authors:
+#   Ben O'Hara <bohara@gmail.com>
+#
+
+# Use auto-indentation.
+set autoindent
+
+# Create backup files in "filename~"
+set backup
+
+# Set the directory where nano puts unique backup files if file backups
+# are enabled.
+set backupdir "~/.nano/backup"
+
+# Enable line numbering.
+set linenumbers
+
+# Do backwards searches by default.
+unset backwards
+
+# Use bold text instead of reverse video text.
+set boldtext
+
+# Automatically indent a newly created line to the same number of tabs and/or spaces 
+# as the previous line (or as the next line if the previous line is the beginning of 
+# a paragraph).
+set autoindent
+
+# Set the characters treated as closing brackets when justifying paragraphs.
+# They cannot contain blank characters. Only closing punctuation, optionally
+# followed by closing brackets, can end sentences. The default value
+# is ""')>]}".
+set brackets string ""')>]}"
+
+# Do case sensitive searches by default.
+set casesensitive
+
+# Constantly display the cursor position in the status bar.
+set constantshow
+
+# Use cut to end of line by default.
+unset cut
+
+# Wrap lines at column number n. If n is 0 or less, the maximum line length
+# will be the screen width less n columns. The default value is -8.
+set fill "-8"
+
+# Enable ~/.nano_history for saving and reading search/replace strings.
+set historylog
+
+# Set the opening and closing brackets that can be found by bracket searches.
+# They cannot contain blank characters. The former set must come before the
+# latter set, and both must be in the same order. The default value
+# is "(<[{)>]}".
+set matchbrackets string "(<[{)>]}"
+
+# Use of the blank line below the titlebar as extra editing space.
+unset morespace
+
+# Enable mouse support, so that mouse clicks can be used to place the cursor,
+# set the mark (with a double click), or execute shortcuts.
+unset mouse
+
+# Allow inserting files into their own buffers.
+set multibuffer
+
+# Don't convert files from DOS/Mac format.
+set noconvert
+
+# Don't follow symlinks when writing files.
+#unset nofollow
+
+# Don't display the help lists at the bottom of the screen.
+set nohelp
+
+# Don't add newlines to the ends of files.
+set nonewlines
+
+# Don't wrap text at all.
+unset nowrap
+
+# nano will only read and write files inside directory and its subdirectories.
+# Also, the current directory is changed to here, so files are inserted from
+# this diractory. By default, the operating directory feature is turned off.
+# set operatingdir "directory"
+
+# Preserve the XON and XOFF keys (^Q and ^S).
+unset preserve
+
+# Make Ctrl+Right stop at word ends instead of beginnings.
+set afterends
+
+# Set the characters treated as closing punctuation when justifying paragraphs.
+# They cannot contain blank characters. Only closing punctuation, optionally
+# followed by closing brackets, can end sentences. The default value is "!.?".
+set punct "!.?"
+
+# Do quick statusbar blanking. Statusbar messages will disappear after 1
+# keystroke instead of 25.
+unset quickblank
+
+# The email-quote string, used to justify email-quoted paragraphs. This is an
+# extended regular expression if your system supports them, otherwise a
+# literal string. The default value is "^([ \t]*[#:>\|}])+" if you have
+# extended regular expression support, or "> " otherwise. Note that '\t'
+# stands for a literal Tab character.
+set quotestr "^([ \\t]*[#:>\\|}])+"
+
+# Interpret the Delete key differently so that both Backspace and Delete work
+# properly. You should only need to use this option if Backspace acts like
+# Delete on your system.
+unset rebinddelete
+
+# Interpret the numeric keypad keys so that they all work properly. You should
+# only need to use this option if they don't, as mouse support won't work
+# properly with this option enabled.
+unset rebindkeypad
+
+# Do extended regular expression searches by default.
+set regexp
+
+# Make the Home key smarter. When Home is pressed anywhere but at the very
+# beginning of non-whitespace characters on a line, the cursor will jump to that
+# beginning (either forwards or backwards). If the cursor is already at that
+# position, it will jump to the true beginning of the line.
+set smarthome
+
+# Use smooth scrolling by default.
+set smooth
+
+# Use spelling checker spellprog instead of the built-in one, which calls
+# "spell".
+#set speller "aspell"
+
+# Allow nano to be suspended.
+set suspend
+
+# Use a tab size of "n" columns. The value of n must be greater than 0. The
+# default value is 8.
+set tabsize "4"
+
+# Convert typed tabs to spaces
+set tabstospaces
+
+# Save automatically on exit, don't prompt.
+unset tempfile
+
+# Disallow file modification.
+unset view
+
+# Set the two characters used to display the first characters of tabs and
+# spaces. They must be single-column characters.
+# set whitespace "string"
+
+# Detect word boundaries more accurately by treating punctuation characters
+# as part of a word.
+unset wordbounds
+
+## Enable the new (EXPERIMENTAL) generic undo code, not just for line cuts
+# set undo
+
+## Enable soft line wrapping (AKA full line display)
+# set softwrap
+
+## Key bindings
+## Please see nanorc(5) for more details on this
+##
+## Here are some samples to get you going
+##
+# bind M-W nowrap main
+# bind M-A casesens search
+# bind ^S research main
+
+## Set this if your backspace key sends delete most of the time (2.1.3+)
+# bind kdel backspace all
+
+## Nanorc files
+include "/usr/share/nano/nanorc.nanorc"
+include "~/.nano/syntax/apacheconf.nanorc"
+include "~/.nano/syntax/arduino.nanorc"
+include "~/.nano/syntax/asciidoc.nanorc"
+include "~/.nano/syntax/asm.nanorc"
+include "~/.nano/syntax/awk.nanorc"
+include "~/.nano/syntax/c.nanorc"
+include "~/.nano/syntax/clojure.nanorc"
+include "~/.nano/syntax/cmake.nanorc"
+include "~/.nano/syntax/coffeescript.nanorc"
+include "~/.nano/syntax/colortest.nanorc"
+include "~/.nano/syntax/conf.nanorc"
+include "~/.nano/syntax/csharp.nanorc"
+include "~/.nano/syntax/css.nanorc"
+include "~/.nano/syntax/cython.nanorc"
+include "~/.nano/syntax/dot.nanorc"
+include "~/.nano/syntax/dotenv.nanorc"
+include "~/.nano/syntax/email.nanorc"
+include "~/.nano/syntax/Dockerfile.nanorc"
+include "~/.nano/syntax/etc-hosts.nanorc"
+include "~/.nano/syntax/fish.nanorc"
+include "~/.nano/syntax/fortran.nanorc"
+include "~/.nano/syntax/gentoo.nanorc"
+include "~/.nano/syntax/git.nanorc"
+include "~/.nano/syntax/gitcommit.nanorc"
+include "~/.nano/syntax/glsl.nanorc"
+include "~/.nano/syntax/go.nanorc"
+include "~/.nano/syntax/gradle.nanorc"
+include "~/.nano/syntax/groff.nanorc"
+include "~/.nano/syntax/haml.nanorc"
+include "~/.nano/syntax/haskell.nanorc"
+include "~/.nano/syntax/html.nanorc"
+include "~/.nano/syntax/html.j2.nanorc"
+include "~/.nano/syntax/ical.nanorc"
+include "~/.nano/syntax/ini.nanorc"
+include "~/.nano/syntax/inputrc.nanorc"
+include "~/.nano/syntax/jade.nanorc"
+include "~/.nano/syntax/java.nanorc"
+include "~/.nano/syntax/javascript.nanorc"
+include "~/.nano/syntax/js.nanorc"
+include "~/.nano/syntax/json.nanorc"
+include "~/.nano/syntax/keymap.nanorc"
+include "~/.nano/syntax/kickstart.nanorc"
+include "~/.nano/syntax/kotlin.nanorc"
+include "~/.nano/syntax/ledger.nanorc"
+include "~/.nano/syntax/lisp.nanorc"
+include "~/.nano/syntax/lua.nanorc"
+include "~/.nano/syntax/makefile.nanorc"
+include "~/.nano/syntax/man.nanorc"
+include "~/.nano/syntax/markdown.nanorc"
+include "~/.nano/syntax/mpdconf.nanorc"
+include "~/.nano/syntax/mutt.nanorc"
+include "~/.nano/syntax/nanorc.nanorc"
+include "~/.nano/syntax/nginx.nanorc"
+include "~/.nano/syntax/nmap.nanorc"
+include "~/.nano/syntax/ocaml.nanorc"
+include "~/.nano/syntax/patch.nanorc"
+include "~/.nano/syntax/peg.nanorc"
+include "~/.nano/syntax/perl.nanorc"
+include "~/.nano/syntax/perl6.nanorc"
+include "~/.nano/syntax/php.nanorc"
+include "~/.nano/syntax/pkg-config.nanorc"
+include "~/.nano/syntax/pkgbuild.nanorc"
+include "~/.nano/syntax/po.nanorc"
+include "~/.nano/syntax/pov.nanorc"
+include "~/.nano/syntax/privoxy.nanorc"
+include "~/.nano/syntax/puppet.nanorc"
+include "~/.nano/syntax/pug.nanorc"
+include "~/.nano/syntax/python.nanorc"
+include "~/.nano/syntax/reST.nanorc"
+include "~/.nano/syntax/rpmspec.nanorc"
+include "~/.nano/syntax/ruby.nanorc"
+include "~/.nano/syntax/rust.nanorc"
+include "~/.nano/syntax/scala.nanorc"
+include "~/.nano/syntax/sed.nanorc"
+include "~/.nano/syntax/sh.nanorc"
+include "~/.nano/syntax/sls.nanorc"
+include "~/.nano/syntax/sql.nanorc"
+include "~/.nano/syntax/svn.nanorc"
+include "~/.nano/syntax/swift.nanorc"
+include "~/.nano/syntax/systemd.nanorc"
+include "~/.nano/syntax/tcl.nanorc"
+include "~/.nano/syntax/tex.nanorc"
+include "~/.nano/syntax/vala.nanorc"
+include "~/.nano/syntax/verilog.nanorc"
+include "~/.nano/syntax/vi.nanorc"
+include "~/.nano/syntax/xml.nanorc"
+include "~/.nano/syntax/xresources.nanorc"
+include "~/.nano/syntax/yaml.nanorc"
+include "~/.nano/syntax/yum.nanorc"
+include "~/.nano/syntax/zsh.nanorc"
+
