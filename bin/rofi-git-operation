#!/bin/bash
#set -eu

if [ -f "$HOME/bin/mycommon" ]; then
    . "$HOME/bin/mycommon"
fi

# Check and see if PWD is a git repository, and whether you are in the root of it or not.
function is_git_top_dir(){
    if [ "$(git rev-parse --is-inside-work-tree 2> /dev/null)" == "true" ]; then
        if [ -d .git ]; then
            return 0
        fi
    fi
    return 1
}

# Print status in a clear way.
function gstatus(){
    LC_ALL=C git status | grep -v "git "
}

function switchbranch(){
    local l=$(git branch | rofi -dmenu -i -p "Switch branch:")
    git checkout $l && return 0 || return 1
}

function listbranch(){
    LC_ALL=C git branch && return 0 || return 1
}

function stage(){
    local lu=$(LC_ALL=C git status | grep ":" | grep -v "Untrack" | awk '/not staged.*/,/*/' | grep -v "Change" | awk '{print $2}' | rofi -dmenu -p "Stage:")
    if [ -z "$lu" ]; then
        printf "%s" "Nothing selected to stage"
        echo
        return 1
    else
        s=$(git add $lu 2> /dev/null)
        printf "%s\n%s" "staged changes" "$lu"
        echo
        return 0
    fi
}

function unstage(){
    local lS=$(LC_ALL=C git status | grep ":" | grep -v "Untrack" | awk '/Changes to be committed.*/,/not staged*/' | grep -v "Change" | awk '/modified:/ {print $2}' | rofi -dmenu -p "Unstage:")
    if [ -z "$lS" ];then
        printf "%s" "Nothing selected to unstage"
        echo
        return 1
    else
        s=$(git restore --staged $lS  2> /dev/null)
        printf "%s\n%s" "Unstaged changes:" "$lS"
        echo
        return 0
    fi
}

function commit(){
    read -p 'enter your commit message: ' message
    git commit -S -v -m "$message"
}

function listremote(){
    local LR=$(git remote -v)
    printf "%s" "$LR"
    echo
}

function pull(){
    local br="$(git branch | tr -d '* ' | awk '{ NR==1; print $0}')"
    if [ -z "$1" ]; then
        git pull origin ${br} --allow-unrelated-histories
        git merge origin origin/${br}
    else
        git pull "$@"
    fi
}

function push(){
    if [ -z "$1" ]; then
        git push
    else
        git push "$@"
    fi
}

function main(){
    precheck "git"
    precheck "rofi"

    ! is_git_top_dir && echo "$(pwd) is not a root repository Directory" && return 1

    choice=$(echo -e "Status\nSwitch-branch\nList-branchs\nStage\nUnstage\nCommit\nList-remotes\nPull\nPush" | rofi -dmenu -i -p "Choice git Operation:")
    
    case "$choice" in
        Status) gstatus 
        ;;
        Switch-branch) switchbranch 
        ;;
        List-branchs) listbranch 
        ;;
        Stage) stage  
        ;;
        Unstage) unstage  
        ;;
        Commit) commit
        ;;
        List-remotes) listremote 
        ;;
        Pull) pull
        ;;
        Push) push
        ;;
    esac
    exit 0
}

main "$@"


