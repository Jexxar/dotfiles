#!/usr/bin/env bash
#set -eu

if [ -f "$HOME/bin/mycommon" ]; then
    . "$HOME/bin/mycommon"
fi

# Cleanup and Exit wm if possible.
function do_exit(){
    # Only works if X is running.
    ! is_running_X && log "X server is not running" && return 0

    # Screen must be unlocked first.
    #locked && return 0;
    
    dunstctl stop
    
    # Stop this session and user daemon running processes.
    local OLD_IFS=$IFS
    local cml=""
    local filter="$1"
    IFS=$'\n'
    for x in $(ps_ISO | awk -v u=$USER '{ if ($2 == u) { print $0 } }' | sed 's/bash/###/g' | sed 's/### //g' | sed 's/ sh -c//g' \
        | sed 's|/bin/sh -c ||g' | sed 's|/bin/sh ||g' | sed -E 's|/usr/bin/python.? ||g' | grep -v "$filter"); do
        cml=$(awk '{print $5}' <<< $x)
        cml="${cml##*/}"
        #log "stop_it $x"
        [ -n "$cml" ] && stop_it "$cml"
    done
    IFS=$OLD_IFS
    #log "$XDG_CURRENT_DESKTOP Exiting now..."
    if [ "$XDG_CURRENT_DESKTOP" == "Openbox" ]; then
        openbox --exit;
    else
        stop_it "dbus-daemon"
    fi
    # dbus-launch cleanup
    stop_it "dbus-launch"
    return 0
}

function do_test(){
    is_running_X && log "X is running" || log "X server down"
    pgrep -f dunst && log "dunst found" || log "dunst not found"
    # Stop this session and user daemon running processes.
    local OLD_IFS=$IFS
    local cml=""
    local filter="$1"
    IFS=$'\n'
    for x in $(ps_ISO | awk -v u=$USER '{ if ($2 == u) { print $0 } }' | sed 's/bash/###/g' | sed 's/### //g' | sed 's/ sh -c//g' \
        | sed 's|/bin/sh -c ||g' | sed 's|/bin/sh ||g' | sed -E 's|/usr/bin/python.? ||g' | grep -v "$filter"); do
        cml=$(awk '{print $5}' <<< $x)
        cml="${cml##*/}"
        log "stop_it $cml"
        #stop_it "$cml" "debug"
    done
    IFS=$OLD_IFS
    [ "$XDG_CURRENT_DESKTOP" == "Openbox" ] && log "openbox --exit;" || log "stop_it dbus-daemon"
    log "stop_it dbus-launch"
    return 0
}

function main(){
    precheck "xset"
    precheck "pgrep"
    precheck "pkill"
    precheck "wmctrl"
    precheck "xprop"
    local filter="${0##*/}\|###\|startx\|gconf\|dconf\|openbox\|dbus\|keeptty\|ssh-agent\|sd-pam\|gpg-agent\|sed\|grep\|dbus\|gvfs\|systemd --user\|/ps -aux\|contentproc\|plugin_host"
    local cmd=${1:-exit}

    # Workaround when XDG vars are not set 
    [ -z "$XDG_CURRENT_DESKTOP" ] && export XDG_CURRENT_DESKTOP="$(_wm)"
    [ -z "$XDG_CURRENT_DESKTOP" ] &&  log "_wm failed" && cmd="debug"

    case "$cmd" in
        exit)
            do_exit "$filter"
        ;;
        debug)
            do_test "$filter"
        ;;
        *)
            log "Unrecognized option: $1"
    esac
    return 0
}

main "$@"
