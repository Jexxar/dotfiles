#!/usr/bin/env bash
# Show local ip address
#set -eu

if [ -f "$HOME/bin/mycommon" ]; then
    . "$HOME/bin/mycommon"
fi

function do_ipv4_ID(){
    ip address | grep "inet" | grep -v 'inet6' | grep -v '127.0.0.1' | cut -d'/' -f1 | sed -e 's/inet//g;s/ //g;s/$/ /g'
}

function do_ipv6_ID(){
    ip address | grep "inet6" | grep -v '::1' | cut -d'/' -f1 | sed -e s'/inet6//g' | sed -e 's/ //g;s/$/ /g'
}

function do_ipboth_ID(){
    ip address | grep "inet" | grep -v '127.0.0.1' | grep -v '::1' | cut -d'/' -f1 | sed -e s'/inet6//g' | sed -e 's/inet//g;s/ //g;s/$/ /g'
}

function usage(){
    echo "Usage: ${0##*/} [options]"
    echo "Purpose: return local ip address"
    echo "       "
    echo "Options"
    echo "-4: Show ipv4 address(default)"
    echo "-6: Show ipv6 address"
    echo "-b: Show both ipv4 and ipv6 addresses"
    echo 
}

function main(){
    # Option strings
    SHORT=":4::6::b::h"
    LONG=":4,6,b,help"
    
    # Read the options
    OPTS=$(getopt --options $SHORT --long $LONG --name "$0" -- "$@")
    if [ $? -ne 0 ] ; then
        echo "Wrong parameters.OPTS=[$OPTS][ $* ]"
        usage
        exit 0
    fi
    precheck "ip"
    case "$1" in
        -4) do_ipv4_ID
        ;;
        -6) do_ipv6_ID
        ;;
        -b) do_ipboth_ID
        ;;
        -h|--help) usage
        ;;
        *) do_ipv4_ID
        ;;
    esac
    exit 0
}

main "$@"
