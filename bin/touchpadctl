#!/usr/bin/env bash
## $1 = "add" / "remove"
## $2 = %k from udev
set -eu

function usage() {
    echo "Usage: $(basename "$0") [Options]"
    echo "       "
    echo "Purpose: To enable or disable Touchpad"
    echo "       "
    echo "Options"
    echo "-h | --help : Show this help"
    echo "-d | --disable: Disable touchpad"
    echo "-e | --enable: Enable touchpad"
    echo "-a | --auto: Disable/Enable touchpad when mouse is/(is not) present"
    return 0;
}

function touch_hnd_noX(){
    local bind_mode_file="/sys/bus/serio/drivers/psmouse/bind_mode"
    local unbind_dev_file="/sys/bus/serio/drivers/psmouse/unbind"
    local device_id="serio1"

    case "$1" in
        -a | --auto)
            local cur_mode=$(grep "auto\|manual" $bind_mode_file)
            if [ "$cur_mode" == "auto" ]; then
                echo -n "manual" > $bind_mode_file && /usr/bin/logger -t Touchpadctl -- "Disabling the touchpad" || /usr/bin/logger -t Touchpadctl -- "Cannot disable touchpad"
                echo -n $device_id > $unbind_dev_file 2>/dev/null || true
            else
                echo -n "auto" > $bind_mode_file && /usr/bin/logger -t Touchpadctl -- "Enabling the touchpad" || /usr/bin/logger -t Touchpadctl -- "Cannot enable touchpad"
            fi
        ;;
        -d | --disable)
            echo -n "manual" > $bind_mode_file && /usr/bin/logger -t Touchpadctl -- "Disabling the touchpad" || /usr/bin/logger -t Touchpadctl -- "Cannot disable touchpad"
            echo -n $device_id > $unbind_dev_file 2>/dev/null || true
        ;;
        -e | --enable)
            echo -n "auto" > $bind_mode_file && /usr/bin/logger -t Touchpadctl -- "Enabling the touchpad" || /usr/bin/logger -t Touchpadctl -- "Cannot enable touchpad"
        ;;
        *)  usage
            exit 0
        ;;
    esac
}

function touch_hnd_X(){
    local usr="$2"
    local touch_id=$(/usr/bin/xinput list | \egrep -Eo 'Touchpad\s*id\=[0-9]{1,2}' | \egrep -Eo '[0-9]{1,2}')
    local touch_stt=$(/usr/bin/xinput list-props $touch_id | \grep 'Device Enabled' | \awk '{print $4}')
    [ $touch_id -eq 0 ] && /usr/bin/logger -t Touchpadctl -- "Touchpad device not found. $usr. ($XAUTHORITY - $DISPLAY)"
    
    case "$1" in
        -a | --auto )
            local mouse_id="$(xinput list | \egrep -Eo '[Mm]ouse\s*id\=[0-9]{1,2}' | \egrep -Eo '[0-9]{1,2}')"
            local mouse_stt=$(/usr/bin/xinput list-props $mouse_id | \grep 'Device Enabled' | \awk '{print $4}')
            if [ $mouse_id -ne 0 ] && [ $mouse_stt -eq 1 ]; then
                /usr/bin/xinput disable $touch_id
                /usr/bin/logger -t Touchpadctl -- "Additional external mice found. Touchpad disabled for $usr. ($XAUTHORITY - $DISPLAY)"
            else
                /usr/bin/xinput enable $touch_id
                /usr/bin/logger -t Touchpadctl -- "Additional external mice not found. Touchpad enabled for $usr. ($XAUTHORITY - $DISPLAY)"
            fi
        ;;
        -d | --disable )
            if [ $touch_stt -eq 1 ]; then
                /usr/bin/xinput disable $touch_id
                /usr/bin/logger -t Touchpadctl -- "Disabling touchpad for $usr. ($XAUTHORITY - $DISPLAY)"
            else
                /usr/bin/logger -t Touchpadctl -- "Touchpad already disabled for $usr. ($XAUTHORITY - $DISPLAY)"
            fi
        ;;
        -e | --enable )
            if [ $touch_stt -eq 0 ]; then
                /usr/bin/xinput enable $touch_id
                /usr/bin/logger -t Touchpadctl -- "Enabling touchpad for $usr. ($XAUTHORITY - $DISPLAY)"
            else
                /usr/bin/logger -t Touchpadctl -- "Touchpad already enabled for $usr. ($XAUTHORITY - $DISPLAY)"
            fi
        ;;
        *)  usage
            exit 0
        ;;
    esac
}

user_list="$(w -h | cut -d' ' -f1 | sort | uniq)"
user_id="$(id -u)"

function main(){
    if [ $# -eq 0 ]; then
        echo "Error: No arguments found"
        usage
        exit 1
    fi
    
    for u in ${user_list}; do
        ## Can't find a way to get another users DISPLAY variable from an isolated root environment. Have to set it manually.
        displ="$(sudo -Hiu "${u}" env | grep -e "^DISPLAY=" | cut -d'=' -f2)"
        [ -z "$displ" ] && displ=":0"
        export XAUTHORITY="$(sudo -Hiu "${u}" env | grep -e "^HOME=" | cut -d'=' -f2)/.Xauthority"
        export DISPLAY="${displ}"
        if [ -f "${XAUTHORITY}" ]; then
            # Check running X
            if ! xset q &>/dev/null; then
                /usr/bin/logger -t Touchpadctl -- "Xserver is not running."
                touch_hnd_noX "$1" "$u"
            else
                /usr/bin/logger -t Touchpadctl -- "Xserver is running."
                touch_hnd_X "$1" "$u"
            fi
        fi
    done
}

main "$@"

unset user_list
unset user_id
