#!/bin/bash
#                           ██            ████                
#                          ░░            ░██░                 
#   ██████  ██   ██  ██████ ██ ███████  ██████  ██████ 
#  ██░░░░  ░░██ ██  ██░░░░ ░██░░██░░░██░░░██░  ██░░░░██
# ░░█████   ░░███  ░░█████ ░██ ░██  ░██  ░██  ░██   ░██
#  ░░░░░██   ░██    ░░░░░██░██ ░██  ░██  ░██  ░██   ░██
#  ██████    ██     ██████ ░██ ███  ░██  ░██  ░░██████ 
# ░░░░░░   ██      ░░░░░░  ░░ ░░░   ░░   ░░    ░░░░░░  
#        ░░      
#
#  ▓▓▓▓▓▓▓▓▓▓
# ░▓ author ▓ xero <x@xero.nu>
# ░▓ code   ▓ http://code.xero.nu/dotfiles
# ░▓ mirror ▓ http://git.io/.files
# ░▓▓▓▓▓▓▓▓▓▓
# ░░░░░░░░░░
#
#█▓▒░ vars
#FULL=▓
#EMPTY=░
FULL=━
#EMPTY=━
#EMPTY=─
#FULL=┅
EMPTY=┄

# wth_ico=`~/bin/weather -i`
# brw_cnt=`brweather --option=CNT`
# brw_temp=`brweather --option=TN`
# brw_sterm=`brweather --option=STE`
# brw_umid=`brweather --option=umid`
# brw_dirv=`brweather --option=windd`
# brw_velv=`brweather --option=winds`
# brw_cld=`brweather --option=CLD`
# brw_pa=`brweather --option=PA`
# brw_ns=`brweather --option=SOLN1`
# brw_ps=`brweather --option=SOLP1`

name=$USER
host=`hostname`
battery=/sys/class/power_supply/BAT1
distro=`cat /etc/issue.net | sed "s/$/ \n/g"`
kernel=`uname -r`
pkgs=`dpkg --get-selections | grep -cv deinstall$`
bversion="$BASH_VERSION"
resolution="$(xrandr --nograb --current |\
                                      awk 'match($0,/[0-9]*\.[0-9]*\*/) {printf $1 " @ "\
                                           substr($0,RSTART,RLENGTH) "Hz "}')"
font=`gsettings get org.gnome.desktop.interface monospace-font-name | tr -d \'`

id="$(xprop -root -notype _NET_SUPPORTING_WM_CHECK)"
id="${id##* }"
wm="$(xprop -id "0xa0009b" -notype -len 100 -f _NET_WM_NAME 8t | awk '/_NET_WM_NAME/{print $3}' | sed "s/\"//g")"
[ -z "$wm" ] && wm="$DESKTOP_SESSION"
ob_them="$(xprop -root | awk '/_OB_THEME\(UTF8_STRING\)/ {print $3}' | tr -d \")"
seconds=seconds="$(< /proc/uptime)"
seconds="${seconds/.*}"
days="$((seconds / 60 / 60 / 24)) d "
hours="$((seconds / 60 / 60 % 24)) h "
mins="$((seconds / 60 % 60)) m"

# Format the days, hours and minutes.
function strip_date() {
    case "$1" in
        "0 "*) printf "%s" "" ;;
        "1 "*) printf "%s" "${1/s}" ;;
        *)     printf "%s" "$1" ;;
    esac
}

days="$(strip_date "$days")"
hours="$(strip_date "$hours")"
mins="$(strip_date "$mins")"
uptm="${days:+$days, }${hours:+$hours, }${mins}"
uptm="${uptm%', '}"
uptm="${uptm:-${seconds} seconds}"

#█▓▒░ progress bar
function draw()
{
    perc=$1
    size=$2
    inc=$(( perc * size / 100 ))
    out=
    if [ -z $3 ]; then
        color="36"
    else
        color="$3"
    fi 
    for v in `seq 0 $(( size - 1 ))`; do
        test "$v" -le "$inc"   \
        && out="${out}\e[1;${color}m${FULL}" \
        || out="${out}\e[0;${color}m${EMPTY}"
    done
    printf $out
}

#█▓▒░ colors
printf "\n"
i=0
while [ $i -le 6 ]; do
    printf "\e[$((i+41))m\e[$((i+30))m█▓▒░"
    i=$(($i+1))
done
printf "\e[37m█\e[0m▒░\n\n"


#█▓▒░ greets
#printf " \e[0m  Hello \e[36m$name\033[0m, i'm \e[34m$host\e[36m\n"
printf "\e[36m"
# echo "         Clima: $wth_ico $brw_cnt  -  Temperatura: $brw_temp ˚C  -  Sensação Termica: $brw_sterm ˚C"
# echo "       Umidade: $brw_umid %  -  Vento: $brw_dirv $brw_velv Km/h  -  Nebulosidade: $brw_cld %"
# echo " Nascer do Sol: $brw_ns ↑  -  Por do Sol: $brw_ps ↓ "


printf "\e[34m\n"
fortune -a
printf " \e[0m\n"

#█▓▒░ environment
printf " \e[1;33m     usuario \e[0m$name@$host\n"
printf " \e[1;33m      distro \e[0m$distro\n"
printf " \e[1;33m      kernel \e[0m$kernel\n"
printf " \e[1;33m      uptime \e[0m$uptm\n"
printf " \e[1;33m     pacotes \e[0m$pkgs\n"
printf " \e[1;33m          wm \e[0m$wm\n"
printf " \e[1;33m       fonte \e[0m$font\n"
printf " \e[1;33m       shell \e[0m$bversion\n"
printf " \e[1;33m   resolução \e[0m$resolution\n"
printf " \e[0m\n"

#█▓▒░ cpu
cpu=$(grep 'cpu ' /proc/stat | awk '{usage=($2+$4)*100/($2+$4+$5)} END {print usage}' | sed "s/\./,/g")
c_lvl=`printf "%.0f" $cpu`
printf "   \e[0;36m%-4s \e[1;36m%-5s %-25s \n" " cpu" "$c_lvl%" `draw $c_lvl 15` 

#█▓▒░ ram
ram=`free | awk '/Mem:/ {print int($3/$2 * 100.0)}'`
printf "   \e[0;36m%-4s \e[1;36m%-5s %-25s \n" " ram" "$ram%" `draw $ram 15` 

#█▓▒░ battery
b_full=$battery/charge_full
b_now=$battery/charge_now
bf=`cat $b_full`
bn=`cat $b_now`
charge=`printf $(( 100 * $bn / $bf ))`

case 1 in
    $(($charge <= 15)))
        color='31'
        ;;
    *)
        color='36'
        ;;
esac
printf "   \e[0;${color}m%-4s \e[1;${color}m%-5s %-25s \n" " bat" "$charge%" `draw $charge 15 $color`

#█▓▒░ volume
vol=`amixer get Master | awk '$0~/%/{print $4}' | tr -d '[]%'`
if amixer get Master | grep -q '\[off\]'; then
    color='31'
else
    color='36'
fi
printf "   \e[0;${color}m%-4s \e[1;${color}m%-5s %-25s \n" " vol" "$vol%" `draw $vol 15 $color` 

#█▓▒░ temperature
temp=`sensors | awk '/Core\ 0/ {gsub(/\+/,"",$3); gsub(/\..+/,"",$3)    ; print $3}'`
case 1 in
    $(($temp <= 50)))
        color='34'
        ;;
    $(($temp >= 75)))
        color='31'
        ;;
    *)
        color='36'
        ;;
esac
printf "   \e[0;${color}m%-4s \e[1;${color}m%-5s %-25s \n\n" "temp" "$temp°c " `draw $temp 15 $color`
