#!/usr/bin/env bash
#set -eu

if [ -f "$HOME/bin/mycommon" ]; then
    . "$HOME/bin/mycommon"
fi

# This script is intended to be run as the xautolock locker and notifier.
# It requires i3lock, and dunst is optional.

# Lock screen if possible.
function do_lock() {
    # Only works if X is running.
    if ! is_running_X ; then
        log "X server is not running";
        return 0;
    fi
    
    # Already locked
    locked && return 0;
    
    log "Locking screen now..."
    dunstctl stop
    
    # Fork both i3lock and its monitor to avoid blocking xautolock.
    # this must be the last command, and it must be 'non forking', as expected by 'xautolock'
    "$HOME"/bin/lock -gpf Comic-Sans-MS -- scrot -z &
        
    pid="$!"
    log "Waiting for PID $pid to end..."
    while 2>/dev/null kill -0 "$pid"; do
        sleep 1
    done
    
    dunstctl resume
}

function do_test() {
    is_running_X && log "X is running" || log "X server down"
    locked "debug" && log "Screen already locked" || log "Screen not locked";
    pgrep -f dunst && log "dunst found" || log "dunst not found"
}

cmd=${1:-lock}

case "$cmd" in
    lock)
        do_lock
    ;;
    debug)
        do_test
    ;;
    *)
        log "Unrecognized option: $1"
esac
