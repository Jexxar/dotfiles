#!/usr/bin/env bash
# This script is intended to be run as the xautolock locker and notifier.
# It requires i3lock, and dunst is optional.
#set -eu

if [ -f "$HOME/bin/mycommon" ]; then
    . "$HOME/bin/mycommon"
fi

# Lock screen if possible.
function do_lock() {
    [ $# -ge 1 ] && shift
    # Only works if X is running.
    ! is_running_X && log "X server is not running" && return 0
    
    # Already locked
    locked && log "do_lock(): already locked" && return 0;

    # Find locker
    if pidof light-locker >/dev/null; then
        light-locker-command -l >/dev/null 2>&1
        return 0
    elif pidof xscreensaver >/dev/null; then
        xscreensaver-command -lock >/dev/null 2>&1
        return 0
    elif pidof gnome-screensaver >/dev/null; then
        gnome-screensaver-command --lock
        return 0
    elif pidof mate-screensaver >/dev/null; then
        mate-screensaver-command -l >/dev/null 2>&1
        return 0
    elif pidof cinnamon-screensaver-pam-helper >/dev/null; then
        cinnamon-screensaver-command -l >/dev/null 2>&1
        return 0
    elif hash lock >/dev/null 2>&1; then
        $HOME/bin/lock -n -gpf Roboto  &
        pid="$!"
    elif hash slock >/dev/null 2>&1; then
        slock &
        pid="$!"
    elif hash xlock >/dev/null 2>&1; then
        xlock $* &
        pid="$!"
    elif hash i3lock >/dev/null 2>&1; then
        i3lock -d &
        pid="$!"
    elif hash slimlock >/dev/null; then
        slimlock &
        pid="$!"
    else
        # Try to fallback to xscreensaver
        if hash xscreensaver >/dev/null; then
            xscreensaver -nosplash >/dev/null 2>&1 &
            xscreensaver-command -lock >/dev/null 2>&1
            return 0
        fi
    fi
    
    #log "Locked and Waiting until (screen lock) PID $pid ends up..."
    while 2>/dev/null kill -0 "$pid"; do
        snore 2
    done
    
    # reset all running lockers
    reset_locker
}

function do_test() {
    [ $# -ge 1 ] && shift
    is_running_X && log "do_test(): X is running" || log "do_test(): X server down"
    locked && log "do_test(): Screen already locked" || log "do_test(): Screen not locked";
    if pidof light-locker >/dev/null; then
        log "light-locker-command -l"
    elif pidof xscreensaver >/dev/null; then
        log "xscreensaver-command -lock"
    elif pidof gnome-screensaver >/dev/null; then
        log "gnome-screensaver-command --lock"
    elif pidof mate-screensaver >/dev/null; then
        log "mate-screensaver-command -l"
    elif pidof cinnamon-screensaver-pam-helper >/dev/null; then
        log "cinnamon-screensaver-command -l"
    elif hash lock >/dev/null 2>&1; then
        precheck "convert"
        precheck "import"
        precheck "i3lock"
        log "$HOME/bin/lock -n -gpf Roboto"
    elif hash slock >/dev/null 2>&1; then
        log "slock"
    elif hash xlock >/dev/null 2>&1; then
        log "xlock $@" 
    elif hash i3lock >/dev/null 2>&1; then
        log "i3lock -d"
    elif hash slimlock >/dev/null; then
        log "slimlock"
    elif hash xscreensaver >/dev/null; then
        log "xscreensaver -nosplash"
        log "xscreensaver-command -lock"
    fi
    return 0
}

function main(){
    local cmd=${1:-lock}
    
    case "$cmd" in
        lock)
            do_lock "$@"
        ;;
        debug)
            do_test "$@"
        ;;
        *)
            log "Unrecognized option: $1"
    esac
    exit 0
}

main "$@"
