#!/usr/bin/env bash
# Author: Dolores Portalatin <hello@doloresportalatin.info>
# Dependencies: imagemagick, i3lock-color-git, scrot, wmctrl (optional)
set -o errexit -o noclobber -o nounset
if ! xset -q &>/dev/null; then
    echo "X server is not running or not detected."
    exit 1
fi
if ! hash wmctrl >/dev/null 2>&1; then
    echo "wmctrl is not installed."
    exit 1
fi
if ! hash convert >/dev/null 2>&1; then
    echo "convert is not installed."
    exit 1
fi
if ! hash i3lock >/dev/null 2>&1; then
    echo "i3lock is not installed."
    exit 1
fi
if ! hash import >/dev/null 2>&1; then
    echo "import is not installed."
    exit 1
fi

# get path where the script is located to find the lock icon
scriptpath=$(readlink -f -- "$0")
scriptpath=${scriptpath%/*}
image=$(mktemp --suffix=.png)
desktop=""
effect=(-filter Gaussian -resize 20% -define "filter:sigma=1.5" -resize 500.5%)
hue=(-level "0%,100%,0.6")
color="91"
#brightness value to compare to
value="85"
#i3lock_cmd=(i3lock -n -e -f --ignore-empty-password --beep --inactivity-timeout=10 -i "$image" -t --nofork)
i3lock_cmd=(i3lock -e -f --ignore-empty-password --beep --inactivity-timeout=10 -i "$image" -t )
shot_custom="false"

options="Options:
    -h, --help       This help menu.

    -d, --desktop    Attempt to minimize all windows before locking.

    -g, --greyscale  Set background to greyscale instead of color.

    -p, --pixelate   Pixelate the background instead of blur, runs faster.

    -f <fontname>, --font <fontname>  Set a custom font.

    -t <text>, --text <text> Set a custom text prompt.

    -l, --listfonts  Display a list of possible fonts for use with -f/--font.
                     Note: this option will not lock the screen, it displays
                     the list and exits immediately.

    -n, --nofork     Do not fork i3lock after starting.

    --               Must be last option. Set command to use for taking a
                     screenshot. Default is 'import -window root'. Using 'scrot'
                     or 'maim' will increase script speed and allow setting
                     custom flags like having a delay."

# move pipefail down as for some reason "convert -list font" returns 1
set -o pipefail
trap 'rm -f "$image"' INT TERM EXIT ERR
temp="$(getopt -o :hdnpglt:f: -l desktop,help,listfonts,nofork,pixelate,greyscale,text:,font: --name "$0" -- "$@")"
eval set -- "$temp"

# l10n support
text="Type password to unlock"
case "${LANG:-}" in
    de_* ) text="Bitte Passwort eingeben" ;; # Deutsch
    da_* ) text="Indtast adgangskode" ;; # Danish
    en_* ) text="Type password to unlock" ;; # English
    es_* ) text="Ingrese su contraseña" ;; # Española
    fr_* ) text="Entrez votre mot de passe" ;; # Français
    id_* ) text="Masukkan kata sandi Anda" ;; # Bahasa Indonesia
    it_* ) text="Inserisci la password" ;; # Italian
    lv_* ) text="Ievadi paroli" ;; # Latvian
    pl_* ) text="Podaj hasło" ;; # Polish
    pt_* ) text="Digite a senha para desbloquear" ;; # Português
    ru_* ) text="Введите пароль" ;; # Russian
    * ) text="Type password to unlock" ;; # Default to English
esac

while true ; do
    case "$1" in
        -h|--help)
            printf "Usage: %s [options]\n\n%s\n\n" "${0##*/}" "$options"; exit 0 ;;
        -d|--desktop) desktop=$(command -v wmctrl 2>/dev/null) ; shift ;;
        -g|--greyscale) hue=(-level "0%,100%,0.6" -set colorspace Gray -average) ; shift ;;
        -p|--pixelate) effect=(-scale 10% -scale 1000%) ; shift ;;
        -f|--font)
            case "$2" in
                "") shift 2 ;;
                *) font=$2 ; shift 2 ;;
            esac ;;
        -t|--text) text=$2 ; shift 2 ;;
        -l|--listfonts)
	    convert -list font | awk -F: '/Font: / { print $2 }' | sort -du | command -- ${PAGER:-less}
	    exit 0 ;;
	    -n|--nofork) i3lock_cmd+=(--nofork) ; shift ;;
        --) shift; shot_custom="true"; break ;;
        *) echo "error" ; exit 1 ;;
    esac
done

# If invoked with -d/--desktop, we'll attempt to minimize all windows (ie. show
# the desktop) before locking.
[ -n "$desktop" ] && "${desktop}" -k on

# If invoked with -- <command-line> at the end, we'll attempt 
# to use it as a custom screenshot app
if [[ $shot_custom == *"true"* ]] && [[ $# -gt 0 ]]; then
    shot=("$@");
else
    if hash scrot >/dev/null 2>&1; then
        shot=(scrot)
    elif hash import >/dev/null 2>&1; then
        shot=(import -window root)
    else
        [ -f /usr/share/backgrounds/default.png ] && shot=(/bin/cp /usr/share/backgrounds/default.png)
    fi
fi

command -- "${shot[@]}" "$image"

if hash convert >/dev/null 2>&1; then
    # default system sans-serif font
    if [ -z "$font" ]; then
        font=$(convert -list font | awk "{ a[NR] = \$2 } /family: $(fc-match sans -f "%{family}\n")/ { print a[NR-1]; exit }")
    fi
    # color sample
    color=$(convert "$image" -gravity center -crop 700x700+0+0 +repage -colorspace hsb -resize 1x1 txt:- | awk -F '[%$]' 'NR==2{gsub(",",""); printf "%.0f\n", $(NF-1)}');
    #white background image and black text and vice-versa
    if [[ $color -gt $value ]]; then
        bw="black"
        icon="$scriptpath/icons/lockdark.png"
        param=("--textcolor=00000000" "--insidecolor=0000001c" "--ringcolor=0000003e" \
            "--linecolor=00000000" "--keyhlcolor=ffffff80" "--ringvercolor=ffffff00" \
            "--separatorcolor=22222260" "--insidevercolor=ffffff1c" \
            "--ringwrongcolor=ffffff55" "--insidewrongcolor=ffffff1c")
    else 
        bw="white"
        icon="$scriptpath/icons/lock.png"
        param=("--textcolor=ffffff00" "--insidecolor=ffffff1c" "--ringcolor=ffffff3e" \
            "--linecolor=ffffff00" "--keyhlcolor=00000080" "--ringvercolor=00000000" \
            "--separatorcolor=22222260" "--insidevercolor=0000001c" \
            "--ringwrongcolor=00000055" "--insidewrongcolor=0000001c")
    fi
    convert "$image" "${hue[@]}" "${effect[@]}" -font "$font" -pointsize 26 -fill "$bw" -gravity center -annotate +0+160 "$text" "$icon" -gravity center -composite "$image"
fi 

# try to use i3lock with prepared parameters
 if ! "${i3lock_cmd[@]}" "${param[@]}" >/dev/null 2>&1; then
     # We have failed, lets get back to stock one
     "${i3lock_cmd[@]}"
 fi
#"${i3lock_cmd[@]}" "${param[@]}" >/dev/null 2>&1
# We have failed, lets get back to stock one
#[ $? -ne 0 ] && "${i3lock_cmd[@]}"

# As above, if we were passed -d/--desktop, we'll attempt to restore all windows
# after unlocking.
[ -n "$desktop" ] && "${desktop}" -k off
