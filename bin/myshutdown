#!/usr/bin/env bash
# This script is intended to be run as the main shutdown script for this installation.
#set -eu

if [ -f "$HOME/bin/mycommon" ]; then
    . "$HOME/bin/mycommon"
fi

function do_shutdown() {
    ! auth_user && log "user $USER has not polkit binding to poweroff" && return 0
    
    if is_running_X ; then
        locked && return 0
        checkfor "systemctl" && systemctl poweroff && return 0
        can_poweroff && dbus_poweroff && return 0
    else
        checkfor "systemctl" && systemctl poweroff && return 0
        checkfor "shutdown" && shutdown -h now && return 0
        checkfor "init" && init 0 && return 0
    fi
}

function do_test() {
    if is_running_X ; then
        log "X is running"
        locked && log "Screen locked" || log "Screen not locked"
        if auth_user; then
            log "user $USER has polkit binding to poweroff"
            checkfor "systemctl" && log "can use: systemctl poweroff"
            can_poweroff && log "can use: dbus logind to poweroff"
            checkfor "shutdown" && log "can use: shutdown -h now"
            checkfor "init" && log "can use: init 0"
        else
            log "user $USER has not polkit binding to poweroff"
        fi
    else
        log "X is not running"
        if auth_user; then
            log "user $USER has polkit binding to poweroff"
            checkfor "systemctl" && log "can use: systemctl poweroff"
            checkfor "shutdown" && log "can use: shutdown -h now"
            checkfor "init" && log "can use: init 0"
        else
            log "user $USER has not polkit binding to poweroff"
        fi
    fi
    return 0
}

function main(){
    precheck "xset"
    precheck "loginctl"
    
    local cmd=${1:-down}
    
    case "$cmd" in
        down)
            log "shutdown now..."
            do_shutdown
        ;;
        debug)
            do_test
        ;;
        *)
            log "Unrecognized option: $1"
    esac
    return 0
}

main "$@"