#!/usr/bin/env bash
if [ $# -eq 0 ]; then 
    exit 1
fi

if [ -f "$HOME/bin/mycommon" ]; then
    . "$HOME/bin/mycommon"
fi

# Dest user to change for
USRN=""

# l10n support
function do_ucaption(){
    # l10n support
    local text="User"
    case "${LANG:-}" in
        de_* ) text="Benutzer" ;; # Deutsch
        da_* ) text="Bruger" ;; # Danish
        en_* ) text="User" ;; # English
        es_* ) text="Usuario" ;; # Española
        fr_* ) text="Utilisateur" ;; # Français
        id_* ) text="Pengguna" ;; # Bahasa Indonesia
        it_* ) text="Utente" ;; # Italian
        lv_* ) text="Vartotojas" ;; # Latvian
        pl_* ) text="Użytkownik" ;; # Polish
        pt_* ) text="Usuário" ;; # Português
        ru_* ) text="пользователь" ;; # Russian
        * ) text="User" ;; # Default to English
    esac
    echo "$text" | sed -e "s/\b\(.\)/\u\1/g"
}

# l10n support
function do_utitle(){
    local text="Type an User"
    case "${LANG:-}" in
        de_* ) text="Bitte Benutzer" ;; # Deutsch
        da_* ) text="Indtast Bruger" ;; # Danish
        en_* ) text="Type an User" ;; # English
        es_* ) text="Ingrese su Usuario" ;; # Española
        fr_* ) text="Entrez votre Utilisateur" ;; # Français
        id_* ) text="Masukkan kata sandi Anda" ;; # Bahasa Indonesia
        it_* ) text="Inserisci la Utente" ;; # Italian
        lv_* ) text="Ievadi Vartotojas" ;; # Latvian
        pl_* ) text="Podaj Użytkownik" ;; # Polish
        pt_* ) text="Digite o Usuário" ;; # Português
        ru_* ) text="Введите пользователь" ;; # Russian
        * ) text="Type an User" ;; # Default to English
    esac
    echo "$text" 
}

# l10n support
function do_uauthmsg(){
    local text="Attempt"
    case "${LANG:-}" in
        de_* ) text="Versuch" ;; # Deutsch
        da_* ) text="Forsøg" ;; # Danish
        en_* ) text="Attempt" ;; # English
        es_* ) text="Intento" ;; # Española
        fr_* ) text="Tentative" ;; # Français
        id_* ) text="Mencoba" ;; # Bahasa Indonesia
        it_* ) text="Tentativa" ;; # Italian
        lv_* ) text="Bandymas" ;; # Latvian
        pl_* ) text="Próba" ;; # Polish
        pt_* ) text="Tentativa" ;; # Português
        ru_* ) text="попытка" ;; # Russian
        * ) text="Attempt" ;; # Default to English
    esac
    echo "$text" | sed -e "s/\b\(.\)/\u\1/g"
}

# l10n support
function do_wrongusr(){
    local text="Wrong User"
    case "${LANG:-}" in
        de_* ) text="Falsches Benutzer" ;; # Deutsch
        da_* ) text="Forkert Bruger" ;; # Danish
        en_* ) text="Wrong User" ;; # English
        es_* ) text="Usuario incorrecto" ;; # Española
        fr_* ) text="Mauvais Utilisateur" ;; # Français
        id_* ) text="Pengguna salah" ;; # Bahasa Indonesia
        it_* ) text="Utente errato" ;; # Italian
        lv_* ) text="Netinkamas Vartotojas" ;; # Latvian
        pl_* ) text="Złe Użytkownik" ;; # Polish
        pt_* ) text="Usuário Inválido" ;; # Português
        ru_* ) text="Неправильный пользователь" ;; # Russian
        * ) text="Wrong User" ;; # Default to English
    esac
    echo "$text" | sed -e "s/\b\(.\)/\u\1/g"
}

# l10n support
function locale_msgs() {
    if [ -z "$1" ]; then
        echo ""
        return 0
    fi

    local st_type="${1}"

    case "$st_type" in
        caption)
            do_ucaption
        ;;
        title)
            do_utitle
        ;;
        authmsg)
            do_uauthmsg
        ;;
        wrongusr)
            do_wrongusr
        ;;
        *)
            echo " "
        ;;
    esac
}


# Ask for username under non X env
function nonX_ask_usr() {
    local title="$(locale_msgs title)"
    local authm="$(locale_msgs authmsg)"
    local wrongu="$(locale_msgs wrongusr)"
    for p in $(seq 1 3 ); do
        printf "$title - $authm $p / 3: "
        read usrnm
        if [ $? -ne 0 ] || [ -z "$usrnm" ]; then
            USRN=""
            return 1
        fi
        if [ -n "$usrnm" ]; then
            id -u "$usrnm" &> /dev/null
            if [ $? -eq 0 ]; then
                USRN="$usrnm"
                return 0
            fi
        fi;
    done
    echo "$(basename $0) $wrongu"
    return 1
}

function X_ask_usr() {
    local usrnm="$USER"
    local title="$(locale_msgs title)"
    local authm="$(locale_msgs authmsg)"
    local wrongu="$(locale_msgs wrongusr)"
    for p in $(seq 1 3 ); do
        if [ -z "$(command -v yad)" ]; then
            usrnm=$(zenity --entry --text="$authm $p / 3" --title="$title" --entry-text "$usrnm")
        else
            usrnm=$(yad --entry --text="$authm $p / 3" --title="$title" --entry-text "$usrnm"  --center --on-top --width=260)
        fi
        if [ $? -ne 0 ]; then
            USRN=""
            return 1
        fi;
        if [ -n "$usrnm" ]; then
            id -u "$usrnm" &> /dev/null
            if [ $? -eq 0 ]; then
                USRN="$usrnm"
                return 0
            fi
        fi;
    done
    notify-send -t 5000 -i error "$wrongu"
    return 1
}

function do_ask_usr() {
    if is_running_X ; then
        X_ask_usr
    else
        nonX_ask_usr
    fi
}

# Choose an User 
do_ask_usr

if [ $? -ne 0 ] || [ -z "$USRN" ]; then
    exit 1
fi

# Ask for superuser permitions 
if [ $UID -ne 0 ]; then
    askpw || exit 1
fi

# Set IFS so that it won't consider spaces as entry separators.
# Without this, spaces in file/folder names can make the loop go wacky.
OLD_IFS=$IFS
IFS=$'\n'

if [ -z "$NAUTILUS_SCRIPT_SELECTED_FILE_PATHS" ]; then
    NAUTILUS_SCRIPT_SELECTED_FILE_PATHS=$*
fi

# Loop through the list (from either Nautilus or the command line)
for ARCHIVE_FULLPATH in $NAUTILUS_SCRIPT_SELECTED_FILE_PATHS; do
    if [ $UID -ne 0 ]; then 
        sudo chown -R $USRN:$USRN "$ARCHIVE_FULLPATH"
    else
        chown -R $USRN:$USRN "$ARCHIVE_FULLPATH"
    fi

    if [ $? -ne 0 ]; then 
        echo "chown error in $ARCHIVE_FULLPATH";
        exit 1
    fi    
done

IFS=$OLD_IFS
