#
# /etc/sysctl.conf - Configuration file for setting system variables
# See /etc/sysctl.d/ for additional system variables.
# See sysctl.conf (5) for information.
#

###
### GENERAL SYSTEM SECURITY OPTIONS ###
###

# Increase size of file handles and inode cache
#fs.file-max = 209708
fs.file-max = 2097152

# Restrict core dumps
#fs.suid_dumpable = 0

#kernel.domainname = example.com

# NUMA disable/enable
kernel.numa_balancing = 0

# ftrace enable/disable
kernel.ftrace_enabled = 0

# Uncomment the following to stop low-level messages on console
#kernel.printk = 3 4 1 3

# Sets the time before the kernel considers migrating a proccess to another core
#kernel.sched_migration_cost_ns = 5000000

# Group tasks by TTY
#kernel.sched_autogroup_enabled = 0

# Set maximum amount of memory allocated to shm maxm=6030360576 halfm=3015180288 calc=736127
#kernel.shmmax = 268435456
kernel.shmmax = 3015180287
kernel.shmall = 2097152
kernel.shmmni = 4096

#kernel.sem=<SEMMSL> <SEMMNS> <SEMOPM> <SEMMNI>
kernel.sem=250 256000 32 1536

# Controls the System Request debugging functionality of the kernel
kernel.sysrq = 0

# Controls whether core dumps will append the PID to the core filename.
# Useful for debugging multi-threaded applications.
#kernel.core_uses_pid = 1

#Allow for more PIDs
#kernel.pid_max = 65535

# The contents of /proc/<pid>/maps and smaps files are only visible to
# readers that are allowed to ptrace() the process
#kernel.maps_protect = 1

#Enable ExecShield protection
#kernel.exec-shield = 1
#kernel.randomize_va_space = 2

# Controls the maximum size of a message, in bytes
kernel.msgmnb = 65536

# Controls the default maxmimum size of a mesage queue
kernel.msgmax = 65536

# Controls the maximum number of message queue identifiers (and therefore the maximum number of queues)
kernel.msgmni=6144

# Hide exposed kernel pointers
kernel.kptr_restrict = 1


########## Tuning network performance and security #################

#
# Disable iptables deprecated helpers
# https://home.regit.org/netfilter-en/secure-use-of-helpers/
#net.netfilter.nf_conntrack_helper=0

# Size of the receive queue
# net.core.netdev_max_backlog = 250000
net.core.netdev_max_backlog = 150000
net.core.netdev_budget = 50000
net.core.netdev_budget_usecs = 5000

# For servers with tcp-heavy workloads, enable 'fq' queue management scheduler (kernel > 3.12)
#net.core.default_qdisc = fq_codel
net.core.default_qdisc = cake

# Default Socket Receive Buffer
net.core.rmem_default=31457280

# Maximum Socket Receive Buffer
#net.core.rmem_max = 67108864
#net.core.rmem_max = 8388608
net.core.rmem_max = 12582912

# Default Socket Send Buffer
net.core.wmem_default = 212992

# Maximum Socket Send Buffer
#net.core.wmem_max = 212992
net.core.wmem_max = 8388608

# Increase number of incoming connections backlog
#net.core.netdev_max_backlog = 65535
#net.core.netdev_max_backlog = 2500

# Increase size of RPC datagram queue length
net.unix.max_dgram_qlen = 50

# Increase the maximum amount of option memory buffers
net.core.optmem_max = 65535
#net.core.optmem_max = 25165824

# Increase number of incoming connections
net.core.somaxconn = 256


########## IPv4 networking start ##############

# Disables packet forwarding
net.ipv4.ip_forward = 0
net.ipv4.conf.all.forwarding = 0
net.ipv4.conf.default.forwarding = 0
net.ipv4.ip_default_ttl=129

# Uncomment the next two lines to enable Spoof protection (reverse-path filter)
# Turn on Source Address Verification in all interfaces to
# prevent some spoofing attacks
net.ipv4.conf.default.rp_filter=1
net.ipv4.conf.all.rp_filter=1

# Additional settings - Some network environments, however, require that these
# settings are disabled so review and enable them as needed.
#
# Do not accept ICMP redirects (prevent MITM attacks)
# Disable ICMP Redirect Acceptance
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
# _or_
# Accept ICMP redirects only for gateways listed in our default
# gateway list (enabled by default)
# net.ipv4.conf.all.secure_redirects = 1
#
# Do not send ICMP redirects (we are not a router)
net.ipv4.conf.all.send_redirects = 0
#
# Do not accept IP source route packets (we are not a router)
net.ipv4.conf.all.accept_source_route = 0

net.ipv4.conf.default.promote_secondaries = 1
net.ipv4.conf.all.promote_secondaries = 1

# Don't proxy arp for anyone
net.ipv4.conf.all.proxy_arp = 0
net.ipv4.conf.default.proxy_arp=0

# Don't relay bootp
net.ipv4.conf.all.bootp_relay = 0

# Enable ignoring broadcasts request
net.ipv4.icmp_echo_ignore_broadcasts = 1

# Enable bad error message Protection
net.ipv4.icmp_ignore_bogus_error_responses = 1

# Protect Against TCP Time-Wait
net.ipv4.tcp_rfc1337 = 1

# Uncomment the next line to enable TCP/IP SYN cookies
# See http://lwn.net/Articles/277146/
# Note: This may impact IPv6 TCP sessions too
#net.ipv4.tcp_syncookies=1

# Prevent SYN attack, enable SYNcookies (they will kick-in when the max_syn_backlog reached)
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_syn_retries = 2
net.ipv4.tcp_max_syn_backlog = 2048

# Number of times SYNACKs for passive TCP connection.
net.ipv4.tcp_synack_retries = 2

# Increase the tcp-time-wait buckets pool size to prevent simple DOS attacks
# try to reuse time-wait connections, but don't recycle them (recycle can break clients behind NAT)
#net.ipv4.tcp_tw_recycle = 0
net.ipv4.tcp_tw_reuse = 1
#net.ipv4.tcp_max_tw_buckets = 1440000

# Log Martian Packets
#net.ipv4.conf.all.log_martians = 1

#Enable TCP Fast Open
net.ipv4.tcp_fastopen = 3

# Decrease TIME_WAIT seconds default value for tcp_fin_timeout connection
net.ipv4.tcp_fin_timeout = 15

# Decrease the time default value for connections to keep alive
net.ipv4.tcp_keepalive_time = 60
net.ipv4.tcp_keepalive_probes = 9
net.ipv4.tcp_keepalive_intvl = 15

# Increase the tcp-time-wait buckets pool size to prevent simple DOS attacks
net.ipv4.tcp_max_tw_buckets = 1440000

# Limit number of orphans, each orphan can eat up to 16M (max wmem) of unswappable memory
net.ipv4.tcp_max_orphans = 16384
net.ipv4.tcp_orphan_retries = 0

# Increase the maximum memory used to reassemble IP fragments
#net.ipv4.ipfrag_high_thresh = 512000
#net.ipv4.ipfrag_low_thresh = 446464

# Increase the read-buffer space allocatable
#net.ipv4.tcp_rmem = 8192 87380 33554432
#net.ipv4.tcp_rmem = 4096 87380 8388608
net.ipv4.tcp_rmem = 4096 1048576 2097152
net.ipv4.udp_rmem_min = 8192

# Increase the write-buffer-space allocatable
#net.ipv4.tcp_wmem = 4096 87380 16777216
#net.ipv4.tcp_wmem = 4096 65535 8388608
net.ipv4.tcp_wmem = 4096 65535 16777216
net.ipv4.udp_wmem_min = 8192

# Increase the maximum total buffer-space allocatable
# This is measured in units of pages (4096 bytes)
#net.ipv4.tcp_mem = 131072 786432 1048576
net.ipv4.tcp_mem = 65535 131072 262144
net.ipv4.udp_mem = 65535 131072 262144

# Recommended  only for hosts with jumbo frames enabled
#net.ipv4.tcp_mtu_probing=1

# Disabling path MTU
net.ipv4.ip_no_pmtu_disc = 0

# Enable FACK congestion avoidance and fast retransmission
net.ipv4.tcp_fack = 1

# Don't allow the arp table to become bigger than this
net.ipv4.neigh.default.gc_thresh3 = 2048

# Tell the gc when to become aggressive with arp table cleaning.
# Adjust this based on size of the LAN. 1024 is suitable for most /24 networks
net.ipv4.neigh.default.gc_thresh2 = 1024

# Adjust where the gc will leave arp table alone - set to 32.
net.ipv4.neigh.default.gc_thresh1 = 32

# Adjust to arp table gc to clean-up more often
#net.ipv4.neigh.default.gc_interval = 30
net.ipv4.neigh.default.gc_interval = 5
net.ipv4.neigh.default.gc_stale_time = 120 

# Increase TCP queue length
net.ipv4.neigh.default.proxy_qlen = 96
net.ipv4.neigh.default.unres_qlen = 6

# Enable Explicit Congestion Notification (RFC 3168), disable it if it doesn't work for you
net.ipv4.tcp_ecn = 0
net.ipv4.tcp_reordering = 3

# Turn on window scaling which can enlarge the transfer window:
net.ipv4.tcp_window_scaling = 1

# Enable timestamps as defined in RFC1323:
net.ipv4.tcp_timestamps = 1

# Enable select acknowledgments:
net.ipv4.tcp_sack = 0

# Maximum number of remembered connection requests, which did not yet
# receive an acknowledgment from connecting client.
net.ipv4.tcp_max_syn_backlog = 8096

# Do not cache metrics on closing connections
net.ipv4.tcp_no_metrics_save = 1

net.ipv4.tcp_moderate_rcvbuf = 1
#net.ipv4.tcp_workaround_signed_windows=1
#net.ipv4.tcp_low_latency=1

# recommended default congestion control is htcp
net.ipv4.tcp_congestion_control=htcp
#net.ipv4.tcp_congestion_control=bbr
#net.ipv4.tcp_congestion_control=lp

# This will ensure that immediatly subsequent connections use the new values
net.ipv4.route.flush = 1

# Avoid falling back to slow start after a connection goes idle
# keeps our cwnd large with the keep alive connections (kernel > 3.6)
net.ipv4.tcp_slow_start_after_idle = 0

########## IPv4 networking ends ##############


########## IPv6 networking start ##############
net.ipv6.conf.all.disable_ipv6=0
net.ipv6.conf.default.disable_ipv6=0
net.ipv6.conf.lo.disable_ipv6=0
#net.ipv6.conf.wlp2s0:0.accept_ra=0

# Enabling this option disables Stateless Address Autoconfiguration
# based on Router Advertisements for this host
net.ipv6.conf.all.forwarding = 0
net.ipv6.conf.default.forwarding = 0

# Additional settings - Some network environments, however, require that these
# settings are disabled so review and enable them as needed.
#
# Do not accept ICMP redirects (prevent MITM attacks)
# Disable ICMP Redirect Acceptance
net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

# Do not accept IP source route packets (we are not a router)
net.ipv6.conf.all.accept_source_route = 0

# Number of Router Solicitations to send until assuming no routers are present.
# This is host and not router
net.ipv6.conf.default.router_solicitations = 0

# This will ensure that immediatly subsequent connections use the new values
net.ipv6.route.flush = 1

# Accept Router Preference in RA?
net.ipv6.conf.default.accept_ra_rtr_pref = 0

# Learn Prefix Information in Router Advertisement
net.ipv6.conf.default.accept_ra_pinfo = 0

# Setting controls whether the system will accept Hop Limit settings from a router advertisement
net.ipv6.conf.default.accept_ra_defrtr = 0

#router advertisements can cause the system to assign a global unicast address to an interface
net.ipv6.conf.default.autoconf = 0

#how many neighbor solicitations to send out per address?
net.ipv6.conf.default.dad_transmits = 0

# How many global unicast IPv6 addresses can be assigned to each interface?
net.ipv6.conf.default.max_addresses = 1

########## IPv6 networking ends ##############


###
### IMPROVE SYSTEM MEMORY MANAGEMENT ###
###

# Decrease swap usage to a more reasonable level
vm.swappiness = 15
vm.dirty_ratio = 10
vm.dirty_background_ratio = 5
#vm.dirty_background_bytes=4194304
#vm.dirty_bytes=4194304

# specifies the minimum virtual address that a process is allowed to mmap
vm.mmap_min_addr = 4096

# 10% overcommitment of available memory
vm.overcommit_ratio = 60
vm.overcommit_memory = 0

# Keep at least 64MB of free RAM space available
vm.min_free_kbytes = 65535

# Improve cache management
vm.vfs_cache_pressure=100
vm.drop_caches=3

#Kills the task that triggered the out-of-memory condition
vm.oom_kill_allocating_task=0

vm.nr_hugepages=64
